// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: denm_interface.proto

#include "denm_interface.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_denm_5finterface_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_denm_5finterface_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ImpactReductionContainer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_denm_5finterface_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_LocationContainer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_denm_5finterface_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ManagementContainer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_denm_5finterface_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SituationContainer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_denm_5finterface_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_AlacarteContainer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_denm_5finterface_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_DecentralizedEnvironmentalNotificationMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_denm_5finterface_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_StationaryVehicleContainer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_denm_5finterface_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_RoadWorksContainerExtended;
}  // namespace protobuf_denm_5finterface_2eproto
namespace protobuf_etsi_5fits_5fcdd_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ActionID;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CauseCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ClosedLanes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DangerousGoodsExtended;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeltaReferencePosition;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EnergyStorageType;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Heading;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RestrictedTypes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Speed;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VehicleIdentification;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_EventHistory;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ItineraryPath;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ReferenceDenms;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ReferencePosition;
}  // namespace protobuf_etsi_5fits_5fcdd_2eproto
namespace protobuf_itspduheader_5finterface_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_itspduheader_5finterface_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ItsPduHeader;
}  // namespace protobuf_itspduheader_5finterface_2eproto
class DENMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DENMessage>
      _instance;
} _DENMessage_default_instance_;
class DecentralizedEnvironmentalNotificationMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecentralizedEnvironmentalNotificationMessage>
      _instance;
} _DecentralizedEnvironmentalNotificationMessage_default_instance_;
class AlacarteContainerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlacarteContainer>
      _instance;
} _AlacarteContainer_default_instance_;
class ImpactReductionContainerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImpactReductionContainer>
      _instance;
} _ImpactReductionContainer_default_instance_;
class LocationContainerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocationContainer>
      _instance;
} _LocationContainer_default_instance_;
class ManagementContainerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ManagementContainer>
      _instance;
} _ManagementContainer_default_instance_;
class RoadWorksContainerExtendedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoadWorksContainerExtended>
      _instance;
} _RoadWorksContainerExtended_default_instance_;
class SituationContainerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SituationContainer>
      _instance;
} _SituationContainer_default_instance_;
class StationaryVehicleContainerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StationaryVehicleContainer>
      _instance;
} _StationaryVehicleContainer_default_instance_;
namespace protobuf_denm_5finterface_2eproto {
static void InitDefaultsDENMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DENMessage_default_instance_;
    new (ptr) ::DENMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DENMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DENMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDENMessage}, {
      &protobuf_itspduheader_5finterface_2eproto::scc_info_ItsPduHeader.base,
      &protobuf_denm_5finterface_2eproto::scc_info_DecentralizedEnvironmentalNotificationMessage.base,}};

static void InitDefaultsDecentralizedEnvironmentalNotificationMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DecentralizedEnvironmentalNotificationMessage_default_instance_;
    new (ptr) ::DecentralizedEnvironmentalNotificationMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DecentralizedEnvironmentalNotificationMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_DecentralizedEnvironmentalNotificationMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsDecentralizedEnvironmentalNotificationMessage}, {
      &protobuf_denm_5finterface_2eproto::scc_info_ManagementContainer.base,
      &protobuf_denm_5finterface_2eproto::scc_info_SituationContainer.base,
      &protobuf_denm_5finterface_2eproto::scc_info_LocationContainer.base,
      &protobuf_denm_5finterface_2eproto::scc_info_AlacarteContainer.base,}};

static void InitDefaultsAlacarteContainer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AlacarteContainer_default_instance_;
    new (ptr) ::AlacarteContainer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AlacarteContainer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_AlacarteContainer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsAlacarteContainer}, {
      &protobuf_denm_5finterface_2eproto::scc_info_ImpactReductionContainer.base,
      &protobuf_denm_5finterface_2eproto::scc_info_RoadWorksContainerExtended.base,
      &protobuf_denm_5finterface_2eproto::scc_info_StationaryVehicleContainer.base,}};

static void InitDefaultsImpactReductionContainer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ImpactReductionContainer_default_instance_;
    new (ptr) ::ImpactReductionContainer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ImpactReductionContainer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ImpactReductionContainer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImpactReductionContainer}, {}};

static void InitDefaultsLocationContainer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_LocationContainer_default_instance_;
    new (ptr) ::LocationContainer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LocationContainer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_LocationContainer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLocationContainer}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_Speed.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_Heading.base,}};

static void InitDefaultsManagementContainer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ManagementContainer_default_instance_;
    new (ptr) ::ManagementContainer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ManagementContainer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ManagementContainer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsManagementContainer}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ActionID.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ReferencePosition.base,}};

static void InitDefaultsRoadWorksContainerExtended() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RoadWorksContainerExtended_default_instance_;
    new (ptr) ::RoadWorksContainerExtended();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RoadWorksContainerExtended::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_RoadWorksContainerExtended =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsRoadWorksContainerExtended}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ClosedLanes.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_RestrictedTypes.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CauseCode.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ItineraryPath.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_DeltaReferencePosition.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ReferenceDenms.base,}};

static void InitDefaultsSituationContainer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SituationContainer_default_instance_;
    new (ptr) ::SituationContainer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SituationContainer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SituationContainer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSituationContainer}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CauseCode.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_EventHistory.base,}};

static void InitDefaultsStationaryVehicleContainer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StationaryVehicleContainer_default_instance_;
    new (ptr) ::StationaryVehicleContainer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StationaryVehicleContainer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_StationaryVehicleContainer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsStationaryVehicleContainer}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CauseCode.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_DangerousGoodsExtended.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VehicleIdentification.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_EnergyStorageType.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_DENMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DecentralizedEnvironmentalNotificationMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlacarteContainer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImpactReductionContainer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LocationContainer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ManagementContainer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RoadWorksContainerExtended.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SituationContainer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StationaryVehicleContainer.base);
}

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DENMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DENMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DENMessage, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DENMessage, denm_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DecentralizedEnvironmentalNotificationMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DecentralizedEnvironmentalNotificationMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DecentralizedEnvironmentalNotificationMessage, management_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DecentralizedEnvironmentalNotificationMessage, situation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DecentralizedEnvironmentalNotificationMessage, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DecentralizedEnvironmentalNotificationMessage, alacarte_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AlacarteContainer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AlacarteContainer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AlacarteContainer, laneposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AlacarteContainer, impactreduction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AlacarteContainer, externaltemperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AlacarteContainer, roadworks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AlacarteContainer, positioningsolution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AlacarteContainer, stationaryvehicle_),
  3,
  0,
  4,
  1,
  5,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImpactReductionContainer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImpactReductionContainer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImpactReductionContainer, heightloncarrleft_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImpactReductionContainer, heightloncarrright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImpactReductionContainer, posloncarrleft_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImpactReductionContainer, posloncarrright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImpactReductionContainer, positionofpillars_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImpactReductionContainer, poscentmass_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImpactReductionContainer, wheelbasevehicle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImpactReductionContainer, turningradius_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImpactReductionContainer, posfrontax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImpactReductionContainer, positionofoccupants_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImpactReductionContainer, vehiclemass_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImpactReductionContainer, requestresponseindication_),
  0,
  1,
  2,
  3,
  ~0u,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LocationContainer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LocationContainer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LocationContainer, eventspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LocationContainer, eventpositionheading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LocationContainer, traces_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LocationContainer, roadtype_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ManagementContainer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ManagementContainer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ManagementContainer, actionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ManagementContainer, detectiontime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ManagementContainer, referencetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ManagementContainer, termination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ManagementContainer, eventposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ManagementContainer, relevancedistance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ManagementContainer, relevancetrafficdirection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ManagementContainer, validityduration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ManagementContainer, transmissioninterval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ManagementContainer, stationtype_),
  0,
  2,
  3,
  4,
  1,
  5,
  6,
  9,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoadWorksContainerExtended, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoadWorksContainerExtended, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoadWorksContainerExtended, lightbarsireninuse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoadWorksContainerExtended, closedlanes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoadWorksContainerExtended, restriction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoadWorksContainerExtended, speedlimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoadWorksContainerExtended, incidentindication_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoadWorksContainerExtended, recommendedpath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoadWorksContainerExtended, startingpointspeedlimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoadWorksContainerExtended, trafficflowrule_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoadWorksContainerExtended, referencedenms_),
  6,
  0,
  1,
  7,
  2,
  3,
  4,
  8,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SituationContainer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SituationContainer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SituationContainer, informationquality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SituationContainer, eventtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SituationContainer, linkedcause_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SituationContainer, eventhistory_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StationaryVehicleContainer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StationaryVehicleContainer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StationaryVehicleContainer, stationarysince_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StationaryVehicleContainer, stationarycause_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StationaryVehicleContainer, carryingdangerousgoods_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StationaryVehicleContainer, numberofoccupants_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StationaryVehicleContainer, vehicleidentification_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StationaryVehicleContainer, energystoragetype_),
  4,
  0,
  1,
  5,
  2,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::DENMessage)},
  { 9, 18, sizeof(::DecentralizedEnvironmentalNotificationMessage)},
  { 22, 33, sizeof(::AlacarteContainer)},
  { 39, 56, sizeof(::ImpactReductionContainer)},
  { 68, 77, sizeof(::LocationContainer)},
  { 81, 96, sizeof(::ManagementContainer)},
  { 106, 120, sizeof(::RoadWorksContainerExtended)},
  { 129, 138, sizeof(::SituationContainer)},
  { 142, 153, sizeof(::StationaryVehicleContainer)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DENMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DecentralizedEnvironmentalNotificationMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AlacarteContainer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ImpactReductionContainer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LocationContainer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ManagementContainer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RoadWorksContainerExtended_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SituationContainer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StationaryVehicleContainer_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "denm_interface.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024denm_interface.proto\032\034itspduheader_int"
      "erface.proto\032\022etsi_its_cdd.proto\"i\n\nDENM"
      "essage\022\035\n\006header\030\001 \002(\0132\r.ItsPduHeader\022<\n"
      "\004denm\030\002 \002(\0132..DecentralizedEnvironmental"
      "NotificationMessage\"\315\001\n-DecentralizedEnv"
      "ironmentalNotificationMessage\022(\n\nmanagem"
      "ent\030\001 \002(\0132\024.ManagementContainer\022&\n\tsitua"
      "tion\030\002 \001(\0132\023.SituationContainer\022$\n\010locat"
      "ion\030\003 \001(\0132\022.LocationContainer\022$\n\010alacart"
      "e\030\004 \001(\0132\022.AlacarteContainer\"\231\002\n\021Alacarte"
      "Container\022\024\n\014lanePosition\030\001 \001(\005\0222\n\017impac"
      "tReduction\030\002 \001(\0132\031.ImpactReductionContai"
      "ner\022\033\n\023externalTemperature\030\003 \001(\005\022.\n\troad"
      "Works\030\004 \001(\0132\033.RoadWorksContainerExtended"
      "\0225\n\023positioningSolution\030\005 \001(\0162\030.Position"
      "ingSolutionType\0226\n\021stationaryVehicle\030\006 \001"
      "(\0132\033.StationaryVehicleContainer\"\376\002\n\030Impa"
      "ctReductionContainer\022\031\n\021heightLonCarrLef"
      "t\030\001 \002(\r\022\032\n\022heightLonCarrRight\030\002 \002(\r\022\026\n\016p"
      "osLonCarrLeft\030\003 \002(\r\022\027\n\017posLonCarrRight\030\004"
      " \002(\r\022\031\n\021positionOfPillars\030\005 \003(\r\022\023\n\013posCe"
      "ntMass\030\006 \002(\r\022\030\n\020wheelBaseVehicle\030\007 \002(\r\022\025"
      "\n\rturningRadius\030\010 \002(\r\022\022\n\nposFrontAx\030\t \002("
      "\r\0221\n\023positionOfOccupants\030\n \002(\0162\024.Positio"
      "nOfOccupants\022\023\n\013vehicleMass\030\013 \002(\r\022=\n\031req"
      "uestResponseIndication\030\014 \002(\0162\032.RequestRe"
      "sponseIndication\"\204\001\n\021LocationContainer\022\032"
      "\n\neventSpeed\030\001 \001(\0132\006.Speed\022&\n\024eventPosit"
      "ionHeading\030\002 \001(\0132\010.Heading\022\016\n\006traces\030\003 \002"
      "(\r\022\033\n\010roadType\030\004 \001(\0162\t.RoadType\"\374\002\n\023Mana"
      "gementContainer\022\033\n\010actionID\030\001 \002(\0132\t.Acti"
      "onID\022\025\n\rdetectionTime\030\002 \002(\004\022\025\n\rreference"
      "Time\030\003 \002(\004\022!\n\013termination\030\004 \001(\0162\014.Termin"
      "ation\022)\n\reventPosition\030\005 \002(\0132\022.Reference"
      "Position\022-\n\021relevanceDistance\030\006 \001(\0162\022.Re"
      "levanceDistance\022=\n\031relevanceTrafficDirec"
      "tion\030\007 \001(\0162\032.RelevanceTrafficDirection\022\035"
      "\n\020validityDuration\030\010 \001(\r:\003600\022\034\n\024transmi"
      "ssionInterval\030\t \001(\r\022!\n\013stationType\030\n \002(\016"
      "2\014.StationType\"\206\003\n\032RoadWorksContainerExt"
      "ended\022/\n\022lightBarSirenInUse\030\001 \001(\0162\023.Ligh"
      "tBarSirenInUse\022!\n\013closedLanes\030\002 \001(\0132\014.Cl"
      "osedLanes\022%\n\013restriction\030\003 \001(\0132\020.Restric"
      "tedTypes\022\022\n\nspeedLimit\030\004 \001(\r\022&\n\022incident"
      "Indication\030\005 \001(\0132\n.CauseCode\022\'\n\017recommen"
      "dedPath\030\006 \001(\0132\016.ItineraryPath\0228\n\027startin"
      "gPointSpeedLimit\030\007 \001(\0132\027.DeltaReferenceP"
      "osition\022%\n\017trafficFlowRule\030\010 \001(\0162\014.Traff"
      "icRule\022\'\n\016referenceDenms\030\t \001(\0132\017.Referen"
      "ceDenms\"\225\001\n\022SituationContainer\022\032\n\022inform"
      "ationQuality\030\001 \002(\r\022\035\n\teventType\030\002 \002(\0132\n."
      "CauseCode\022\037\n\013linkedCause\030\003 \001(\0132\n.CauseCo"
      "de\022#\n\014eventHistory\030\004 \001(\0132\r.EventHistory\""
      "\246\002\n\032StationaryVehicleContainer\022)\n\017statio"
      "narySince\030\001 \001(\0162\020.StationarySince\022#\n\017sta"
      "tionaryCause\030\002 \001(\0132\n.CauseCode\0227\n\026carryi"
      "ngDangerousGoods\030\003 \001(\0132\027.DangerousGoodsE"
      "xtended\022\031\n\021numberOfOccupants\030\004 \001(\r\0225\n\025ve"
      "hicleIdentification\030\005 \001(\0132\026.VehicleIdent"
      "ification\022-\n\021energyStorageType\030\006 \001(\0132\022.E"
      "nergyStorageType*A\n\013Termination\022\032\n\026TRMNT"
      "N_IS_CANCELLATION\020\000\022\026\n\022TRMNTN_IS_NEGATIO"
      "N\020\001P\000P\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2487);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "denm_interface.proto", &protobuf_RegisterTypes);
  ::protobuf_itspduheader_5finterface_2eproto::AddDescriptors();
  ::protobuf_etsi_5fits_5fcdd_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_denm_5finterface_2eproto
const ::google::protobuf::EnumDescriptor* Termination_descriptor() {
  protobuf_denm_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_denm_5finterface_2eproto::file_level_enum_descriptors[0];
}
bool Termination_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void DENMessage::InitAsDefaultInstance() {
  ::_DENMessage_default_instance_._instance.get_mutable()->header_ = const_cast< ::ItsPduHeader*>(
      ::ItsPduHeader::internal_default_instance());
  ::_DENMessage_default_instance_._instance.get_mutable()->denm_ = const_cast< ::DecentralizedEnvironmentalNotificationMessage*>(
      ::DecentralizedEnvironmentalNotificationMessage::internal_default_instance());
}
void DENMessage::clear_header() {
  if (header_ != NULL) header_->Clear();
  clear_has_header();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DENMessage::kHeaderFieldNumber;
const int DENMessage::kDenmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DENMessage::DENMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_denm_5finterface_2eproto::scc_info_DENMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DENMessage)
}
DENMessage::DENMessage(const DENMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::ItsPduHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_denm()) {
    denm_ = new ::DecentralizedEnvironmentalNotificationMessage(*from.denm_);
  } else {
    denm_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:DENMessage)
}

void DENMessage::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&denm_) -
      reinterpret_cast<char*>(&header_)) + sizeof(denm_));
}

DENMessage::~DENMessage() {
  // @@protoc_insertion_point(destructor:DENMessage)
  SharedDtor();
}

void DENMessage::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete denm_;
}

void DENMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DENMessage::descriptor() {
  ::protobuf_denm_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_denm_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DENMessage& DENMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_denm_5finterface_2eproto::scc_info_DENMessage.base);
  return *internal_default_instance();
}


void DENMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:DENMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(header_ != NULL);
      header_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(denm_ != NULL);
      denm_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DENMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DENMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ItsPduHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .DecentralizedEnvironmentalNotificationMessage denm = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_denm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DENMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DENMessage)
  return false;
#undef DO_
}

void DENMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DENMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ItsPduHeader header = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // required .DecentralizedEnvironmentalNotificationMessage denm = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_denm(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DENMessage)
}

::google::protobuf::uint8* DENMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DENMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ItsPduHeader header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // required .DecentralizedEnvironmentalNotificationMessage denm = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_denm(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DENMessage)
  return target;
}

size_t DENMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:DENMessage)
  size_t total_size = 0;

  if (has_header()) {
    // required .ItsPduHeader header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  if (has_denm()) {
    // required .DecentralizedEnvironmentalNotificationMessage denm = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *denm_);
  }

  return total_size;
}
size_t DENMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DENMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .ItsPduHeader header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);

    // required .DecentralizedEnvironmentalNotificationMessage denm = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *denm_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DENMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DENMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const DENMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DENMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DENMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DENMessage)
    MergeFrom(*source);
  }
}

void DENMessage::MergeFrom(const DENMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DENMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_header()->::ItsPduHeader::MergeFrom(from.header());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_denm()->::DecentralizedEnvironmentalNotificationMessage::MergeFrom(from.denm());
    }
  }
}

void DENMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DENMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DENMessage::CopyFrom(const DENMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DENMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DENMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  if (has_denm()) {
    if (!this->denm_->IsInitialized()) return false;
  }
  return true;
}

void DENMessage::Swap(DENMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DENMessage::InternalSwap(DENMessage* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(denm_, other->denm_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DENMessage::GetMetadata() const {
  protobuf_denm_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_denm_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DecentralizedEnvironmentalNotificationMessage::InitAsDefaultInstance() {
  ::_DecentralizedEnvironmentalNotificationMessage_default_instance_._instance.get_mutable()->management_ = const_cast< ::ManagementContainer*>(
      ::ManagementContainer::internal_default_instance());
  ::_DecentralizedEnvironmentalNotificationMessage_default_instance_._instance.get_mutable()->situation_ = const_cast< ::SituationContainer*>(
      ::SituationContainer::internal_default_instance());
  ::_DecentralizedEnvironmentalNotificationMessage_default_instance_._instance.get_mutable()->location_ = const_cast< ::LocationContainer*>(
      ::LocationContainer::internal_default_instance());
  ::_DecentralizedEnvironmentalNotificationMessage_default_instance_._instance.get_mutable()->alacarte_ = const_cast< ::AlacarteContainer*>(
      ::AlacarteContainer::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecentralizedEnvironmentalNotificationMessage::kManagementFieldNumber;
const int DecentralizedEnvironmentalNotificationMessage::kSituationFieldNumber;
const int DecentralizedEnvironmentalNotificationMessage::kLocationFieldNumber;
const int DecentralizedEnvironmentalNotificationMessage::kAlacarteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecentralizedEnvironmentalNotificationMessage::DecentralizedEnvironmentalNotificationMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_denm_5finterface_2eproto::scc_info_DecentralizedEnvironmentalNotificationMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DecentralizedEnvironmentalNotificationMessage)
}
DecentralizedEnvironmentalNotificationMessage::DecentralizedEnvironmentalNotificationMessage(const DecentralizedEnvironmentalNotificationMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_management()) {
    management_ = new ::ManagementContainer(*from.management_);
  } else {
    management_ = NULL;
  }
  if (from.has_situation()) {
    situation_ = new ::SituationContainer(*from.situation_);
  } else {
    situation_ = NULL;
  }
  if (from.has_location()) {
    location_ = new ::LocationContainer(*from.location_);
  } else {
    location_ = NULL;
  }
  if (from.has_alacarte()) {
    alacarte_ = new ::AlacarteContainer(*from.alacarte_);
  } else {
    alacarte_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:DecentralizedEnvironmentalNotificationMessage)
}

void DecentralizedEnvironmentalNotificationMessage::SharedCtor() {
  ::memset(&management_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&alacarte_) -
      reinterpret_cast<char*>(&management_)) + sizeof(alacarte_));
}

DecentralizedEnvironmentalNotificationMessage::~DecentralizedEnvironmentalNotificationMessage() {
  // @@protoc_insertion_point(destructor:DecentralizedEnvironmentalNotificationMessage)
  SharedDtor();
}

void DecentralizedEnvironmentalNotificationMessage::SharedDtor() {
  if (this != internal_default_instance()) delete management_;
  if (this != internal_default_instance()) delete situation_;
  if (this != internal_default_instance()) delete location_;
  if (this != internal_default_instance()) delete alacarte_;
}

void DecentralizedEnvironmentalNotificationMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DecentralizedEnvironmentalNotificationMessage::descriptor() {
  ::protobuf_denm_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_denm_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DecentralizedEnvironmentalNotificationMessage& DecentralizedEnvironmentalNotificationMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_denm_5finterface_2eproto::scc_info_DecentralizedEnvironmentalNotificationMessage.base);
  return *internal_default_instance();
}


void DecentralizedEnvironmentalNotificationMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:DecentralizedEnvironmentalNotificationMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(management_ != NULL);
      management_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(situation_ != NULL);
      situation_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(location_ != NULL);
      location_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(alacarte_ != NULL);
      alacarte_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DecentralizedEnvironmentalNotificationMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DecentralizedEnvironmentalNotificationMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ManagementContainer management = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_management()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SituationContainer situation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_situation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .LocationContainer location = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .AlacarteContainer alacarte = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_alacarte()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DecentralizedEnvironmentalNotificationMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DecentralizedEnvironmentalNotificationMessage)
  return false;
#undef DO_
}

void DecentralizedEnvironmentalNotificationMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DecentralizedEnvironmentalNotificationMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ManagementContainer management = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_management(), output);
  }

  // optional .SituationContainer situation = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_situation(), output);
  }

  // optional .LocationContainer location = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_location(), output);
  }

  // optional .AlacarteContainer alacarte = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_alacarte(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DecentralizedEnvironmentalNotificationMessage)
}

::google::protobuf::uint8* DecentralizedEnvironmentalNotificationMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DecentralizedEnvironmentalNotificationMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ManagementContainer management = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_management(), deterministic, target);
  }

  // optional .SituationContainer situation = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_situation(), deterministic, target);
  }

  // optional .LocationContainer location = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_location(), deterministic, target);
  }

  // optional .AlacarteContainer alacarte = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_alacarte(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DecentralizedEnvironmentalNotificationMessage)
  return target;
}

size_t DecentralizedEnvironmentalNotificationMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DecentralizedEnvironmentalNotificationMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .ManagementContainer management = 1;
  if (has_management()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *management_);
  }
  if (_has_bits_[0 / 32] & 14u) {
    // optional .SituationContainer situation = 2;
    if (has_situation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *situation_);
    }

    // optional .LocationContainer location = 3;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *location_);
    }

    // optional .AlacarteContainer alacarte = 4;
    if (has_alacarte()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *alacarte_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecentralizedEnvironmentalNotificationMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DecentralizedEnvironmentalNotificationMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const DecentralizedEnvironmentalNotificationMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DecentralizedEnvironmentalNotificationMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DecentralizedEnvironmentalNotificationMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DecentralizedEnvironmentalNotificationMessage)
    MergeFrom(*source);
  }
}

void DecentralizedEnvironmentalNotificationMessage::MergeFrom(const DecentralizedEnvironmentalNotificationMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DecentralizedEnvironmentalNotificationMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_management()->::ManagementContainer::MergeFrom(from.management());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_situation()->::SituationContainer::MergeFrom(from.situation());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_location()->::LocationContainer::MergeFrom(from.location());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_alacarte()->::AlacarteContainer::MergeFrom(from.alacarte());
    }
  }
}

void DecentralizedEnvironmentalNotificationMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DecentralizedEnvironmentalNotificationMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecentralizedEnvironmentalNotificationMessage::CopyFrom(const DecentralizedEnvironmentalNotificationMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DecentralizedEnvironmentalNotificationMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecentralizedEnvironmentalNotificationMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_management()) {
    if (!this->management_->IsInitialized()) return false;
  }
  if (has_situation()) {
    if (!this->situation_->IsInitialized()) return false;
  }
  if (has_location()) {
    if (!this->location_->IsInitialized()) return false;
  }
  if (has_alacarte()) {
    if (!this->alacarte_->IsInitialized()) return false;
  }
  return true;
}

void DecentralizedEnvironmentalNotificationMessage::Swap(DecentralizedEnvironmentalNotificationMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DecentralizedEnvironmentalNotificationMessage::InternalSwap(DecentralizedEnvironmentalNotificationMessage* other) {
  using std::swap;
  swap(management_, other->management_);
  swap(situation_, other->situation_);
  swap(location_, other->location_);
  swap(alacarte_, other->alacarte_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DecentralizedEnvironmentalNotificationMessage::GetMetadata() const {
  protobuf_denm_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_denm_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AlacarteContainer::InitAsDefaultInstance() {
  ::_AlacarteContainer_default_instance_._instance.get_mutable()->impactreduction_ = const_cast< ::ImpactReductionContainer*>(
      ::ImpactReductionContainer::internal_default_instance());
  ::_AlacarteContainer_default_instance_._instance.get_mutable()->roadworks_ = const_cast< ::RoadWorksContainerExtended*>(
      ::RoadWorksContainerExtended::internal_default_instance());
  ::_AlacarteContainer_default_instance_._instance.get_mutable()->stationaryvehicle_ = const_cast< ::StationaryVehicleContainer*>(
      ::StationaryVehicleContainer::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlacarteContainer::kLanePositionFieldNumber;
const int AlacarteContainer::kImpactReductionFieldNumber;
const int AlacarteContainer::kExternalTemperatureFieldNumber;
const int AlacarteContainer::kRoadWorksFieldNumber;
const int AlacarteContainer::kPositioningSolutionFieldNumber;
const int AlacarteContainer::kStationaryVehicleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlacarteContainer::AlacarteContainer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_denm_5finterface_2eproto::scc_info_AlacarteContainer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AlacarteContainer)
}
AlacarteContainer::AlacarteContainer(const AlacarteContainer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_impactreduction()) {
    impactreduction_ = new ::ImpactReductionContainer(*from.impactreduction_);
  } else {
    impactreduction_ = NULL;
  }
  if (from.has_roadworks()) {
    roadworks_ = new ::RoadWorksContainerExtended(*from.roadworks_);
  } else {
    roadworks_ = NULL;
  }
  if (from.has_stationaryvehicle()) {
    stationaryvehicle_ = new ::StationaryVehicleContainer(*from.stationaryvehicle_);
  } else {
    stationaryvehicle_ = NULL;
  }
  ::memcpy(&laneposition_, &from.laneposition_,
    static_cast<size_t>(reinterpret_cast<char*>(&positioningsolution_) -
    reinterpret_cast<char*>(&laneposition_)) + sizeof(positioningsolution_));
  // @@protoc_insertion_point(copy_constructor:AlacarteContainer)
}

void AlacarteContainer::SharedCtor() {
  ::memset(&impactreduction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&positioningsolution_) -
      reinterpret_cast<char*>(&impactreduction_)) + sizeof(positioningsolution_));
}

AlacarteContainer::~AlacarteContainer() {
  // @@protoc_insertion_point(destructor:AlacarteContainer)
  SharedDtor();
}

void AlacarteContainer::SharedDtor() {
  if (this != internal_default_instance()) delete impactreduction_;
  if (this != internal_default_instance()) delete roadworks_;
  if (this != internal_default_instance()) delete stationaryvehicle_;
}

void AlacarteContainer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AlacarteContainer::descriptor() {
  ::protobuf_denm_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_denm_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AlacarteContainer& AlacarteContainer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_denm_5finterface_2eproto::scc_info_AlacarteContainer.base);
  return *internal_default_instance();
}


void AlacarteContainer::Clear() {
// @@protoc_insertion_point(message_clear_start:AlacarteContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(impactreduction_ != NULL);
      impactreduction_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(roadworks_ != NULL);
      roadworks_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(stationaryvehicle_ != NULL);
      stationaryvehicle_->Clear();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&laneposition_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&positioningsolution_) -
        reinterpret_cast<char*>(&laneposition_)) + sizeof(positioningsolution_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AlacarteContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AlacarteContainer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 lanePosition = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_laneposition();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &laneposition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ImpactReductionContainer impactReduction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_impactreduction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 externalTemperature = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_externaltemperature();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &externaltemperature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .RoadWorksContainerExtended roadWorks = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_roadworks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PositioningSolutionType positioningSolution = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PositioningSolutionType_IsValid(value)) {
            set_positioningsolution(static_cast< ::PositioningSolutionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .StationaryVehicleContainer stationaryVehicle = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stationaryvehicle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AlacarteContainer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AlacarteContainer)
  return false;
#undef DO_
}

void AlacarteContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AlacarteContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 lanePosition = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->laneposition(), output);
  }

  // optional .ImpactReductionContainer impactReduction = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_impactreduction(), output);
  }

  // optional int32 externalTemperature = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->externaltemperature(), output);
  }

  // optional .RoadWorksContainerExtended roadWorks = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_roadworks(), output);
  }

  // optional .PositioningSolutionType positioningSolution = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->positioningsolution(), output);
  }

  // optional .StationaryVehicleContainer stationaryVehicle = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_stationaryvehicle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AlacarteContainer)
}

::google::protobuf::uint8* AlacarteContainer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AlacarteContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 lanePosition = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->laneposition(), target);
  }

  // optional .ImpactReductionContainer impactReduction = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_impactreduction(), deterministic, target);
  }

  // optional int32 externalTemperature = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->externaltemperature(), target);
  }

  // optional .RoadWorksContainerExtended roadWorks = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_roadworks(), deterministic, target);
  }

  // optional .PositioningSolutionType positioningSolution = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->positioningsolution(), target);
  }

  // optional .StationaryVehicleContainer stationaryVehicle = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_stationaryvehicle(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlacarteContainer)
  return target;
}

size_t AlacarteContainer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlacarteContainer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional .ImpactReductionContainer impactReduction = 2;
    if (has_impactreduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *impactreduction_);
    }

    // optional .RoadWorksContainerExtended roadWorks = 4;
    if (has_roadworks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *roadworks_);
    }

    // optional .StationaryVehicleContainer stationaryVehicle = 6;
    if (has_stationaryvehicle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stationaryvehicle_);
    }

    // optional int32 lanePosition = 1;
    if (has_laneposition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->laneposition());
    }

    // optional int32 externalTemperature = 3;
    if (has_externaltemperature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->externaltemperature());
    }

    // optional .PositioningSolutionType positioningSolution = 5;
    if (has_positioningsolution()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->positioningsolution());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlacarteContainer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AlacarteContainer)
  GOOGLE_DCHECK_NE(&from, this);
  const AlacarteContainer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AlacarteContainer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AlacarteContainer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AlacarteContainer)
    MergeFrom(*source);
  }
}

void AlacarteContainer::MergeFrom(const AlacarteContainer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlacarteContainer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_impactreduction()->::ImpactReductionContainer::MergeFrom(from.impactreduction());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_roadworks()->::RoadWorksContainerExtended::MergeFrom(from.roadworks());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_stationaryvehicle()->::StationaryVehicleContainer::MergeFrom(from.stationaryvehicle());
    }
    if (cached_has_bits & 0x00000008u) {
      laneposition_ = from.laneposition_;
    }
    if (cached_has_bits & 0x00000010u) {
      externaltemperature_ = from.externaltemperature_;
    }
    if (cached_has_bits & 0x00000020u) {
      positioningsolution_ = from.positioningsolution_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AlacarteContainer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AlacarteContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlacarteContainer::CopyFrom(const AlacarteContainer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlacarteContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlacarteContainer::IsInitialized() const {
  if (has_impactreduction()) {
    if (!this->impactreduction_->IsInitialized()) return false;
  }
  if (has_roadworks()) {
    if (!this->roadworks_->IsInitialized()) return false;
  }
  if (has_stationaryvehicle()) {
    if (!this->stationaryvehicle_->IsInitialized()) return false;
  }
  return true;
}

void AlacarteContainer::Swap(AlacarteContainer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlacarteContainer::InternalSwap(AlacarteContainer* other) {
  using std::swap;
  swap(impactreduction_, other->impactreduction_);
  swap(roadworks_, other->roadworks_);
  swap(stationaryvehicle_, other->stationaryvehicle_);
  swap(laneposition_, other->laneposition_);
  swap(externaltemperature_, other->externaltemperature_);
  swap(positioningsolution_, other->positioningsolution_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AlacarteContainer::GetMetadata() const {
  protobuf_denm_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_denm_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImpactReductionContainer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImpactReductionContainer::kHeightLonCarrLeftFieldNumber;
const int ImpactReductionContainer::kHeightLonCarrRightFieldNumber;
const int ImpactReductionContainer::kPosLonCarrLeftFieldNumber;
const int ImpactReductionContainer::kPosLonCarrRightFieldNumber;
const int ImpactReductionContainer::kPositionOfPillarsFieldNumber;
const int ImpactReductionContainer::kPosCentMassFieldNumber;
const int ImpactReductionContainer::kWheelBaseVehicleFieldNumber;
const int ImpactReductionContainer::kTurningRadiusFieldNumber;
const int ImpactReductionContainer::kPosFrontAxFieldNumber;
const int ImpactReductionContainer::kPositionOfOccupantsFieldNumber;
const int ImpactReductionContainer::kVehicleMassFieldNumber;
const int ImpactReductionContainer::kRequestResponseIndicationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImpactReductionContainer::ImpactReductionContainer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_denm_5finterface_2eproto::scc_info_ImpactReductionContainer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ImpactReductionContainer)
}
ImpactReductionContainer::ImpactReductionContainer(const ImpactReductionContainer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      positionofpillars_(from.positionofpillars_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&heightloncarrleft_, &from.heightloncarrleft_,
    static_cast<size_t>(reinterpret_cast<char*>(&requestresponseindication_) -
    reinterpret_cast<char*>(&heightloncarrleft_)) + sizeof(requestresponseindication_));
  // @@protoc_insertion_point(copy_constructor:ImpactReductionContainer)
}

void ImpactReductionContainer::SharedCtor() {
  ::memset(&heightloncarrleft_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requestresponseindication_) -
      reinterpret_cast<char*>(&heightloncarrleft_)) + sizeof(requestresponseindication_));
}

ImpactReductionContainer::~ImpactReductionContainer() {
  // @@protoc_insertion_point(destructor:ImpactReductionContainer)
  SharedDtor();
}

void ImpactReductionContainer::SharedDtor() {
}

void ImpactReductionContainer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImpactReductionContainer::descriptor() {
  ::protobuf_denm_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_denm_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImpactReductionContainer& ImpactReductionContainer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_denm_5finterface_2eproto::scc_info_ImpactReductionContainer.base);
  return *internal_default_instance();
}


void ImpactReductionContainer::Clear() {
// @@protoc_insertion_point(message_clear_start:ImpactReductionContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  positionofpillars_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&heightloncarrleft_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&posfrontax_) -
        reinterpret_cast<char*>(&heightloncarrleft_)) + sizeof(posfrontax_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&positionofoccupants_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&requestresponseindication_) -
        reinterpret_cast<char*>(&positionofoccupants_)) + sizeof(requestresponseindication_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ImpactReductionContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ImpactReductionContainer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 heightLonCarrLeft = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_heightloncarrleft();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heightloncarrleft_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 heightLonCarrRight = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_heightloncarrright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heightloncarrright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 posLonCarrLeft = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_posloncarrleft();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posloncarrleft_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 posLonCarrRight = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_posloncarrright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posloncarrright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 positionOfPillars = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40u, input, this->mutable_positionofpillars())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_positionofpillars())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 posCentMass = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_poscentmass();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &poscentmass_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 wheelBaseVehicle = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_wheelbasevehicle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wheelbasevehicle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 turningRadius = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_turningradius();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &turningradius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 posFrontAx = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_posfrontax();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posfrontax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PositionOfOccupants positionOfOccupants = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PositionOfOccupants_IsValid(value)) {
            set_positionofoccupants(static_cast< ::PositionOfOccupants >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                10, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 vehicleMass = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_vehiclemass();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vehiclemass_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .RequestResponseIndication requestResponseIndication = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::RequestResponseIndication_IsValid(value)) {
            set_requestresponseindication(static_cast< ::RequestResponseIndication >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                12, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ImpactReductionContainer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ImpactReductionContainer)
  return false;
#undef DO_
}

void ImpactReductionContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ImpactReductionContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 heightLonCarrLeft = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->heightloncarrleft(), output);
  }

  // required uint32 heightLonCarrRight = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->heightloncarrright(), output);
  }

  // required uint32 posLonCarrLeft = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->posloncarrleft(), output);
  }

  // required uint32 posLonCarrRight = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->posloncarrright(), output);
  }

  // repeated uint32 positionOfPillars = 5;
  for (int i = 0, n = this->positionofpillars_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->positionofpillars(i), output);
  }

  // required uint32 posCentMass = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->poscentmass(), output);
  }

  // required uint32 wheelBaseVehicle = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->wheelbasevehicle(), output);
  }

  // required uint32 turningRadius = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->turningradius(), output);
  }

  // required uint32 posFrontAx = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->posfrontax(), output);
  }

  // required .PositionOfOccupants positionOfOccupants = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->positionofoccupants(), output);
  }

  // required uint32 vehicleMass = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->vehiclemass(), output);
  }

  // required .RequestResponseIndication requestResponseIndication = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->requestresponseindication(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ImpactReductionContainer)
}

::google::protobuf::uint8* ImpactReductionContainer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ImpactReductionContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 heightLonCarrLeft = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->heightloncarrleft(), target);
  }

  // required uint32 heightLonCarrRight = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->heightloncarrright(), target);
  }

  // required uint32 posLonCarrLeft = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->posloncarrleft(), target);
  }

  // required uint32 posLonCarrRight = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->posloncarrright(), target);
  }

  // repeated uint32 positionOfPillars = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(5, this->positionofpillars_, target);

  // required uint32 posCentMass = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->poscentmass(), target);
  }

  // required uint32 wheelBaseVehicle = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->wheelbasevehicle(), target);
  }

  // required uint32 turningRadius = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->turningradius(), target);
  }

  // required uint32 posFrontAx = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->posfrontax(), target);
  }

  // required .PositionOfOccupants positionOfOccupants = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->positionofoccupants(), target);
  }

  // required uint32 vehicleMass = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->vehiclemass(), target);
  }

  // required .RequestResponseIndication requestResponseIndication = 12;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->requestresponseindication(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ImpactReductionContainer)
  return target;
}

size_t ImpactReductionContainer::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ImpactReductionContainer)
  size_t total_size = 0;

  if (has_heightloncarrleft()) {
    // required uint32 heightLonCarrLeft = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->heightloncarrleft());
  }

  if (has_heightloncarrright()) {
    // required uint32 heightLonCarrRight = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->heightloncarrright());
  }

  if (has_posloncarrleft()) {
    // required uint32 posLonCarrLeft = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->posloncarrleft());
  }

  if (has_posloncarrright()) {
    // required uint32 posLonCarrRight = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->posloncarrright());
  }

  if (has_poscentmass()) {
    // required uint32 posCentMass = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->poscentmass());
  }

  if (has_wheelbasevehicle()) {
    // required uint32 wheelBaseVehicle = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wheelbasevehicle());
  }

  if (has_turningradius()) {
    // required uint32 turningRadius = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->turningradius());
  }

  if (has_posfrontax()) {
    // required uint32 posFrontAx = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->posfrontax());
  }

  if (has_positionofoccupants()) {
    // required .PositionOfOccupants positionOfOccupants = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->positionofoccupants());
  }

  if (has_vehiclemass()) {
    // required uint32 vehicleMass = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehiclemass());
  }

  if (has_requestresponseindication()) {
    // required .RequestResponseIndication requestResponseIndication = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->requestresponseindication());
  }

  return total_size;
}
size_t ImpactReductionContainer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ImpactReductionContainer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000007ff) ^ 0x000007ff) == 0) {  // All required fields are present.
    // required uint32 heightLonCarrLeft = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->heightloncarrleft());

    // required uint32 heightLonCarrRight = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->heightloncarrright());

    // required uint32 posLonCarrLeft = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->posloncarrleft());

    // required uint32 posLonCarrRight = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->posloncarrright());

    // required uint32 posCentMass = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->poscentmass());

    // required uint32 wheelBaseVehicle = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wheelbasevehicle());

    // required uint32 turningRadius = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->turningradius());

    // required uint32 posFrontAx = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->posfrontax());

    // required .PositionOfOccupants positionOfOccupants = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->positionofoccupants());

    // required uint32 vehicleMass = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vehiclemass());

    // required .RequestResponseIndication requestResponseIndication = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->requestresponseindication());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint32 positionOfPillars = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->positionofpillars_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->positionofpillars_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImpactReductionContainer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ImpactReductionContainer)
  GOOGLE_DCHECK_NE(&from, this);
  const ImpactReductionContainer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImpactReductionContainer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ImpactReductionContainer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ImpactReductionContainer)
    MergeFrom(*source);
  }
}

void ImpactReductionContainer::MergeFrom(const ImpactReductionContainer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ImpactReductionContainer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  positionofpillars_.MergeFrom(from.positionofpillars_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      heightloncarrleft_ = from.heightloncarrleft_;
    }
    if (cached_has_bits & 0x00000002u) {
      heightloncarrright_ = from.heightloncarrright_;
    }
    if (cached_has_bits & 0x00000004u) {
      posloncarrleft_ = from.posloncarrleft_;
    }
    if (cached_has_bits & 0x00000008u) {
      posloncarrright_ = from.posloncarrright_;
    }
    if (cached_has_bits & 0x00000010u) {
      poscentmass_ = from.poscentmass_;
    }
    if (cached_has_bits & 0x00000020u) {
      wheelbasevehicle_ = from.wheelbasevehicle_;
    }
    if (cached_has_bits & 0x00000040u) {
      turningradius_ = from.turningradius_;
    }
    if (cached_has_bits & 0x00000080u) {
      posfrontax_ = from.posfrontax_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      positionofoccupants_ = from.positionofoccupants_;
    }
    if (cached_has_bits & 0x00000200u) {
      vehiclemass_ = from.vehiclemass_;
    }
    if (cached_has_bits & 0x00000400u) {
      requestresponseindication_ = from.requestresponseindication_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ImpactReductionContainer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ImpactReductionContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImpactReductionContainer::CopyFrom(const ImpactReductionContainer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ImpactReductionContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImpactReductionContainer::IsInitialized() const {
  if ((_has_bits_[0] & 0x000007ff) != 0x000007ff) return false;
  return true;
}

void ImpactReductionContainer::Swap(ImpactReductionContainer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImpactReductionContainer::InternalSwap(ImpactReductionContainer* other) {
  using std::swap;
  positionofpillars_.InternalSwap(&other->positionofpillars_);
  swap(heightloncarrleft_, other->heightloncarrleft_);
  swap(heightloncarrright_, other->heightloncarrright_);
  swap(posloncarrleft_, other->posloncarrleft_);
  swap(posloncarrright_, other->posloncarrright_);
  swap(poscentmass_, other->poscentmass_);
  swap(wheelbasevehicle_, other->wheelbasevehicle_);
  swap(turningradius_, other->turningradius_);
  swap(posfrontax_, other->posfrontax_);
  swap(positionofoccupants_, other->positionofoccupants_);
  swap(vehiclemass_, other->vehiclemass_);
  swap(requestresponseindication_, other->requestresponseindication_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImpactReductionContainer::GetMetadata() const {
  protobuf_denm_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_denm_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LocationContainer::InitAsDefaultInstance() {
  ::_LocationContainer_default_instance_._instance.get_mutable()->eventspeed_ = const_cast< ::Speed*>(
      ::Speed::internal_default_instance());
  ::_LocationContainer_default_instance_._instance.get_mutable()->eventpositionheading_ = const_cast< ::Heading*>(
      ::Heading::internal_default_instance());
}
void LocationContainer::clear_eventspeed() {
  if (eventspeed_ != NULL) eventspeed_->Clear();
  clear_has_eventspeed();
}
void LocationContainer::clear_eventpositionheading() {
  if (eventpositionheading_ != NULL) eventpositionheading_->Clear();
  clear_has_eventpositionheading();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocationContainer::kEventSpeedFieldNumber;
const int LocationContainer::kEventPositionHeadingFieldNumber;
const int LocationContainer::kTracesFieldNumber;
const int LocationContainer::kRoadTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocationContainer::LocationContainer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_denm_5finterface_2eproto::scc_info_LocationContainer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LocationContainer)
}
LocationContainer::LocationContainer(const LocationContainer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_eventspeed()) {
    eventspeed_ = new ::Speed(*from.eventspeed_);
  } else {
    eventspeed_ = NULL;
  }
  if (from.has_eventpositionheading()) {
    eventpositionheading_ = new ::Heading(*from.eventpositionheading_);
  } else {
    eventpositionheading_ = NULL;
  }
  ::memcpy(&traces_, &from.traces_,
    static_cast<size_t>(reinterpret_cast<char*>(&roadtype_) -
    reinterpret_cast<char*>(&traces_)) + sizeof(roadtype_));
  // @@protoc_insertion_point(copy_constructor:LocationContainer)
}

void LocationContainer::SharedCtor() {
  ::memset(&eventspeed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roadtype_) -
      reinterpret_cast<char*>(&eventspeed_)) + sizeof(roadtype_));
}

LocationContainer::~LocationContainer() {
  // @@protoc_insertion_point(destructor:LocationContainer)
  SharedDtor();
}

void LocationContainer::SharedDtor() {
  if (this != internal_default_instance()) delete eventspeed_;
  if (this != internal_default_instance()) delete eventpositionheading_;
}

void LocationContainer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LocationContainer::descriptor() {
  ::protobuf_denm_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_denm_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocationContainer& LocationContainer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_denm_5finterface_2eproto::scc_info_LocationContainer.base);
  return *internal_default_instance();
}


void LocationContainer::Clear() {
// @@protoc_insertion_point(message_clear_start:LocationContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(eventspeed_ != NULL);
      eventspeed_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(eventpositionheading_ != NULL);
      eventpositionheading_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&traces_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&roadtype_) -
        reinterpret_cast<char*>(&traces_)) + sizeof(roadtype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LocationContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LocationContainer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Speed eventSpeed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_eventspeed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Heading eventPositionHeading = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_eventpositionheading()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 traces = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_traces();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &traces_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .RoadType roadType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::RoadType_IsValid(value)) {
            set_roadtype(static_cast< ::RoadType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LocationContainer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LocationContainer)
  return false;
#undef DO_
}

void LocationContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LocationContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .Speed eventSpeed = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_eventspeed(), output);
  }

  // optional .Heading eventPositionHeading = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_eventpositionheading(), output);
  }

  // required uint32 traces = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->traces(), output);
  }

  // optional .RoadType roadType = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->roadtype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LocationContainer)
}

::google::protobuf::uint8* LocationContainer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LocationContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .Speed eventSpeed = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_eventspeed(), deterministic, target);
  }

  // optional .Heading eventPositionHeading = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_eventpositionheading(), deterministic, target);
  }

  // required uint32 traces = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->traces(), target);
  }

  // optional .RoadType roadType = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->roadtype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LocationContainer)
  return target;
}

size_t LocationContainer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LocationContainer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 traces = 3;
  if (has_traces()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->traces());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .Speed eventSpeed = 1;
    if (has_eventspeed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *eventspeed_);
    }

    // optional .Heading eventPositionHeading = 2;
    if (has_eventpositionheading()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *eventpositionheading_);
    }

  }
  // optional .RoadType roadType = 4;
  if (has_roadtype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->roadtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocationContainer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LocationContainer)
  GOOGLE_DCHECK_NE(&from, this);
  const LocationContainer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocationContainer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LocationContainer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LocationContainer)
    MergeFrom(*source);
  }
}

void LocationContainer::MergeFrom(const LocationContainer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LocationContainer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_eventspeed()->::Speed::MergeFrom(from.eventspeed());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_eventpositionheading()->::Heading::MergeFrom(from.eventpositionheading());
    }
    if (cached_has_bits & 0x00000004u) {
      traces_ = from.traces_;
    }
    if (cached_has_bits & 0x00000008u) {
      roadtype_ = from.roadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LocationContainer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LocationContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocationContainer::CopyFrom(const LocationContainer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LocationContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationContainer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_eventspeed()) {
    if (!this->eventspeed_->IsInitialized()) return false;
  }
  if (has_eventpositionheading()) {
    if (!this->eventpositionheading_->IsInitialized()) return false;
  }
  return true;
}

void LocationContainer::Swap(LocationContainer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocationContainer::InternalSwap(LocationContainer* other) {
  using std::swap;
  swap(eventspeed_, other->eventspeed_);
  swap(eventpositionheading_, other->eventpositionheading_);
  swap(traces_, other->traces_);
  swap(roadtype_, other->roadtype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LocationContainer::GetMetadata() const {
  protobuf_denm_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_denm_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ManagementContainer::InitAsDefaultInstance() {
  ::_ManagementContainer_default_instance_._instance.get_mutable()->actionid_ = const_cast< ::ActionID*>(
      ::ActionID::internal_default_instance());
  ::_ManagementContainer_default_instance_._instance.get_mutable()->eventposition_ = const_cast< ::ReferencePosition*>(
      ::ReferencePosition::internal_default_instance());
}
void ManagementContainer::clear_actionid() {
  if (actionid_ != NULL) actionid_->Clear();
  clear_has_actionid();
}
void ManagementContainer::clear_eventposition() {
  if (eventposition_ != NULL) eventposition_->Clear();
  clear_has_eventposition();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ManagementContainer::kActionIDFieldNumber;
const int ManagementContainer::kDetectionTimeFieldNumber;
const int ManagementContainer::kReferenceTimeFieldNumber;
const int ManagementContainer::kTerminationFieldNumber;
const int ManagementContainer::kEventPositionFieldNumber;
const int ManagementContainer::kRelevanceDistanceFieldNumber;
const int ManagementContainer::kRelevanceTrafficDirectionFieldNumber;
const int ManagementContainer::kValidityDurationFieldNumber;
const int ManagementContainer::kTransmissionIntervalFieldNumber;
const int ManagementContainer::kStationTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ManagementContainer::ManagementContainer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_denm_5finterface_2eproto::scc_info_ManagementContainer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ManagementContainer)
}
ManagementContainer::ManagementContainer(const ManagementContainer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_actionid()) {
    actionid_ = new ::ActionID(*from.actionid_);
  } else {
    actionid_ = NULL;
  }
  if (from.has_eventposition()) {
    eventposition_ = new ::ReferencePosition(*from.eventposition_);
  } else {
    eventposition_ = NULL;
  }
  ::memcpy(&detectiontime_, &from.detectiontime_,
    static_cast<size_t>(reinterpret_cast<char*>(&validityduration_) -
    reinterpret_cast<char*>(&detectiontime_)) + sizeof(validityduration_));
  // @@protoc_insertion_point(copy_constructor:ManagementContainer)
}

void ManagementContainer::SharedCtor() {
  ::memset(&actionid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stationtype_) -
      reinterpret_cast<char*>(&actionid_)) + sizeof(stationtype_));
  validityduration_ = 600u;
}

ManagementContainer::~ManagementContainer() {
  // @@protoc_insertion_point(destructor:ManagementContainer)
  SharedDtor();
}

void ManagementContainer::SharedDtor() {
  if (this != internal_default_instance()) delete actionid_;
  if (this != internal_default_instance()) delete eventposition_;
}

void ManagementContainer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ManagementContainer::descriptor() {
  ::protobuf_denm_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_denm_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ManagementContainer& ManagementContainer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_denm_5finterface_2eproto::scc_info_ManagementContainer.base);
  return *internal_default_instance();
}


void ManagementContainer::Clear() {
// @@protoc_insertion_point(message_clear_start:ManagementContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(actionid_ != NULL);
      actionid_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(eventposition_ != NULL);
      eventposition_->Clear();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&detectiontime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&transmissioninterval_) -
        reinterpret_cast<char*>(&detectiontime_)) + sizeof(transmissioninterval_));
  }
  if (cached_has_bits & 768u) {
    stationtype_ = 0;
    validityduration_ = 600u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ManagementContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ManagementContainer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ActionID actionID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_actionid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 detectionTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_detectiontime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &detectiontime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 referenceTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_referencetime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &referencetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Termination termination = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Termination_IsValid(value)) {
            set_termination(static_cast< ::Termination >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ReferencePosition eventPosition = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_eventposition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .RelevanceDistance relevanceDistance = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::RelevanceDistance_IsValid(value)) {
            set_relevancedistance(static_cast< ::RelevanceDistance >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .RelevanceTrafficDirection relevanceTrafficDirection = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::RelevanceTrafficDirection_IsValid(value)) {
            set_relevancetrafficdirection(static_cast< ::RelevanceTrafficDirection >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                7, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 validityDuration = 8 [default = 600];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_validityduration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &validityduration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 transmissionInterval = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_transmissioninterval();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &transmissioninterval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .StationType stationType = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::StationType_IsValid(value)) {
            set_stationtype(static_cast< ::StationType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                10, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ManagementContainer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ManagementContainer)
  return false;
#undef DO_
}

void ManagementContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ManagementContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ActionID actionID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_actionid(), output);
  }

  // required uint64 detectionTime = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->detectiontime(), output);
  }

  // required uint64 referenceTime = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->referencetime(), output);
  }

  // optional .Termination termination = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->termination(), output);
  }

  // required .ReferencePosition eventPosition = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_eventposition(), output);
  }

  // optional .RelevanceDistance relevanceDistance = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->relevancedistance(), output);
  }

  // optional .RelevanceTrafficDirection relevanceTrafficDirection = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->relevancetrafficdirection(), output);
  }

  // optional uint32 validityDuration = 8 [default = 600];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->validityduration(), output);
  }

  // optional uint32 transmissionInterval = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->transmissioninterval(), output);
  }

  // required .StationType stationType = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->stationtype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ManagementContainer)
}

::google::protobuf::uint8* ManagementContainer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ManagementContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ActionID actionID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_actionid(), deterministic, target);
  }

  // required uint64 detectionTime = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->detectiontime(), target);
  }

  // required uint64 referenceTime = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->referencetime(), target);
  }

  // optional .Termination termination = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->termination(), target);
  }

  // required .ReferencePosition eventPosition = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_eventposition(), deterministic, target);
  }

  // optional .RelevanceDistance relevanceDistance = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->relevancedistance(), target);
  }

  // optional .RelevanceTrafficDirection relevanceTrafficDirection = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->relevancetrafficdirection(), target);
  }

  // optional uint32 validityDuration = 8 [default = 600];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->validityduration(), target);
  }

  // optional uint32 transmissionInterval = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->transmissioninterval(), target);
  }

  // required .StationType stationType = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->stationtype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ManagementContainer)
  return target;
}

size_t ManagementContainer::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ManagementContainer)
  size_t total_size = 0;

  if (has_actionid()) {
    // required .ActionID actionID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *actionid_);
  }

  if (has_eventposition()) {
    // required .ReferencePosition eventPosition = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *eventposition_);
  }

  if (has_detectiontime()) {
    // required uint64 detectionTime = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->detectiontime());
  }

  if (has_referencetime()) {
    // required uint64 referenceTime = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->referencetime());
  }

  if (has_stationtype()) {
    // required .StationType stationType = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->stationtype());
  }

  return total_size;
}
size_t ManagementContainer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ManagementContainer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000010f) ^ 0x0000010f) == 0) {  // All required fields are present.
    // required .ActionID actionID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *actionid_);

    // required .ReferencePosition eventPosition = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *eventposition_);

    // required uint64 detectionTime = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->detectiontime());

    // required uint64 referenceTime = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->referencetime());

    // required .StationType stationType = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->stationtype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 240u) {
    // optional .Termination termination = 4;
    if (has_termination()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->termination());
    }

    // optional .RelevanceDistance relevanceDistance = 6;
    if (has_relevancedistance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->relevancedistance());
    }

    // optional .RelevanceTrafficDirection relevanceTrafficDirection = 7;
    if (has_relevancetrafficdirection()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->relevancetrafficdirection());
    }

    // optional uint32 transmissionInterval = 9;
    if (has_transmissioninterval()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->transmissioninterval());
    }

  }
  // optional uint32 validityDuration = 8 [default = 600];
  if (has_validityduration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->validityduration());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ManagementContainer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ManagementContainer)
  GOOGLE_DCHECK_NE(&from, this);
  const ManagementContainer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ManagementContainer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ManagementContainer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ManagementContainer)
    MergeFrom(*source);
  }
}

void ManagementContainer::MergeFrom(const ManagementContainer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ManagementContainer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_actionid()->::ActionID::MergeFrom(from.actionid());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_eventposition()->::ReferencePosition::MergeFrom(from.eventposition());
    }
    if (cached_has_bits & 0x00000004u) {
      detectiontime_ = from.detectiontime_;
    }
    if (cached_has_bits & 0x00000008u) {
      referencetime_ = from.referencetime_;
    }
    if (cached_has_bits & 0x00000010u) {
      termination_ = from.termination_;
    }
    if (cached_has_bits & 0x00000020u) {
      relevancedistance_ = from.relevancedistance_;
    }
    if (cached_has_bits & 0x00000040u) {
      relevancetrafficdirection_ = from.relevancetrafficdirection_;
    }
    if (cached_has_bits & 0x00000080u) {
      transmissioninterval_ = from.transmissioninterval_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      stationtype_ = from.stationtype_;
    }
    if (cached_has_bits & 0x00000200u) {
      validityduration_ = from.validityduration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ManagementContainer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ManagementContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManagementContainer::CopyFrom(const ManagementContainer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ManagementContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManagementContainer::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000010f) != 0x0000010f) return false;
  if (has_actionid()) {
    if (!this->actionid_->IsInitialized()) return false;
  }
  if (has_eventposition()) {
    if (!this->eventposition_->IsInitialized()) return false;
  }
  return true;
}

void ManagementContainer::Swap(ManagementContainer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ManagementContainer::InternalSwap(ManagementContainer* other) {
  using std::swap;
  swap(actionid_, other->actionid_);
  swap(eventposition_, other->eventposition_);
  swap(detectiontime_, other->detectiontime_);
  swap(referencetime_, other->referencetime_);
  swap(termination_, other->termination_);
  swap(relevancedistance_, other->relevancedistance_);
  swap(relevancetrafficdirection_, other->relevancetrafficdirection_);
  swap(transmissioninterval_, other->transmissioninterval_);
  swap(stationtype_, other->stationtype_);
  swap(validityduration_, other->validityduration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ManagementContainer::GetMetadata() const {
  protobuf_denm_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_denm_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoadWorksContainerExtended::InitAsDefaultInstance() {
  ::_RoadWorksContainerExtended_default_instance_._instance.get_mutable()->closedlanes_ = const_cast< ::ClosedLanes*>(
      ::ClosedLanes::internal_default_instance());
  ::_RoadWorksContainerExtended_default_instance_._instance.get_mutable()->restriction_ = const_cast< ::RestrictedTypes*>(
      ::RestrictedTypes::internal_default_instance());
  ::_RoadWorksContainerExtended_default_instance_._instance.get_mutable()->incidentindication_ = const_cast< ::CauseCode*>(
      ::CauseCode::internal_default_instance());
  ::_RoadWorksContainerExtended_default_instance_._instance.get_mutable()->recommendedpath_ = const_cast< ::ItineraryPath*>(
      ::ItineraryPath::internal_default_instance());
  ::_RoadWorksContainerExtended_default_instance_._instance.get_mutable()->startingpointspeedlimit_ = const_cast< ::DeltaReferencePosition*>(
      ::DeltaReferencePosition::internal_default_instance());
  ::_RoadWorksContainerExtended_default_instance_._instance.get_mutable()->referencedenms_ = const_cast< ::ReferenceDenms*>(
      ::ReferenceDenms::internal_default_instance());
}
void RoadWorksContainerExtended::clear_closedlanes() {
  if (closedlanes_ != NULL) closedlanes_->Clear();
  clear_has_closedlanes();
}
void RoadWorksContainerExtended::clear_restriction() {
  if (restriction_ != NULL) restriction_->Clear();
  clear_has_restriction();
}
void RoadWorksContainerExtended::clear_incidentindication() {
  if (incidentindication_ != NULL) incidentindication_->Clear();
  clear_has_incidentindication();
}
void RoadWorksContainerExtended::clear_recommendedpath() {
  if (recommendedpath_ != NULL) recommendedpath_->Clear();
  clear_has_recommendedpath();
}
void RoadWorksContainerExtended::clear_startingpointspeedlimit() {
  if (startingpointspeedlimit_ != NULL) startingpointspeedlimit_->Clear();
  clear_has_startingpointspeedlimit();
}
void RoadWorksContainerExtended::clear_referencedenms() {
  if (referencedenms_ != NULL) referencedenms_->Clear();
  clear_has_referencedenms();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoadWorksContainerExtended::kLightBarSirenInUseFieldNumber;
const int RoadWorksContainerExtended::kClosedLanesFieldNumber;
const int RoadWorksContainerExtended::kRestrictionFieldNumber;
const int RoadWorksContainerExtended::kSpeedLimitFieldNumber;
const int RoadWorksContainerExtended::kIncidentIndicationFieldNumber;
const int RoadWorksContainerExtended::kRecommendedPathFieldNumber;
const int RoadWorksContainerExtended::kStartingPointSpeedLimitFieldNumber;
const int RoadWorksContainerExtended::kTrafficFlowRuleFieldNumber;
const int RoadWorksContainerExtended::kReferenceDenmsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoadWorksContainerExtended::RoadWorksContainerExtended()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_denm_5finterface_2eproto::scc_info_RoadWorksContainerExtended.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoadWorksContainerExtended)
}
RoadWorksContainerExtended::RoadWorksContainerExtended(const RoadWorksContainerExtended& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_closedlanes()) {
    closedlanes_ = new ::ClosedLanes(*from.closedlanes_);
  } else {
    closedlanes_ = NULL;
  }
  if (from.has_restriction()) {
    restriction_ = new ::RestrictedTypes(*from.restriction_);
  } else {
    restriction_ = NULL;
  }
  if (from.has_incidentindication()) {
    incidentindication_ = new ::CauseCode(*from.incidentindication_);
  } else {
    incidentindication_ = NULL;
  }
  if (from.has_recommendedpath()) {
    recommendedpath_ = new ::ItineraryPath(*from.recommendedpath_);
  } else {
    recommendedpath_ = NULL;
  }
  if (from.has_startingpointspeedlimit()) {
    startingpointspeedlimit_ = new ::DeltaReferencePosition(*from.startingpointspeedlimit_);
  } else {
    startingpointspeedlimit_ = NULL;
  }
  if (from.has_referencedenms()) {
    referencedenms_ = new ::ReferenceDenms(*from.referencedenms_);
  } else {
    referencedenms_ = NULL;
  }
  ::memcpy(&lightbarsireninuse_, &from.lightbarsireninuse_,
    static_cast<size_t>(reinterpret_cast<char*>(&trafficflowrule_) -
    reinterpret_cast<char*>(&lightbarsireninuse_)) + sizeof(trafficflowrule_));
  // @@protoc_insertion_point(copy_constructor:RoadWorksContainerExtended)
}

void RoadWorksContainerExtended::SharedCtor() {
  ::memset(&closedlanes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trafficflowrule_) -
      reinterpret_cast<char*>(&closedlanes_)) + sizeof(trafficflowrule_));
}

RoadWorksContainerExtended::~RoadWorksContainerExtended() {
  // @@protoc_insertion_point(destructor:RoadWorksContainerExtended)
  SharedDtor();
}

void RoadWorksContainerExtended::SharedDtor() {
  if (this != internal_default_instance()) delete closedlanes_;
  if (this != internal_default_instance()) delete restriction_;
  if (this != internal_default_instance()) delete incidentindication_;
  if (this != internal_default_instance()) delete recommendedpath_;
  if (this != internal_default_instance()) delete startingpointspeedlimit_;
  if (this != internal_default_instance()) delete referencedenms_;
}

void RoadWorksContainerExtended::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RoadWorksContainerExtended::descriptor() {
  ::protobuf_denm_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_denm_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoadWorksContainerExtended& RoadWorksContainerExtended::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_denm_5finterface_2eproto::scc_info_RoadWorksContainerExtended.base);
  return *internal_default_instance();
}


void RoadWorksContainerExtended::Clear() {
// @@protoc_insertion_point(message_clear_start:RoadWorksContainerExtended)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(closedlanes_ != NULL);
      closedlanes_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(restriction_ != NULL);
      restriction_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(incidentindication_ != NULL);
      incidentindication_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(recommendedpath_ != NULL);
      recommendedpath_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(startingpointspeedlimit_ != NULL);
      startingpointspeedlimit_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(referencedenms_ != NULL);
      referencedenms_->Clear();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&lightbarsireninuse_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&speedlimit_) -
        reinterpret_cast<char*>(&lightbarsireninuse_)) + sizeof(speedlimit_));
  }
  trafficflowrule_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RoadWorksContainerExtended::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoadWorksContainerExtended)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .LightBarSirenInUse lightBarSirenInUse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::LightBarSirenInUse_IsValid(value)) {
            set_lightbarsireninuse(static_cast< ::LightBarSirenInUse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ClosedLanes closedLanes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_closedlanes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .RestrictedTypes restriction = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_restriction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 speedLimit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_speedlimit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &speedlimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CauseCode incidentIndication = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_incidentindication()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ItineraryPath recommendedPath = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_recommendedpath()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .DeltaReferencePosition startingPointSpeedLimit = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_startingpointspeedlimit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .TrafficRule trafficFlowRule = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TrafficRule_IsValid(value)) {
            set_trafficflowrule(static_cast< ::TrafficRule >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                8, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ReferenceDenms referenceDenms = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_referencedenms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoadWorksContainerExtended)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoadWorksContainerExtended)
  return false;
#undef DO_
}

void RoadWorksContainerExtended::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoadWorksContainerExtended)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .LightBarSirenInUse lightBarSirenInUse = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->lightbarsireninuse(), output);
  }

  // optional .ClosedLanes closedLanes = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_closedlanes(), output);
  }

  // optional .RestrictedTypes restriction = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_restriction(), output);
  }

  // optional uint32 speedLimit = 4;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->speedlimit(), output);
  }

  // optional .CauseCode incidentIndication = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_incidentindication(), output);
  }

  // optional .ItineraryPath recommendedPath = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_recommendedpath(), output);
  }

  // optional .DeltaReferencePosition startingPointSpeedLimit = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_startingpointspeedlimit(), output);
  }

  // optional .TrafficRule trafficFlowRule = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->trafficflowrule(), output);
  }

  // optional .ReferenceDenms referenceDenms = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_referencedenms(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RoadWorksContainerExtended)
}

::google::protobuf::uint8* RoadWorksContainerExtended::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoadWorksContainerExtended)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .LightBarSirenInUse lightBarSirenInUse = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->lightbarsireninuse(), target);
  }

  // optional .ClosedLanes closedLanes = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_closedlanes(), deterministic, target);
  }

  // optional .RestrictedTypes restriction = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_restriction(), deterministic, target);
  }

  // optional uint32 speedLimit = 4;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->speedlimit(), target);
  }

  // optional .CauseCode incidentIndication = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_incidentindication(), deterministic, target);
  }

  // optional .ItineraryPath recommendedPath = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_recommendedpath(), deterministic, target);
  }

  // optional .DeltaReferencePosition startingPointSpeedLimit = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_startingpointspeedlimit(), deterministic, target);
  }

  // optional .TrafficRule trafficFlowRule = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->trafficflowrule(), target);
  }

  // optional .ReferenceDenms referenceDenms = 9;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_referencedenms(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoadWorksContainerExtended)
  return target;
}

size_t RoadWorksContainerExtended::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoadWorksContainerExtended)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .ClosedLanes closedLanes = 2;
    if (has_closedlanes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *closedlanes_);
    }

    // optional .RestrictedTypes restriction = 3;
    if (has_restriction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *restriction_);
    }

    // optional .CauseCode incidentIndication = 5;
    if (has_incidentindication()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *incidentindication_);
    }

    // optional .ItineraryPath recommendedPath = 6;
    if (has_recommendedpath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *recommendedpath_);
    }

    // optional .DeltaReferencePosition startingPointSpeedLimit = 7;
    if (has_startingpointspeedlimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *startingpointspeedlimit_);
    }

    // optional .ReferenceDenms referenceDenms = 9;
    if (has_referencedenms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *referencedenms_);
    }

    // optional .LightBarSirenInUse lightBarSirenInUse = 1;
    if (has_lightbarsireninuse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->lightbarsireninuse());
    }

    // optional uint32 speedLimit = 4;
    if (has_speedlimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->speedlimit());
    }

  }
  // optional .TrafficRule trafficFlowRule = 8;
  if (has_trafficflowrule()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->trafficflowrule());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoadWorksContainerExtended::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoadWorksContainerExtended)
  GOOGLE_DCHECK_NE(&from, this);
  const RoadWorksContainerExtended* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoadWorksContainerExtended>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoadWorksContainerExtended)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoadWorksContainerExtended)
    MergeFrom(*source);
  }
}

void RoadWorksContainerExtended::MergeFrom(const RoadWorksContainerExtended& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoadWorksContainerExtended)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_closedlanes()->::ClosedLanes::MergeFrom(from.closedlanes());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_restriction()->::RestrictedTypes::MergeFrom(from.restriction());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_incidentindication()->::CauseCode::MergeFrom(from.incidentindication());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_recommendedpath()->::ItineraryPath::MergeFrom(from.recommendedpath());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_startingpointspeedlimit()->::DeltaReferencePosition::MergeFrom(from.startingpointspeedlimit());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_referencedenms()->::ReferenceDenms::MergeFrom(from.referencedenms());
    }
    if (cached_has_bits & 0x00000040u) {
      lightbarsireninuse_ = from.lightbarsireninuse_;
    }
    if (cached_has_bits & 0x00000080u) {
      speedlimit_ = from.speedlimit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_trafficflowrule(from.trafficflowrule());
  }
}

void RoadWorksContainerExtended::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoadWorksContainerExtended)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoadWorksContainerExtended::CopyFrom(const RoadWorksContainerExtended& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoadWorksContainerExtended)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoadWorksContainerExtended::IsInitialized() const {
  if (has_incidentindication()) {
    if (!this->incidentindication_->IsInitialized()) return false;
  }
  if (has_recommendedpath()) {
    if (!this->recommendedpath_->IsInitialized()) return false;
  }
  if (has_startingpointspeedlimit()) {
    if (!this->startingpointspeedlimit_->IsInitialized()) return false;
  }
  if (has_referencedenms()) {
    if (!this->referencedenms_->IsInitialized()) return false;
  }
  return true;
}

void RoadWorksContainerExtended::Swap(RoadWorksContainerExtended* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoadWorksContainerExtended::InternalSwap(RoadWorksContainerExtended* other) {
  using std::swap;
  swap(closedlanes_, other->closedlanes_);
  swap(restriction_, other->restriction_);
  swap(incidentindication_, other->incidentindication_);
  swap(recommendedpath_, other->recommendedpath_);
  swap(startingpointspeedlimit_, other->startingpointspeedlimit_);
  swap(referencedenms_, other->referencedenms_);
  swap(lightbarsireninuse_, other->lightbarsireninuse_);
  swap(speedlimit_, other->speedlimit_);
  swap(trafficflowrule_, other->trafficflowrule_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RoadWorksContainerExtended::GetMetadata() const {
  protobuf_denm_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_denm_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SituationContainer::InitAsDefaultInstance() {
  ::_SituationContainer_default_instance_._instance.get_mutable()->eventtype_ = const_cast< ::CauseCode*>(
      ::CauseCode::internal_default_instance());
  ::_SituationContainer_default_instance_._instance.get_mutable()->linkedcause_ = const_cast< ::CauseCode*>(
      ::CauseCode::internal_default_instance());
  ::_SituationContainer_default_instance_._instance.get_mutable()->eventhistory_ = const_cast< ::EventHistory*>(
      ::EventHistory::internal_default_instance());
}
void SituationContainer::clear_eventtype() {
  if (eventtype_ != NULL) eventtype_->Clear();
  clear_has_eventtype();
}
void SituationContainer::clear_linkedcause() {
  if (linkedcause_ != NULL) linkedcause_->Clear();
  clear_has_linkedcause();
}
void SituationContainer::clear_eventhistory() {
  if (eventhistory_ != NULL) eventhistory_->Clear();
  clear_has_eventhistory();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SituationContainer::kInformationQualityFieldNumber;
const int SituationContainer::kEventTypeFieldNumber;
const int SituationContainer::kLinkedCauseFieldNumber;
const int SituationContainer::kEventHistoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SituationContainer::SituationContainer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_denm_5finterface_2eproto::scc_info_SituationContainer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SituationContainer)
}
SituationContainer::SituationContainer(const SituationContainer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_eventtype()) {
    eventtype_ = new ::CauseCode(*from.eventtype_);
  } else {
    eventtype_ = NULL;
  }
  if (from.has_linkedcause()) {
    linkedcause_ = new ::CauseCode(*from.linkedcause_);
  } else {
    linkedcause_ = NULL;
  }
  if (from.has_eventhistory()) {
    eventhistory_ = new ::EventHistory(*from.eventhistory_);
  } else {
    eventhistory_ = NULL;
  }
  informationquality_ = from.informationquality_;
  // @@protoc_insertion_point(copy_constructor:SituationContainer)
}

void SituationContainer::SharedCtor() {
  ::memset(&eventtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&informationquality_) -
      reinterpret_cast<char*>(&eventtype_)) + sizeof(informationquality_));
}

SituationContainer::~SituationContainer() {
  // @@protoc_insertion_point(destructor:SituationContainer)
  SharedDtor();
}

void SituationContainer::SharedDtor() {
  if (this != internal_default_instance()) delete eventtype_;
  if (this != internal_default_instance()) delete linkedcause_;
  if (this != internal_default_instance()) delete eventhistory_;
}

void SituationContainer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SituationContainer::descriptor() {
  ::protobuf_denm_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_denm_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SituationContainer& SituationContainer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_denm_5finterface_2eproto::scc_info_SituationContainer.base);
  return *internal_default_instance();
}


void SituationContainer::Clear() {
// @@protoc_insertion_point(message_clear_start:SituationContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(eventtype_ != NULL);
      eventtype_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(linkedcause_ != NULL);
      linkedcause_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(eventhistory_ != NULL);
      eventhistory_->Clear();
    }
  }
  informationquality_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SituationContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SituationContainer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 informationQuality = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_informationquality();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &informationquality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .CauseCode eventType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_eventtype()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CauseCode linkedCause = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linkedcause()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .EventHistory eventHistory = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_eventhistory()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SituationContainer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SituationContainer)
  return false;
#undef DO_
}

void SituationContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SituationContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 informationQuality = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->informationquality(), output);
  }

  // required .CauseCode eventType = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_eventtype(), output);
  }

  // optional .CauseCode linkedCause = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_linkedcause(), output);
  }

  // optional .EventHistory eventHistory = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_eventhistory(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SituationContainer)
}

::google::protobuf::uint8* SituationContainer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SituationContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 informationQuality = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->informationquality(), target);
  }

  // required .CauseCode eventType = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_eventtype(), deterministic, target);
  }

  // optional .CauseCode linkedCause = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_linkedcause(), deterministic, target);
  }

  // optional .EventHistory eventHistory = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_eventhistory(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SituationContainer)
  return target;
}

size_t SituationContainer::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:SituationContainer)
  size_t total_size = 0;

  if (has_eventtype()) {
    // required .CauseCode eventType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *eventtype_);
  }

  if (has_informationquality()) {
    // required uint32 informationQuality = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->informationquality());
  }

  return total_size;
}
size_t SituationContainer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SituationContainer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000009) ^ 0x00000009) == 0) {  // All required fields are present.
    // required .CauseCode eventType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *eventtype_);

    // required uint32 informationQuality = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->informationquality());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional .CauseCode linkedCause = 3;
    if (has_linkedcause()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *linkedcause_);
    }

    // optional .EventHistory eventHistory = 4;
    if (has_eventhistory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *eventhistory_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SituationContainer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SituationContainer)
  GOOGLE_DCHECK_NE(&from, this);
  const SituationContainer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SituationContainer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SituationContainer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SituationContainer)
    MergeFrom(*source);
  }
}

void SituationContainer::MergeFrom(const SituationContainer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SituationContainer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_eventtype()->::CauseCode::MergeFrom(from.eventtype());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_linkedcause()->::CauseCode::MergeFrom(from.linkedcause());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_eventhistory()->::EventHistory::MergeFrom(from.eventhistory());
    }
    if (cached_has_bits & 0x00000008u) {
      informationquality_ = from.informationquality_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SituationContainer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SituationContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SituationContainer::CopyFrom(const SituationContainer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SituationContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SituationContainer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;
  if (has_eventtype()) {
    if (!this->eventtype_->IsInitialized()) return false;
  }
  if (has_linkedcause()) {
    if (!this->linkedcause_->IsInitialized()) return false;
  }
  if (has_eventhistory()) {
    if (!this->eventhistory_->IsInitialized()) return false;
  }
  return true;
}

void SituationContainer::Swap(SituationContainer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SituationContainer::InternalSwap(SituationContainer* other) {
  using std::swap;
  swap(eventtype_, other->eventtype_);
  swap(linkedcause_, other->linkedcause_);
  swap(eventhistory_, other->eventhistory_);
  swap(informationquality_, other->informationquality_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SituationContainer::GetMetadata() const {
  protobuf_denm_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_denm_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StationaryVehicleContainer::InitAsDefaultInstance() {
  ::_StationaryVehicleContainer_default_instance_._instance.get_mutable()->stationarycause_ = const_cast< ::CauseCode*>(
      ::CauseCode::internal_default_instance());
  ::_StationaryVehicleContainer_default_instance_._instance.get_mutable()->carryingdangerousgoods_ = const_cast< ::DangerousGoodsExtended*>(
      ::DangerousGoodsExtended::internal_default_instance());
  ::_StationaryVehicleContainer_default_instance_._instance.get_mutable()->vehicleidentification_ = const_cast< ::VehicleIdentification*>(
      ::VehicleIdentification::internal_default_instance());
  ::_StationaryVehicleContainer_default_instance_._instance.get_mutable()->energystoragetype_ = const_cast< ::EnergyStorageType*>(
      ::EnergyStorageType::internal_default_instance());
}
void StationaryVehicleContainer::clear_stationarycause() {
  if (stationarycause_ != NULL) stationarycause_->Clear();
  clear_has_stationarycause();
}
void StationaryVehicleContainer::clear_carryingdangerousgoods() {
  if (carryingdangerousgoods_ != NULL) carryingdangerousgoods_->Clear();
  clear_has_carryingdangerousgoods();
}
void StationaryVehicleContainer::clear_vehicleidentification() {
  if (vehicleidentification_ != NULL) vehicleidentification_->Clear();
  clear_has_vehicleidentification();
}
void StationaryVehicleContainer::clear_energystoragetype() {
  if (energystoragetype_ != NULL) energystoragetype_->Clear();
  clear_has_energystoragetype();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StationaryVehicleContainer::kStationarySinceFieldNumber;
const int StationaryVehicleContainer::kStationaryCauseFieldNumber;
const int StationaryVehicleContainer::kCarryingDangerousGoodsFieldNumber;
const int StationaryVehicleContainer::kNumberOfOccupantsFieldNumber;
const int StationaryVehicleContainer::kVehicleIdentificationFieldNumber;
const int StationaryVehicleContainer::kEnergyStorageTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StationaryVehicleContainer::StationaryVehicleContainer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_denm_5finterface_2eproto::scc_info_StationaryVehicleContainer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:StationaryVehicleContainer)
}
StationaryVehicleContainer::StationaryVehicleContainer(const StationaryVehicleContainer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stationarycause()) {
    stationarycause_ = new ::CauseCode(*from.stationarycause_);
  } else {
    stationarycause_ = NULL;
  }
  if (from.has_carryingdangerousgoods()) {
    carryingdangerousgoods_ = new ::DangerousGoodsExtended(*from.carryingdangerousgoods_);
  } else {
    carryingdangerousgoods_ = NULL;
  }
  if (from.has_vehicleidentification()) {
    vehicleidentification_ = new ::VehicleIdentification(*from.vehicleidentification_);
  } else {
    vehicleidentification_ = NULL;
  }
  if (from.has_energystoragetype()) {
    energystoragetype_ = new ::EnergyStorageType(*from.energystoragetype_);
  } else {
    energystoragetype_ = NULL;
  }
  ::memcpy(&stationarysince_, &from.stationarysince_,
    static_cast<size_t>(reinterpret_cast<char*>(&numberofoccupants_) -
    reinterpret_cast<char*>(&stationarysince_)) + sizeof(numberofoccupants_));
  // @@protoc_insertion_point(copy_constructor:StationaryVehicleContainer)
}

void StationaryVehicleContainer::SharedCtor() {
  ::memset(&stationarycause_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&numberofoccupants_) -
      reinterpret_cast<char*>(&stationarycause_)) + sizeof(numberofoccupants_));
}

StationaryVehicleContainer::~StationaryVehicleContainer() {
  // @@protoc_insertion_point(destructor:StationaryVehicleContainer)
  SharedDtor();
}

void StationaryVehicleContainer::SharedDtor() {
  if (this != internal_default_instance()) delete stationarycause_;
  if (this != internal_default_instance()) delete carryingdangerousgoods_;
  if (this != internal_default_instance()) delete vehicleidentification_;
  if (this != internal_default_instance()) delete energystoragetype_;
}

void StationaryVehicleContainer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StationaryVehicleContainer::descriptor() {
  ::protobuf_denm_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_denm_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StationaryVehicleContainer& StationaryVehicleContainer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_denm_5finterface_2eproto::scc_info_StationaryVehicleContainer.base);
  return *internal_default_instance();
}


void StationaryVehicleContainer::Clear() {
// @@protoc_insertion_point(message_clear_start:StationaryVehicleContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(stationarycause_ != NULL);
      stationarycause_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(carryingdangerousgoods_ != NULL);
      carryingdangerousgoods_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(vehicleidentification_ != NULL);
      vehicleidentification_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(energystoragetype_ != NULL);
      energystoragetype_->Clear();
    }
  }
  if (cached_has_bits & 48u) {
    ::memset(&stationarysince_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&numberofoccupants_) -
        reinterpret_cast<char*>(&stationarysince_)) + sizeof(numberofoccupants_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StationaryVehicleContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StationaryVehicleContainer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .StationarySince stationarySince = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::StationarySince_IsValid(value)) {
            set_stationarysince(static_cast< ::StationarySince >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CauseCode stationaryCause = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stationarycause()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .DangerousGoodsExtended carryingDangerousGoods = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_carryingdangerousgoods()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 numberOfOccupants = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_numberofoccupants();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &numberofoccupants_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .VehicleIdentification vehicleIdentification = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehicleidentification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .EnergyStorageType energyStorageType = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_energystoragetype()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StationaryVehicleContainer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StationaryVehicleContainer)
  return false;
#undef DO_
}

void StationaryVehicleContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StationaryVehicleContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .StationarySince stationarySince = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->stationarysince(), output);
  }

  // optional .CauseCode stationaryCause = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_stationarycause(), output);
  }

  // optional .DangerousGoodsExtended carryingDangerousGoods = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_carryingdangerousgoods(), output);
  }

  // optional uint32 numberOfOccupants = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->numberofoccupants(), output);
  }

  // optional .VehicleIdentification vehicleIdentification = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_vehicleidentification(), output);
  }

  // optional .EnergyStorageType energyStorageType = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_energystoragetype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StationaryVehicleContainer)
}

::google::protobuf::uint8* StationaryVehicleContainer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StationaryVehicleContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .StationarySince stationarySince = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->stationarysince(), target);
  }

  // optional .CauseCode stationaryCause = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_stationarycause(), deterministic, target);
  }

  // optional .DangerousGoodsExtended carryingDangerousGoods = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_carryingdangerousgoods(), deterministic, target);
  }

  // optional uint32 numberOfOccupants = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->numberofoccupants(), target);
  }

  // optional .VehicleIdentification vehicleIdentification = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_vehicleidentification(), deterministic, target);
  }

  // optional .EnergyStorageType energyStorageType = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_energystoragetype(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StationaryVehicleContainer)
  return target;
}

size_t StationaryVehicleContainer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StationaryVehicleContainer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional .CauseCode stationaryCause = 2;
    if (has_stationarycause()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stationarycause_);
    }

    // optional .DangerousGoodsExtended carryingDangerousGoods = 3;
    if (has_carryingdangerousgoods()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *carryingdangerousgoods_);
    }

    // optional .VehicleIdentification vehicleIdentification = 5;
    if (has_vehicleidentification()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *vehicleidentification_);
    }

    // optional .EnergyStorageType energyStorageType = 6;
    if (has_energystoragetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *energystoragetype_);
    }

    // optional .StationarySince stationarySince = 1;
    if (has_stationarysince()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->stationarysince());
    }

    // optional uint32 numberOfOccupants = 4;
    if (has_numberofoccupants()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->numberofoccupants());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StationaryVehicleContainer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StationaryVehicleContainer)
  GOOGLE_DCHECK_NE(&from, this);
  const StationaryVehicleContainer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StationaryVehicleContainer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StationaryVehicleContainer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StationaryVehicleContainer)
    MergeFrom(*source);
  }
}

void StationaryVehicleContainer::MergeFrom(const StationaryVehicleContainer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StationaryVehicleContainer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_stationarycause()->::CauseCode::MergeFrom(from.stationarycause());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_carryingdangerousgoods()->::DangerousGoodsExtended::MergeFrom(from.carryingdangerousgoods());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_vehicleidentification()->::VehicleIdentification::MergeFrom(from.vehicleidentification());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_energystoragetype()->::EnergyStorageType::MergeFrom(from.energystoragetype());
    }
    if (cached_has_bits & 0x00000010u) {
      stationarysince_ = from.stationarysince_;
    }
    if (cached_has_bits & 0x00000020u) {
      numberofoccupants_ = from.numberofoccupants_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StationaryVehicleContainer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StationaryVehicleContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StationaryVehicleContainer::CopyFrom(const StationaryVehicleContainer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StationaryVehicleContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StationaryVehicleContainer::IsInitialized() const {
  if (has_stationarycause()) {
    if (!this->stationarycause_->IsInitialized()) return false;
  }
  if (has_carryingdangerousgoods()) {
    if (!this->carryingdangerousgoods_->IsInitialized()) return false;
  }
  if (has_energystoragetype()) {
    if (!this->energystoragetype_->IsInitialized()) return false;
  }
  return true;
}

void StationaryVehicleContainer::Swap(StationaryVehicleContainer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StationaryVehicleContainer::InternalSwap(StationaryVehicleContainer* other) {
  using std::swap;
  swap(stationarycause_, other->stationarycause_);
  swap(carryingdangerousgoods_, other->carryingdangerousgoods_);
  swap(vehicleidentification_, other->vehicleidentification_);
  swap(energystoragetype_, other->energystoragetype_);
  swap(stationarysince_, other->stationarysince_);
  swap(numberofoccupants_, other->numberofoccupants_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StationaryVehicleContainer::GetMetadata() const {
  protobuf_denm_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_denm_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DENMessage* Arena::CreateMaybeMessage< ::DENMessage >(Arena* arena) {
  return Arena::CreateInternal< ::DENMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DecentralizedEnvironmentalNotificationMessage* Arena::CreateMaybeMessage< ::DecentralizedEnvironmentalNotificationMessage >(Arena* arena) {
  return Arena::CreateInternal< ::DecentralizedEnvironmentalNotificationMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AlacarteContainer* Arena::CreateMaybeMessage< ::AlacarteContainer >(Arena* arena) {
  return Arena::CreateInternal< ::AlacarteContainer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ImpactReductionContainer* Arena::CreateMaybeMessage< ::ImpactReductionContainer >(Arena* arena) {
  return Arena::CreateInternal< ::ImpactReductionContainer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LocationContainer* Arena::CreateMaybeMessage< ::LocationContainer >(Arena* arena) {
  return Arena::CreateInternal< ::LocationContainer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ManagementContainer* Arena::CreateMaybeMessage< ::ManagementContainer >(Arena* arena) {
  return Arena::CreateInternal< ::ManagementContainer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RoadWorksContainerExtended* Arena::CreateMaybeMessage< ::RoadWorksContainerExtended >(Arena* arena) {
  return Arena::CreateInternal< ::RoadWorksContainerExtended >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SituationContainer* Arena::CreateMaybeMessage< ::SituationContainer >(Arena* arena) {
  return Arena::CreateInternal< ::SituationContainer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::StationaryVehicleContainer* Arena::CreateMaybeMessage< ::StationaryVehicleContainer >(Arena* arena) {
  return Arena::CreateInternal< ::StationaryVehicleContainer >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
