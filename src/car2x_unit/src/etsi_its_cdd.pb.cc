// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: etsi_its_cdd.proto

#include "etsi_its_cdd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_etsi_5fits_5fcdd_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AccelerationComponent;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AccelerationMagnitude;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ActionID;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Altitude;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CartesianAngle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CartesianCoordinateWithConfidence;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CartesianPosition3d;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CorrelationColumn;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeltaReferencePosition;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IntersectionReferenceID;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LongitudinalLanePosition;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MatrixIncludedComponents;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OtherSubClass;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PositionConfidenceEllipse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RadialShapeDetails;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RoadSegmentReferenceID;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Speed;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VelocityComponent;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VruClusterProfiles;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VruProfileAndSubprofile;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AccelerationCartesian;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CircularShape;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_EllipticalShape;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_EventPoint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LowerTriangularPositiveSemidefiniteMatrixColumns;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PolygonalShape;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RadialShape;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RadialShapes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RectangularShape;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VelocityCartesian;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MapReference;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ReferencePosition;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_VruClusterInformation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_AccelerationPolarWithZ;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ObjectClass;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_VelocityPolarWithZ;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fits_5fcdd_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_Shape;
}  // namespace protobuf_etsi_5fits_5fcdd_2eproto
class Acceleration3dWithConfidenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acceleration3dWithConfidence>
      _instance;
  const ::AccelerationPolarWithZ* polaracceleration_;
  const ::AccelerationCartesian* cartesianacceleration_;
} _Acceleration3dWithConfidence_default_instance_;
class AccelerationCartesianDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccelerationCartesian>
      _instance;
} _AccelerationCartesian_default_instance_;
class AccelerationComponentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccelerationComponent>
      _instance;
} _AccelerationComponent_default_instance_;
class AccelerationMagnitudeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccelerationMagnitude>
      _instance;
} _AccelerationMagnitude_default_instance_;
class AccelerationPolarWithZDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccelerationPolarWithZ>
      _instance;
} _AccelerationPolarWithZ_default_instance_;
class ActionIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActionID>
      _instance;
} _ActionID_default_instance_;
class AltitudeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Altitude>
      _instance;
} _Altitude_default_instance_;
class CartesianAngleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CartesianAngle>
      _instance;
} _CartesianAngle_default_instance_;
class CartesianAngularVelocityComponentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CartesianAngularVelocityComponent>
      _instance;
} _CartesianAngularVelocityComponent_default_instance_;
class CartesianPosition3dDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CartesianPosition3d>
      _instance;
} _CartesianPosition3d_default_instance_;
class CartesianCoordinateWithConfidenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CartesianCoordinateWithConfidence>
      _instance;
} _CartesianCoordinateWithConfidence_default_instance_;
class CartesianPosition3dWithConfidenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CartesianPosition3dWithConfidence>
      _instance;
} _CartesianPosition3dWithConfidence_default_instance_;
class CircularShapeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CircularShape>
      _instance;
} _CircularShape_default_instance_;
class ClosedLanesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClosedLanes>
      _instance;
} _ClosedLanes_default_instance_;
class CorrelationColumnDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CorrelationColumn>
      _instance;
} _CorrelationColumn_default_instance_;
class CurvatureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Curvature>
      _instance;
} _Curvature_default_instance_;
class CauseCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CauseCode>
      _instance;
} _CauseCode_default_instance_;
class DangerousGoodsExtendedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DangerousGoodsExtended>
      _instance;
} _DangerousGoodsExtended_default_instance_;
class DeltaReferencePositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeltaReferencePosition>
      _instance;
} _DeltaReferencePosition_default_instance_;
class EnergyStorageTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnergyStorageType>
      _instance;
} _EnergyStorageType_default_instance_;
class EllipticalShapeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EllipticalShape>
      _instance;
} _EllipticalShape_default_instance_;
class EulerAnglesWithConfidenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EulerAnglesWithConfidence>
      _instance;
} _EulerAnglesWithConfidence_default_instance_;
class EventHistoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventHistory>
      _instance;
} _EventHistory_default_instance_;
class EventPointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventPoint>
      _instance;
} _EventPoint_default_instance_;
class HeadingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Heading>
      _instance;
} _Heading_default_instance_;
class IntersectionReferenceIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IntersectionReferenceID>
      _instance;
} _IntersectionReferenceID_default_instance_;
class ItineraryPathDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ItineraryPath>
      _instance;
} _ItineraryPath_default_instance_;
class LongitudinalAccelerationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LongitudinalAcceleration>
      _instance;
} _LongitudinalAcceleration_default_instance_;
class LongitudinalLanePositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LongitudinalLanePosition>
      _instance;
} _LongitudinalLanePosition_default_instance_;
class LowerTriangularPositiveSemidefiniteMatrixDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LowerTriangularPositiveSemidefiniteMatrix>
      _instance;
} _LowerTriangularPositiveSemidefiniteMatrix_default_instance_;
class LowerTriangularPositiveSemidefiniteMatrixColumnsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LowerTriangularPositiveSemidefiniteMatrixColumns>
      _instance;
} _LowerTriangularPositiveSemidefiniteMatrixColumns_default_instance_;
class MapPositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MapPosition>
      _instance;
} _MapPosition_default_instance_;
class MapReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MapReference>
      _instance;
  const ::RoadSegmentReferenceID* roadsegment_;
  const ::IntersectionReferenceID* intersection_;
} _MapReference_default_instance_;
class MatrixIncludedComponentsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatrixIncludedComponents>
      _instance;
} _MatrixIncludedComponents_default_instance_;
class MessageRateHzDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageRateHz>
      _instance;
} _MessageRateHz_default_instance_;
class MessageSegmentationInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageSegmentationInfo>
      _instance;
} _MessageSegmentationInfo_default_instance_;
class ObjectClassDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectClass>
      _instance;
  int vehiclesubclass_;
  const ::VruProfileAndSubprofile* vrusubclass_;
  const ::VruClusterInformation* groupsubclass_;
  const ::OtherSubClass* othersubclass_;
} _ObjectClass_default_instance_;
class ObjectClassWithConfidenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectClassWithConfidence>
      _instance;
} _ObjectClassWithConfidence_default_instance_;
class ObjectDimensionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectDimension>
      _instance;
} _ObjectDimension_default_instance_;
class OtherSubClassDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OtherSubClass>
      _instance;
} _OtherSubClass_default_instance_;
class PolygonalShapeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PolygonalShape>
      _instance;
} _PolygonalShape_default_instance_;
class PositionConfidenceEllipseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PositionConfidenceEllipse>
      _instance;
} _PositionConfidenceEllipse_default_instance_;
class RadialShapeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RadialShape>
      _instance;
} _RadialShape_default_instance_;
class RadialShapesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RadialShapes>
      _instance;
} _RadialShapes_default_instance_;
class RadialShapeDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RadialShapeDetails>
      _instance;
} _RadialShapeDetails_default_instance_;
class RectangularShapeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RectangularShape>
      _instance;
} _RectangularShape_default_instance_;
class ReferenceDenmsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReferenceDenms>
      _instance;
} _ReferenceDenms_default_instance_;
class ReferencePositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReferencePosition>
      _instance;
} _ReferencePosition_default_instance_;
class RestrictedTypesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RestrictedTypes>
      _instance;
} _RestrictedTypes_default_instance_;
class RoadSegmentReferenceIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoadSegmentReferenceID>
      _instance;
} _RoadSegmentReferenceID_default_instance_;
class ShapeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Shape>
      _instance;
  const ::RectangularShape* rectangular_;
  const ::CircularShape* circular_;
  const ::PolygonalShape* polygonal_;
  const ::EllipticalShape* elliptical_;
  const ::RadialShape* radial_;
  const ::RadialShapes* radialshapes_;
} _Shape_default_instance_;
class SpeedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Speed>
      _instance;
} _Speed_default_instance_;
class VehicleIdentificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleIdentification>
      _instance;
} _VehicleIdentification_default_instance_;
class VehicleLengthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleLength>
      _instance;
} _VehicleLength_default_instance_;
class VehicleWidthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleWidth>
      _instance;
} _VehicleWidth_default_instance_;
class VelocityCartesianDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VelocityCartesian>
      _instance;
} _VelocityCartesian_default_instance_;
class VelocityComponentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VelocityComponent>
      _instance;
} _VelocityComponent_default_instance_;
class VelocityPolarWithZDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VelocityPolarWithZ>
      _instance;
} _VelocityPolarWithZ_default_instance_;
class Velocity3dWithConfidenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Velocity3dWithConfidence>
      _instance;
  const ::VelocityPolarWithZ* polarvelocity_;
  const ::VelocityCartesian* cartesianvelocity_;
} _Velocity3dWithConfidence_default_instance_;
class VruClusterInformationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VruClusterInformation>
      _instance;
} _VruClusterInformation_default_instance_;
class VruClusterProfilesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VruClusterProfiles>
      _instance;
} _VruClusterProfiles_default_instance_;
class VruProfileAndSubprofileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VruProfileAndSubprofile>
      _instance;
  int pedestrian_;
  int bicyclistandlightvruvehicle_;
  int motorcyclist_;
  int animal_;
} _VruProfileAndSubprofile_default_instance_;
class Wgs84AngleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Wgs84Angle>
      _instance;
} _Wgs84Angle_default_instance_;
class YawRateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<YawRate>
      _instance;
} _YawRate_default_instance_;
namespace protobuf_etsi_5fits_5fcdd_2eproto {
static void InitDefaultsAcceleration3dWithConfidence() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Acceleration3dWithConfidence_default_instance_;
    new (ptr) ::Acceleration3dWithConfidence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Acceleration3dWithConfidence::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Acceleration3dWithConfidence =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAcceleration3dWithConfidence}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_AccelerationPolarWithZ.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_AccelerationCartesian.base,}};

static void InitDefaultsAccelerationCartesian() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AccelerationCartesian_default_instance_;
    new (ptr) ::AccelerationCartesian();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AccelerationCartesian::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AccelerationCartesian =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAccelerationCartesian}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_AccelerationComponent.base,}};

static void InitDefaultsAccelerationComponent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AccelerationComponent_default_instance_;
    new (ptr) ::AccelerationComponent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AccelerationComponent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AccelerationComponent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAccelerationComponent}, {}};

static void InitDefaultsAccelerationMagnitude() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AccelerationMagnitude_default_instance_;
    new (ptr) ::AccelerationMagnitude();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AccelerationMagnitude::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AccelerationMagnitude =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAccelerationMagnitude}, {}};

static void InitDefaultsAccelerationPolarWithZ() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AccelerationPolarWithZ_default_instance_;
    new (ptr) ::AccelerationPolarWithZ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AccelerationPolarWithZ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_AccelerationPolarWithZ =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsAccelerationPolarWithZ}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_AccelerationMagnitude.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CartesianAngle.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_AccelerationComponent.base,}};

static void InitDefaultsActionID() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ActionID_default_instance_;
    new (ptr) ::ActionID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ActionID::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ActionID =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsActionID}, {}};

static void InitDefaultsAltitude() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Altitude_default_instance_;
    new (ptr) ::Altitude();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Altitude::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Altitude =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAltitude}, {}};

static void InitDefaultsCartesianAngle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CartesianAngle_default_instance_;
    new (ptr) ::CartesianAngle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesianAngle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CartesianAngle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCartesianAngle}, {}};

static void InitDefaultsCartesianAngularVelocityComponent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CartesianAngularVelocityComponent_default_instance_;
    new (ptr) ::CartesianAngularVelocityComponent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesianAngularVelocityComponent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CartesianAngularVelocityComponent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCartesianAngularVelocityComponent}, {}};

static void InitDefaultsCartesianPosition3d() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CartesianPosition3d_default_instance_;
    new (ptr) ::CartesianPosition3d();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesianPosition3d::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CartesianPosition3d =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCartesianPosition3d}, {}};

static void InitDefaultsCartesianCoordinateWithConfidence() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CartesianCoordinateWithConfidence_default_instance_;
    new (ptr) ::CartesianCoordinateWithConfidence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesianCoordinateWithConfidence::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CartesianCoordinateWithConfidence =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCartesianCoordinateWithConfidence}, {}};

static void InitDefaultsCartesianPosition3dWithConfidence() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CartesianPosition3dWithConfidence_default_instance_;
    new (ptr) ::CartesianPosition3dWithConfidence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesianPosition3dWithConfidence::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CartesianPosition3dWithConfidence =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCartesianPosition3dWithConfidence}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CartesianCoordinateWithConfidence.base,}};

static void InitDefaultsCircularShape() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CircularShape_default_instance_;
    new (ptr) ::CircularShape();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CircularShape::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CircularShape =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCircularShape}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CartesianPosition3d.base,}};

static void InitDefaultsClosedLanes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClosedLanes_default_instance_;
    new (ptr) ::ClosedLanes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClosedLanes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClosedLanes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClosedLanes}, {}};

static void InitDefaultsCorrelationColumn() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CorrelationColumn_default_instance_;
    new (ptr) ::CorrelationColumn();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CorrelationColumn::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CorrelationColumn =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCorrelationColumn}, {}};

static void InitDefaultsCurvature() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Curvature_default_instance_;
    new (ptr) ::Curvature();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Curvature::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Curvature =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCurvature}, {}};

static void InitDefaultsCauseCode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CauseCode_default_instance_;
    new (ptr) ::CauseCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CauseCode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CauseCode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCauseCode}, {}};

static void InitDefaultsDangerousGoodsExtended() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DangerousGoodsExtended_default_instance_;
    new (ptr) ::DangerousGoodsExtended();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DangerousGoodsExtended::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DangerousGoodsExtended =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDangerousGoodsExtended}, {}};

static void InitDefaultsDeltaReferencePosition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DeltaReferencePosition_default_instance_;
    new (ptr) ::DeltaReferencePosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DeltaReferencePosition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeltaReferencePosition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeltaReferencePosition}, {}};

static void InitDefaultsEnergyStorageType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_EnergyStorageType_default_instance_;
    new (ptr) ::EnergyStorageType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EnergyStorageType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EnergyStorageType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEnergyStorageType}, {}};

static void InitDefaultsEllipticalShape() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_EllipticalShape_default_instance_;
    new (ptr) ::EllipticalShape();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EllipticalShape::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EllipticalShape =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEllipticalShape}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CartesianPosition3d.base,}};

static void InitDefaultsEulerAnglesWithConfidence() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_EulerAnglesWithConfidence_default_instance_;
    new (ptr) ::EulerAnglesWithConfidence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EulerAnglesWithConfidence::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EulerAnglesWithConfidence =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEulerAnglesWithConfidence}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CartesianAngle.base,}};

static void InitDefaultsEventHistory() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_EventHistory_default_instance_;
    new (ptr) ::EventHistory();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EventHistory::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EventHistory =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEventHistory}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_EventPoint.base,}};

static void InitDefaultsEventPoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_EventPoint_default_instance_;
    new (ptr) ::EventPoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EventPoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EventPoint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEventPoint}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_DeltaReferencePosition.base,}};

static void InitDefaultsHeading() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Heading_default_instance_;
    new (ptr) ::Heading();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Heading::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Heading =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHeading}, {}};

static void InitDefaultsIntersectionReferenceID() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_IntersectionReferenceID_default_instance_;
    new (ptr) ::IntersectionReferenceID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IntersectionReferenceID::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IntersectionReferenceID =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIntersectionReferenceID}, {}};

static void InitDefaultsItineraryPath() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ItineraryPath_default_instance_;
    new (ptr) ::ItineraryPath();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ItineraryPath::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ItineraryPath =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsItineraryPath}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ReferencePosition.base,}};

static void InitDefaultsLongitudinalAcceleration() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_LongitudinalAcceleration_default_instance_;
    new (ptr) ::LongitudinalAcceleration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LongitudinalAcceleration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LongitudinalAcceleration =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLongitudinalAcceleration}, {}};

static void InitDefaultsLongitudinalLanePosition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_LongitudinalLanePosition_default_instance_;
    new (ptr) ::LongitudinalLanePosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LongitudinalLanePosition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LongitudinalLanePosition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLongitudinalLanePosition}, {}};

static void InitDefaultsLowerTriangularPositiveSemidefiniteMatrix() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_LowerTriangularPositiveSemidefiniteMatrix_default_instance_;
    new (ptr) ::LowerTriangularPositiveSemidefiniteMatrix();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LowerTriangularPositiveSemidefiniteMatrix::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_LowerTriangularPositiveSemidefiniteMatrix =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLowerTriangularPositiveSemidefiniteMatrix}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_MatrixIncludedComponents.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_LowerTriangularPositiveSemidefiniteMatrixColumns.base,}};

static void InitDefaultsLowerTriangularPositiveSemidefiniteMatrixColumns() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_LowerTriangularPositiveSemidefiniteMatrixColumns_default_instance_;
    new (ptr) ::LowerTriangularPositiveSemidefiniteMatrixColumns();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LowerTriangularPositiveSemidefiniteMatrixColumns::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LowerTriangularPositiveSemidefiniteMatrixColumns =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLowerTriangularPositiveSemidefiniteMatrixColumns}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CorrelationColumn.base,}};

static void InitDefaultsMapPosition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MapPosition_default_instance_;
    new (ptr) ::MapPosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MapPosition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MapPosition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMapPosition}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_MapReference.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_LongitudinalLanePosition.base,}};

static void InitDefaultsMapReference() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MapReference_default_instance_;
    new (ptr) ::MapReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MapReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MapReference =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMapReference}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_RoadSegmentReferenceID.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_IntersectionReferenceID.base,}};

static void InitDefaultsMatrixIncludedComponents() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MatrixIncludedComponents_default_instance_;
    new (ptr) ::MatrixIncludedComponents();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MatrixIncludedComponents::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MatrixIncludedComponents =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMatrixIncludedComponents}, {}};

static void InitDefaultsMessageRateHz() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MessageRateHz_default_instance_;
    new (ptr) ::MessageRateHz();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MessageRateHz::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MessageRateHz =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessageRateHz}, {}};

static void InitDefaultsMessageSegmentationInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MessageSegmentationInfo_default_instance_;
    new (ptr) ::MessageSegmentationInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MessageSegmentationInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MessageSegmentationInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessageSegmentationInfo}, {}};

static void InitDefaultsObjectClass() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ObjectClass_default_instance_;
    new (ptr) ::ObjectClass();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ObjectClass::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ObjectClass =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsObjectClass}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VruProfileAndSubprofile.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VruClusterInformation.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_OtherSubClass.base,}};

static void InitDefaultsObjectClassWithConfidence() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ObjectClassWithConfidence_default_instance_;
    new (ptr) ::ObjectClassWithConfidence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ObjectClassWithConfidence::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ObjectClassWithConfidence =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsObjectClassWithConfidence}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ObjectClass.base,}};

static void InitDefaultsObjectDimension() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ObjectDimension_default_instance_;
    new (ptr) ::ObjectDimension();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ObjectDimension::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ObjectDimension =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObjectDimension}, {}};

static void InitDefaultsOtherSubClass() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_OtherSubClass_default_instance_;
    new (ptr) ::OtherSubClass();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OtherSubClass::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OtherSubClass =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOtherSubClass}, {}};

static void InitDefaultsPolygonalShape() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PolygonalShape_default_instance_;
    new (ptr) ::PolygonalShape();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PolygonalShape::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PolygonalShape =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPolygonalShape}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CartesianPosition3d.base,}};

static void InitDefaultsPositionConfidenceEllipse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PositionConfidenceEllipse_default_instance_;
    new (ptr) ::PositionConfidenceEllipse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PositionConfidenceEllipse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PositionConfidenceEllipse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPositionConfidenceEllipse}, {}};

static void InitDefaultsRadialShape() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RadialShape_default_instance_;
    new (ptr) ::RadialShape();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RadialShape::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RadialShape =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRadialShape}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CartesianPosition3d.base,}};

static void InitDefaultsRadialShapes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RadialShapes_default_instance_;
    new (ptr) ::RadialShapes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RadialShapes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RadialShapes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRadialShapes}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_RadialShapeDetails.base,}};

static void InitDefaultsRadialShapeDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RadialShapeDetails_default_instance_;
    new (ptr) ::RadialShapeDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RadialShapeDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RadialShapeDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRadialShapeDetails}, {}};

static void InitDefaultsRectangularShape() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RectangularShape_default_instance_;
    new (ptr) ::RectangularShape();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RectangularShape::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RectangularShape =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRectangularShape}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CartesianPosition3d.base,}};

static void InitDefaultsReferenceDenms() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ReferenceDenms_default_instance_;
    new (ptr) ::ReferenceDenms();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReferenceDenms::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReferenceDenms =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReferenceDenms}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ActionID.base,}};

static void InitDefaultsReferencePosition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ReferencePosition_default_instance_;
    new (ptr) ::ReferencePosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReferencePosition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ReferencePosition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsReferencePosition}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_PositionConfidenceEllipse.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_Altitude.base,}};

static void InitDefaultsRestrictedTypes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RestrictedTypes_default_instance_;
    new (ptr) ::RestrictedTypes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RestrictedTypes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RestrictedTypes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRestrictedTypes}, {}};

static void InitDefaultsRoadSegmentReferenceID() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RoadSegmentReferenceID_default_instance_;
    new (ptr) ::RoadSegmentReferenceID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RoadSegmentReferenceID::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RoadSegmentReferenceID =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRoadSegmentReferenceID}, {}};

static void InitDefaultsShape() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Shape_default_instance_;
    new (ptr) ::Shape();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Shape::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_Shape =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsShape}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_RectangularShape.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CircularShape.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_PolygonalShape.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_EllipticalShape.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_RadialShape.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_RadialShapes.base,}};

static void InitDefaultsSpeed() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Speed_default_instance_;
    new (ptr) ::Speed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Speed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Speed =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSpeed}, {}};

static void InitDefaultsVehicleIdentification() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_VehicleIdentification_default_instance_;
    new (ptr) ::VehicleIdentification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::VehicleIdentification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VehicleIdentification =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVehicleIdentification}, {}};

static void InitDefaultsVehicleLength() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_VehicleLength_default_instance_;
    new (ptr) ::VehicleLength();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::VehicleLength::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VehicleLength =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVehicleLength}, {}};

static void InitDefaultsVehicleWidth() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_VehicleWidth_default_instance_;
    new (ptr) ::VehicleWidth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::VehicleWidth::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VehicleWidth =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVehicleWidth}, {}};

static void InitDefaultsVelocityCartesian() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_VelocityCartesian_default_instance_;
    new (ptr) ::VelocityCartesian();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::VelocityCartesian::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VelocityCartesian =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVelocityCartesian}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VelocityComponent.base,}};

static void InitDefaultsVelocityComponent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_VelocityComponent_default_instance_;
    new (ptr) ::VelocityComponent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::VelocityComponent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VelocityComponent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVelocityComponent}, {}};

static void InitDefaultsVelocityPolarWithZ() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_VelocityPolarWithZ_default_instance_;
    new (ptr) ::VelocityPolarWithZ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::VelocityPolarWithZ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_VelocityPolarWithZ =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsVelocityPolarWithZ}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_Speed.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CartesianAngle.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VelocityComponent.base,}};

static void InitDefaultsVelocity3dWithConfidence() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Velocity3dWithConfidence_default_instance_;
    new (ptr) ::Velocity3dWithConfidence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Velocity3dWithConfidence::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Velocity3dWithConfidence =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsVelocity3dWithConfidence}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VelocityPolarWithZ.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VelocityCartesian.base,}};

static void InitDefaultsVruClusterInformation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_VruClusterInformation_default_instance_;
    new (ptr) ::VruClusterInformation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::VruClusterInformation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_VruClusterInformation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsVruClusterInformation}, {
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_Shape.base,
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VruClusterProfiles.base,}};

static void InitDefaultsVruClusterProfiles() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_VruClusterProfiles_default_instance_;
    new (ptr) ::VruClusterProfiles();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::VruClusterProfiles::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VruClusterProfiles =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVruClusterProfiles}, {}};

static void InitDefaultsVruProfileAndSubprofile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_VruProfileAndSubprofile_default_instance_;
    new (ptr) ::VruProfileAndSubprofile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::VruProfileAndSubprofile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VruProfileAndSubprofile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVruProfileAndSubprofile}, {}};

static void InitDefaultsWgs84Angle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Wgs84Angle_default_instance_;
    new (ptr) ::Wgs84Angle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Wgs84Angle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Wgs84Angle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWgs84Angle}, {}};

static void InitDefaultsYawRate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_YawRate_default_instance_;
    new (ptr) ::YawRate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::YawRate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_YawRate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsYawRate}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Acceleration3dWithConfidence.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccelerationCartesian.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccelerationComponent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccelerationMagnitude.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccelerationPolarWithZ.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ActionID.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Altitude.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CartesianAngle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CartesianAngularVelocityComponent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CartesianPosition3d.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CartesianCoordinateWithConfidence.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CartesianPosition3dWithConfidence.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CircularShape.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClosedLanes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CorrelationColumn.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Curvature.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CauseCode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DangerousGoodsExtended.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeltaReferencePosition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EnergyStorageType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EllipticalShape.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EulerAnglesWithConfidence.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EventHistory.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EventPoint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Heading.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IntersectionReferenceID.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ItineraryPath.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LongitudinalAcceleration.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LongitudinalLanePosition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LowerTriangularPositiveSemidefiniteMatrix.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LowerTriangularPositiveSemidefiniteMatrixColumns.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MapPosition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MapReference.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MatrixIncludedComponents.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessageRateHz.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessageSegmentationInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectClass.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectClassWithConfidence.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectDimension.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OtherSubClass.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PolygonalShape.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PositionConfidenceEllipse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RadialShape.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RadialShapes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RadialShapeDetails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RectangularShape.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReferenceDenms.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReferencePosition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RestrictedTypes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RoadSegmentReferenceID.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Shape.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Speed.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleIdentification.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleLength.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleWidth.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VelocityCartesian.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VelocityComponent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VelocityPolarWithZ.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Velocity3dWithConfidence.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VruClusterInformation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VruClusterProfiles.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VruProfileAndSubprofile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Wgs84Angle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_YawRate.base);
}

::google::protobuf::Metadata file_level_metadata[64];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[24];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acceleration3dWithConfidence, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acceleration3dWithConfidence, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acceleration3dWithConfidence, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::Acceleration3dWithConfidenceDefaultTypeInternal, polaracceleration_),
  offsetof(::Acceleration3dWithConfidenceDefaultTypeInternal, cartesianacceleration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Acceleration3dWithConfidence, accelaration_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccelerationCartesian, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccelerationCartesian, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccelerationCartesian, xacceleration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccelerationCartesian, yacceleration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccelerationCartesian, zacceleration_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccelerationComponent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccelerationComponent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccelerationComponent, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccelerationComponent, confidence_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccelerationMagnitude, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccelerationMagnitude, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccelerationMagnitude, accelerationmagnitudevalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccelerationMagnitude, accelerationconfidence_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccelerationPolarWithZ, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccelerationPolarWithZ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccelerationPolarWithZ, accelerationmagnitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccelerationPolarWithZ, accelerationdirection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccelerationPolarWithZ, zacceleration_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionID, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionID, originatingstationid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ActionID, sequencenumber_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Altitude, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Altitude, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Altitude, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Altitude, confidence_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianAngle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianAngle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianAngle, cartesian_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianAngle, cartesian_angle_confidence_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianAngularVelocityComponent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianAngularVelocityComponent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianAngularVelocityComponent, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianAngularVelocityComponent, confidence_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianPosition3d, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianPosition3d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianPosition3d, x_cord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianPosition3d, y_cord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianPosition3d, z_cord_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianCoordinateWithConfidence, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianCoordinateWithConfidence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianCoordinateWithConfidence, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianCoordinateWithConfidence, confidence_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianPosition3dWithConfidence, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianPosition3dWithConfidence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianPosition3dWithConfidence, x_cord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianPosition3dWithConfidence, y_cord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesianPosition3dWithConfidence, z_cord_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CircularShape, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CircularShape, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CircularShape, shaperefpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CircularShape, radius_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CircularShape, height_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClosedLanes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClosedLanes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClosedLanes, innerhardshoulderstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClosedLanes, outerhardshoulderstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClosedLanes, drivinglanestatus_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CorrelationColumn, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CorrelationColumn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CorrelationColumn, value_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Curvature, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Curvature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Curvature, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Curvature, confidence_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CauseCode, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CauseCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CauseCode, causecode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CauseCode, subcausecode_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DangerousGoodsExtended, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DangerousGoodsExtended, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DangerousGoodsExtended, dangerousgoodstype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DangerousGoodsExtended, unnumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DangerousGoodsExtended, elevatedtemperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DangerousGoodsExtended, tunnelsrestricted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DangerousGoodsExtended, limitedquantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DangerousGoodsExtended, emergencyactioncode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DangerousGoodsExtended, phonenumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DangerousGoodsExtended, companyname_),
  3,
  4,
  5,
  6,
  7,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeltaReferencePosition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeltaReferencePosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeltaReferencePosition, deltalatitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeltaReferencePosition, deltalongitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeltaReferencePosition, deltaaltitude_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnergyStorageType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnergyStorageType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnergyStorageType, hydrogenstorage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnergyStorageType, electricenergystorage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnergyStorageType, liquidpropanegas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnergyStorageType, compressednaturalgas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnergyStorageType, diesel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnergyStorageType, gasoline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnergyStorageType, ammonia_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EllipticalShape, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EllipticalShape, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EllipticalShape, shapereferencepoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EllipticalShape, semimajoraxislength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EllipticalShape, semiminoraxislength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EllipticalShape, orientation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EllipticalShape, height_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EulerAnglesWithConfidence, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EulerAnglesWithConfidence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EulerAnglesWithConfidence, zangle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EulerAnglesWithConfidence, yangle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EulerAnglesWithConfidence, xangle_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EventHistory, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EventHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EventHistory, event_points_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EventPoint, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EventPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EventPoint, eventposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EventPoint, eventdeltatime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EventPoint, informationquality_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Heading, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Heading, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Heading, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Heading, confidence_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IntersectionReferenceID, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IntersectionReferenceID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IntersectionReferenceID, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IntersectionReferenceID, id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ItineraryPath, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ItineraryPath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ItineraryPath, path_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LongitudinalAcceleration, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LongitudinalAcceleration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LongitudinalAcceleration, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LongitudinalAcceleration, confidence_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LongitudinalLanePosition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LongitudinalLanePosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LongitudinalLanePosition, longitudinallanepositionvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LongitudinalLanePosition, longitudinallanepositionconfidence_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LowerTriangularPositiveSemidefiniteMatrix, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LowerTriangularPositiveSemidefiniteMatrix, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LowerTriangularPositiveSemidefiniteMatrix, componentsincludedinthematrix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LowerTriangularPositiveSemidefiniteMatrix, matrix_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LowerTriangularPositiveSemidefiniteMatrixColumns, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LowerTriangularPositiveSemidefiniteMatrixColumns, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LowerTriangularPositiveSemidefiniteMatrixColumns, columns_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MapPosition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MapPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MapPosition, mapreference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MapPosition, laneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MapPosition, connectionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MapPosition, longitudinallaneposition_),
  0,
  2,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MapReference, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MapReference, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MapReference, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::MapReferenceDefaultTypeInternal, roadsegment_),
  offsetof(::MapReferenceDefaultTypeInternal, intersection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MapReference, mapref_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MatrixIncludedComponents, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MatrixIncludedComponents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MatrixIncludedComponents, xposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MatrixIncludedComponents, yposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MatrixIncludedComponents, zposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MatrixIncludedComponents, xvelocityorvelocitymagnitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MatrixIncludedComponents, yvelocityorvelocitydirection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MatrixIncludedComponents, zspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MatrixIncludedComponents, xacceloraccelmagnitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MatrixIncludedComponents, yacceloracceldirection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MatrixIncludedComponents, zacceleration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MatrixIncludedComponents, zangle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MatrixIncludedComponents, yangle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MatrixIncludedComponents, xangle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MatrixIncludedComponents, zangularvelocity_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageRateHz, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageRateHz, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageRateHz, mantissa_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageRateHz, exponent_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageSegmentationInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageSegmentationInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageSegmentationInfo, totalmsgno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageSegmentationInfo, thismsgno_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObjectClass, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObjectClass, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObjectClass, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::ObjectClassDefaultTypeInternal, vehiclesubclass_),
  offsetof(::ObjectClassDefaultTypeInternal, vrusubclass_),
  offsetof(::ObjectClassDefaultTypeInternal, groupsubclass_),
  offsetof(::ObjectClassDefaultTypeInternal, othersubclass_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObjectClass, class_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObjectClassWithConfidence, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObjectClassWithConfidence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObjectClassWithConfidence, objectclass_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObjectClassWithConfidence, confidence_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObjectDimension, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObjectDimension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObjectDimension, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObjectDimension, confidence_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OtherSubClass, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OtherSubClass, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OtherSubClass, unknown_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OtherSubClass, singleobject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OtherSubClass, multipleobjects_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OtherSubClass, bulkmaterial_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PolygonalShape, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PolygonalShape, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PolygonalShape, shapereferencepoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PolygonalShape, polygon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PolygonalShape, height_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionConfidenceEllipse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionConfidenceEllipse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionConfidenceEllipse, semi_major_confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionConfidenceEllipse, semi_minor_confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionConfidenceEllipse, semi_major_orientation_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShape, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShape, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShape, sharedrefpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShape, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShape, stationaryhorizontalopeninganglestart_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShape, stationaryhorizontalopeningangleend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShape, verticalopeninganglestart_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShape, verticalopeningangleend_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShapes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShapes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShapes, refpointid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShapes, x_cord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShapes, y_cord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShapes, z_cord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShapes, radialshapeslist_),
  0,
  1,
  2,
  3,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShapeDetails, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShapeDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShapeDetails, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShapeDetails, horizontalopeninganglestart_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShapeDetails, horizontalopeningangleend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShapeDetails, verticalopeninganglestart_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadialShapeDetails, verticalopeningangleend_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RectangularShape, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RectangularShape, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RectangularShape, center_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RectangularShape, semilength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RectangularShape, semibreadth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RectangularShape, orientation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RectangularShape, height_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReferenceDenms, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReferenceDenms, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReferenceDenms, action_ids_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReferencePosition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReferencePosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReferencePosition, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReferencePosition, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReferencePosition, position_confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReferencePosition, altitude_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RestrictedTypes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RestrictedTypes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RestrictedTypes, restricted_vehicles_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoadSegmentReferenceID, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoadSegmentReferenceID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoadSegmentReferenceID, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoadSegmentReferenceID, id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Shape, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Shape, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Shape, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::ShapeDefaultTypeInternal, rectangular_),
  offsetof(::ShapeDefaultTypeInternal, circular_),
  offsetof(::ShapeDefaultTypeInternal, polygonal_),
  offsetof(::ShapeDefaultTypeInternal, elliptical_),
  offsetof(::ShapeDefaultTypeInternal, radial_),
  offsetof(::ShapeDefaultTypeInternal, radialshapes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Shape, shape_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Speed, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Speed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Speed, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Speed, confidence_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VehicleIdentification, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VehicleIdentification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VehicleIdentification, wminumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VehicleIdentification, vds_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VehicleLength, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VehicleLength, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VehicleLength, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VehicleLength, veh_len_conf_ind_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VehicleWidth, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VehicleWidth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VehicleWidth, value_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VelocityCartesian, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VelocityCartesian, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VelocityCartesian, xvelocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VelocityCartesian, yvelocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VelocityCartesian, zvelocity_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VelocityComponent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VelocityComponent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VelocityComponent, vel_comp_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VelocityComponent, speed_confidence_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VelocityPolarWithZ, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VelocityPolarWithZ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VelocityPolarWithZ, velocitymagnitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VelocityPolarWithZ, velocitydirection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VelocityPolarWithZ, zvelocity_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Velocity3dWithConfidence, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Velocity3dWithConfidence, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Velocity3dWithConfidence, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::Velocity3dWithConfidenceDefaultTypeInternal, polarvelocity_),
  offsetof(::Velocity3dWithConfidenceDefaultTypeInternal, cartesianvelocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Velocity3dWithConfidence, velocity_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VruClusterInformation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VruClusterInformation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VruClusterInformation, clusterid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VruClusterInformation, clusterboundingboxshape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VruClusterInformation, clustercardinalitysize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VruClusterInformation, clusterprofiles_),
  2,
  0,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VruClusterProfiles, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VruClusterProfiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VruClusterProfiles, pedestrian_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VruClusterProfiles, bicyclist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VruClusterProfiles, motorcyclist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VruClusterProfiles, animal_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VruProfileAndSubprofile, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VruProfileAndSubprofile, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VruProfileAndSubprofile, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::VruProfileAndSubprofileDefaultTypeInternal, pedestrian_),
  offsetof(::VruProfileAndSubprofileDefaultTypeInternal, bicyclistandlightvruvehicle_),
  offsetof(::VruProfileAndSubprofileDefaultTypeInternal, motorcyclist_),
  offsetof(::VruProfileAndSubprofileDefaultTypeInternal, animal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VruProfileAndSubprofile, vru_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Wgs84Angle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Wgs84Angle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Wgs84Angle, wgsanglevalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Wgs84Angle, wgs84angleconfidence_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::YawRate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::YawRate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::YawRate, yawratevalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::YawRate, yawrateconfidence_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::Acceleration3dWithConfidence)},
  { 10, 18, sizeof(::AccelerationCartesian)},
  { 21, 28, sizeof(::AccelerationComponent)},
  { 30, 37, sizeof(::AccelerationMagnitude)},
  { 39, 47, sizeof(::AccelerationPolarWithZ)},
  { 50, 57, sizeof(::ActionID)},
  { 59, 66, sizeof(::Altitude)},
  { 68, 75, sizeof(::CartesianAngle)},
  { 77, 84, sizeof(::CartesianAngularVelocityComponent)},
  { 86, 94, sizeof(::CartesianPosition3d)},
  { 97, 104, sizeof(::CartesianCoordinateWithConfidence)},
  { 106, 114, sizeof(::CartesianPosition3dWithConfidence)},
  { 117, 125, sizeof(::CircularShape)},
  { 128, 136, sizeof(::ClosedLanes)},
  { 139, 145, sizeof(::CorrelationColumn)},
  { 146, 153, sizeof(::Curvature)},
  { 155, 162, sizeof(::CauseCode)},
  { 164, 177, sizeof(::DangerousGoodsExtended)},
  { 185, 193, sizeof(::DeltaReferencePosition)},
  { 196, 208, sizeof(::EnergyStorageType)},
  { 215, 225, sizeof(::EllipticalShape)},
  { 230, 238, sizeof(::EulerAnglesWithConfidence)},
  { 241, 247, sizeof(::EventHistory)},
  { 248, 256, sizeof(::EventPoint)},
  { 259, 266, sizeof(::Heading)},
  { 268, 275, sizeof(::IntersectionReferenceID)},
  { 277, 283, sizeof(::ItineraryPath)},
  { 284, 291, sizeof(::LongitudinalAcceleration)},
  { 293, 300, sizeof(::LongitudinalLanePosition)},
  { 302, 309, sizeof(::LowerTriangularPositiveSemidefiniteMatrix)},
  { 311, 317, sizeof(::LowerTriangularPositiveSemidefiniteMatrixColumns)},
  { 318, 327, sizeof(::MapPosition)},
  { 331, 339, sizeof(::MapReference)},
  { 341, 359, sizeof(::MatrixIncludedComponents)},
  { 372, 379, sizeof(::MessageRateHz)},
  { 381, 388, sizeof(::MessageSegmentationInfo)},
  { 390, 400, sizeof(::ObjectClass)},
  { 404, 411, sizeof(::ObjectClassWithConfidence)},
  { 413, 420, sizeof(::ObjectDimension)},
  { 422, 431, sizeof(::OtherSubClass)},
  { 435, 443, sizeof(::PolygonalShape)},
  { 446, 454, sizeof(::PositionConfidenceEllipse)},
  { 457, 468, sizeof(::RadialShape)},
  { 474, 484, sizeof(::RadialShapes)},
  { 489, 499, sizeof(::RadialShapeDetails)},
  { 504, 514, sizeof(::RectangularShape)},
  { 519, 525, sizeof(::ReferenceDenms)},
  { 526, 535, sizeof(::ReferencePosition)},
  { 539, 545, sizeof(::RestrictedTypes)},
  { 546, 553, sizeof(::RoadSegmentReferenceID)},
  { 555, 567, sizeof(::Shape)},
  { 573, 580, sizeof(::Speed)},
  { 582, 589, sizeof(::VehicleIdentification)},
  { 591, 598, sizeof(::VehicleLength)},
  { 600, 606, sizeof(::VehicleWidth)},
  { 607, 615, sizeof(::VelocityCartesian)},
  { 618, 625, sizeof(::VelocityComponent)},
  { 627, 635, sizeof(::VelocityPolarWithZ)},
  { 638, 646, sizeof(::Velocity3dWithConfidence)},
  { 648, 657, sizeof(::VruClusterInformation)},
  { 661, 670, sizeof(::VruClusterProfiles)},
  { 674, 684, sizeof(::VruProfileAndSubprofile)},
  { 688, 695, sizeof(::Wgs84Angle)},
  { 697, 704, sizeof(::YawRate)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Acceleration3dWithConfidence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AccelerationCartesian_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AccelerationComponent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AccelerationMagnitude_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AccelerationPolarWithZ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ActionID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Altitude_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CartesianAngle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CartesianAngularVelocityComponent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CartesianPosition3d_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CartesianCoordinateWithConfidence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CartesianPosition3dWithConfidence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CircularShape_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClosedLanes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CorrelationColumn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Curvature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CauseCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DangerousGoodsExtended_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DeltaReferencePosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EnergyStorageType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EllipticalShape_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EulerAnglesWithConfidence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EventHistory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EventPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Heading_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_IntersectionReferenceID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ItineraryPath_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LongitudinalAcceleration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LongitudinalLanePosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LowerTriangularPositiveSemidefiniteMatrix_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LowerTriangularPositiveSemidefiniteMatrixColumns_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MapPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MapReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MatrixIncludedComponents_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MessageRateHz_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MessageSegmentationInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ObjectClass_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ObjectClassWithConfidence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ObjectDimension_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_OtherSubClass_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PolygonalShape_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PositionConfidenceEllipse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RadialShape_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RadialShapes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RadialShapeDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RectangularShape_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ReferenceDenms_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ReferencePosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RestrictedTypes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RoadSegmentReferenceID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Shape_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Speed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_VehicleIdentification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_VehicleLength_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_VehicleWidth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_VelocityCartesian_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_VelocityComponent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_VelocityPolarWithZ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Velocity3dWithConfidence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_VruClusterInformation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_VruClusterProfiles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_VruProfileAndSubprofile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Wgs84Angle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_YawRate_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "etsi_its_cdd.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 64);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022etsi_its_cdd.proto\"\235\001\n\034Acceleration3dW"
      "ithConfidence\0224\n\021polarAcceleration\030\001 \001(\013"
      "2\027.AccelerationPolarWithZH\000\0227\n\025cartesian"
      "Acceleration\030\002 \001(\0132\026.AccelerationCartesi"
      "anH\000B\016\n\014accelaration\"\244\001\n\025AccelerationCar"
      "tesian\022-\n\rxAcceleration\030\001 \002(\0132\026.Accelera"
      "tionComponent\022-\n\ryAcceleration\030\002 \002(\0132\026.A"
      "ccelerationComponent\022-\n\rzAcceleration\030\003 "
      "\001(\0132\026.AccelerationComponent\":\n\025Accelerat"
      "ionComponent\022\r\n\005value\030\001 \002(\005\022\022\n\nconfidenc"
      "e\030\002 \002(\r\"[\n\025AccelerationMagnitude\022\"\n\032acce"
      "lerationMagnitudeValue\030\001 \002(\r\022\036\n\026accelera"
      "tionConfidence\030\002 \002(\r\"\256\001\n\026AccelerationPol"
      "arWithZ\0225\n\025accelerationMagnitude\030\001 \002(\0132\026"
      ".AccelerationMagnitude\022.\n\025accelerationDi"
      "rection\030\002 \002(\0132\017.CartesianAngle\022-\n\rzAccel"
      "eration\030\003 \001(\0132\026.AccelerationComponent\"@\n"
      "\010ActionID\022\034\n\024originatingStationId\030\001 \002(\004\022"
      "\026\n\016sequenceNumber\030\002 \002(\r\"-\n\010Altitude\022\r\n\005v"
      "alue\030\001 \002(\005\022\022\n\nconfidence\030\002 \002(\r\"M\n\016Cartes"
      "ianAngle\022\027\n\017cartesian_value\030\001 \002(\003\022\"\n\032car"
      "tesian_angle_confidence\030\002 \002(\003\"_\n!Cartesi"
      "anAngularVelocityComponent\022\r\n\005value\030\001 \002("
      "\005\022+\n\nconfidence\030\002 \002(\0162\027.AngularSpeedConf"
      "idence\"E\n\023CartesianPosition3d\022\016\n\006x_cord\030"
      "\001 \002(\005\022\016\n\006y_cord\030\002 \002(\005\022\016\n\006z_cord\030\003 \002(\005\"F\n"
      "!CartesianCoordinateWithConfidence\022\r\n\005va"
      "lue\030\001 \002(\005\022\022\n\nconfidence\030\002 \002(\r\"\277\001\n!Cartes"
      "ianPosition3dWithConfidence\0222\n\006x_cord\030\001 "
      "\002(\0132\".CartesianCoordinateWithConfidence\022"
      "2\n\006y_cord\030\002 \002(\0132\".CartesianCoordinateWit"
      "hConfidence\0222\n\006z_cord\030\003 \001(\0132\".CartesianC"
      "oordinateWithConfidence\"\\\n\rCircularShape"
      "\022+\n\rshapeRefPoint\030\001 \001(\0132\024.CartesianPosit"
      "ion3d\022\016\n\006radius\030\002 \002(\005\022\016\n\006height\030\003 \001(\r\"\224\001"
      "\n\013ClosedLanes\0224\n\027innerhardShoulderStatus"
      "\030\001 \001(\0162\023.HardShoulderStatus\0224\n\027outerhard"
      "ShoulderStatus\030\002 \001(\0162\023.HardShoulderStatu"
      "s\022\031\n\021drivingLaneStatus\030\003 \001(\r\"\"\n\021Correlat"
      "ionColumn\022\r\n\005value\030\001 \003(\005\".\n\tCurvature\022\r\n"
      "\005value\030\001 \002(\005\022\022\n\nconfidence\030\002 \001(\005\"D\n\tCaus"
      "eCode\022!\n\tcauseCode\030\001 \002(\0162\016.CauseCodeType"
      "\022\024\n\014subCauseCode\030\002 \002(\r\"\364\001\n\026DangerousGood"
      "sExtended\0220\n\022dangerousGoodsType\030\001 \002(\0162\024."
      "DangerousGoodsBasic\022\020\n\010unNumber\030\002 \002(\r\022\033\n"
      "\023elevatedTemperature\030\003 \002(\010\022\031\n\021tunnelsRes"
      "tricted\030\004 \002(\010\022\027\n\017limitedQuantity\030\005 \002(\010\022\033"
      "\n\023emergencyActionCode\030\006 \001(\t\022\023\n\013phoneNumb"
      "er\030\007 \001(\t\022\023\n\013companyName\030\010 \001(\t\"^\n\026DeltaRe"
      "ferencePosition\022\025\n\rdeltaLatitude\030\001 \002(\005\022\026"
      "\n\016deltaLongitude\030\002 \002(\005\022\025\n\rdeltaAltitude\030"
      "\003 \002(\005\"\266\001\n\021EnergyStorageType\022\027\n\017hydrogenS"
      "torage\030\001 \002(\010\022\035\n\025electricEnergyStorage\030\002 "
      "\002(\010\022\030\n\020liquidPropaneGas\030\003 \002(\010\022\034\n\024compres"
      "sedNaturalGas\030\004 \002(\010\022\016\n\006diesel\030\005 \002(\010\022\020\n\010g"
      "asoline\030\006 \002(\010\022\017\n\007ammonia\030\007 \002(\010\"\243\001\n\017Ellip"
      "ticalShape\0221\n\023shapeReferencePoint\030\001 \001(\0132"
      "\024.CartesianPosition3d\022\033\n\023semiMajorAxisLe"
      "ngth\030\002 \002(\r\022\033\n\023semiMinorAxisLength\030\003 \002(\r\022"
      "\023\n\013orientation\030\004 \001(\r\022\016\n\006height\030\005 \001(\r\"~\n\031"
      "EulerAnglesWithConfidence\022\037\n\006zAngle\030\001 \002("
      "\0132\017.CartesianAngle\022\037\n\006yAngle\030\002 \001(\0132\017.Car"
      "tesianAngle\022\037\n\006xAngle\030\003 \001(\0132\017.CartesianA"
      "ngle\"1\n\014EventHistory\022!\n\014event_points\030\001 \003"
      "(\0132\013.EventPoint\"p\n\nEventPoint\022.\n\reventPo"
      "sition\030\001 \002(\0132\027.DeltaReferencePosition\022\026\n"
      "\016eventDeltaTime\030\002 \001(\r\022\032\n\022informationQual"
      "ity\030\003 \002(\r\",\n\007Heading\022\r\n\005value\030\001 \002(\005\022\022\n\nc"
      "onfidence\030\002 \002(\r\"5\n\027IntersectionReference"
      "ID\022\016\n\006region\030\001 \001(\003\022\n\n\002id\030\002 \001(\003\"1\n\rItiner"
      "aryPath\022 \n\004path\030\001 \003(\0132\022.ReferencePositio"
      "n\"=\n\030LongitudinalAcceleration\022\r\n\005value\030\001"
      " \002(\005\022\022\n\nconfidence\030\002 \001(\005\"m\n\030Longitudinal"
      "LanePosition\022%\n\035longitudinalLanePosition"
      "Value\030\001 \002(\r\022*\n\"longitudinalLanePositionC"
      "onfidence\030\002 \002(\r\"\260\001\n)LowerTriangularPosit"
      "iveSemidefiniteMatrix\022@\n\035componentsInclu"
      "dedIntheMatrix\030\001 \002(\0132\031.MatrixIncludedCom"
      "ponents\022A\n\006matrix\030\002 \002(\01321.LowerTriangula"
      "rPositiveSemidefiniteMatrixColumns\"W\n0Lo"
      "werTriangularPositiveSemidefiniteMatrixC"
      "olumns\022#\n\007columns\030\001 \003(\0132\022.CorrelationCol"
      "umn\"\225\001\n\013MapPosition\022#\n\014mapReference\030\001 \001("
      "\0132\r.MapReference\022\016\n\006laneId\030\002 \001(\r\022\024\n\014conn"
      "ectionId\030\003 \001(\r\022;\n\030longitudinalLanePositi"
      "on\030\004 \001(\0132\031.LongitudinalLanePosition\"z\n\014M"
      "apReference\022.\n\013roadsegment\030\001 \001(\0132\027.RoadS"
      "egmentReferenceIDH\000\0220\n\014intersection\030\002 \001("
      "\0132\030.IntersectionReferenceIDH\000B\010\n\006mapref\""
      "\320\002\n\030MatrixIncludedComponents\022\021\n\txPositio"
      "n\030\001 \002(\010\022\021\n\tyPosition\030\002 \002(\010\022\021\n\tzPosition\030"
      "\003 \002(\010\022$\n\034xVelocityOrVelocityMagnitude\030\004 "
      "\002(\010\022$\n\034yVelocityOrVelocityDirection\030\005 \002("
      "\010\022\016\n\006zSpeed\030\006 \002(\010\022\036\n\026xAccelOrAccelMagnit"
      "ude\030\007 \002(\010\022\036\n\026yAccelOrAccelDirection\030\010 \002("
      "\010\022\025\n\rzAcceleration\030\t \002(\010\022\016\n\006zAngle\030\n \002(\010"
      "\022\016\n\006yAngle\030\013 \002(\010\022\016\n\006xAngle\030\014 \002(\010\022\030\n\020zAng"
      "ularVelocity\030\r \002(\010\"3\n\rMessageRateHz\022\020\n\010m"
      "antissa\030\001 \002(\r\022\020\n\010exponent\030\002 \002(\005\"@\n\027Messa"
      "geSegmentationInfo\022\022\n\ntotalMsgNo\030\001 \002(\r\022\021"
      "\n\tthisMsgNo\030\002 \002(\r\"\325\001\n\013ObjectClass\0222\n\017veh"
      "icleSubClass\030\001 \001(\0162\027.TrafficParticipantT"
      "ypeH\000\022/\n\013vruSubClass\030\002 \001(\0132\030.VruProfileA"
      "ndSubprofileH\000\022/\n\rgroupSubClass\030\003 \001(\0132\026."
      "VruClusterInformationH\000\022\'\n\rotherSubClass"
      "\030\004 \001(\0132\016.OtherSubClassH\000B\007\n\005class\"R\n\031Obj"
      "ectClassWithConfidence\022!\n\013objectClass\030\001 "
      "\002(\0132\014.ObjectClass\022\022\n\nconfidence\030\002 \002(\r\"4\n"
      "\017ObjectDimension\022\r\n\005value\030\001 \002(\r\022\022\n\nconfi"
      "dence\030\002 \002(\r\"e\n\rOtherSubClass\022\017\n\007unknown\030"
      "\001 \002(\010\022\024\n\014singleObject\030\002 \002(\010\022\027\n\017multipleO"
      "bjects\030\003 \002(\010\022\024\n\014bulkMaterial\030\004 \002(\010\"z\n\016Po"
      "lygonalShape\0221\n\023shapeReferencePoint\030\001 \001("
      "\0132\024.CartesianPosition3d\022%\n\007polygon\030\002 \003(\013"
      "2\024.CartesianPosition3d\022\016\n\006height\030\003 \001(\r\"y"
      "\n\031PositionConfidenceEllipse\022\035\n\025semi_majo"
      "r_confidence\030\001 \002(\r\022\035\n\025semi_minor_confide"
      "nce\030\002 \002(\r\022\036\n\026semi_major_orientation\030\003 \002("
      "\r\"\352\001\n\013RadialShape\022,\n\016sharedRefPoint\030\001 \001("
      "\0132\024.CartesianPosition3d\022\r\n\005range\030\002 \002(\r\022-"
      "\n%stationaryHorizontalOpeningAngleStart\030"
      "\003 \002(\r\022+\n#stationaryHorizontalOpeningAngl"
      "eEnd\030\004 \002(\r\022!\n\031verticalOpeningAngleStart\030"
      "\005 \001(\r\022\037\n\027verticalOpeningAngleEnd\030\006 \001(\r\"\201"
      "\001\n\014RadialShapes\022\022\n\nrefPointID\030\001 \002(\r\022\016\n\006x"
      "_cord\030\002 \002(\005\022\016\n\006y_cord\030\003 \002(\005\022\016\n\006z_cord\030\004 "
      "\001(\005\022-\n\020radialShapesList\030\006 \003(\0132\023.RadialSh"
      "apeDetails\"\257\001\n\022RadialShapeDetails\022\r\n\005ran"
      "ge\030\001 \002(\005\022#\n\033horizontalOpeningAngleStart\030"
      "\002 \002(\r\022!\n\031horizontalOpeningAngleEnd\030\003 \002(\r"
      "\022!\n\031verticalOpeningAngleStart\030\004 \001(\r\022\037\n\027v"
      "erticalOpeningAngleEnd\030\005 \001(\r\"\214\001\n\020Rectang"
      "ularShape\022*\n\014center_point\030\001 \001(\0132\024.Cartes"
      "ianPosition3d\022\022\n\nsemiLength\030\002 \002(\r\022\023\n\013sem"
      "iBreadth\030\003 \002(\r\022\023\n\013orientation\030\004 \001(\r\022\016\n\006h"
      "eight\030\005 \001(\r\"/\n\016ReferenceDenms\022\035\n\naction_"
      "IDs\030\001 \003(\0132\t.ActionID\"\216\001\n\021ReferencePositi"
      "on\022\020\n\010latitude\030\001 \002(\003\022\021\n\tlongitude\030\002 \002(\003\022"
      "7\n\023position_confidence\030\003 \002(\0132\032.PositionC"
      "onfidenceEllipse\022\033\n\010altitude\030\004 \002(\0132\t.Alt"
      "itude\"<\n\017RestrictedTypes\022)\n\023restricted_v"
      "ehicles\030\001 \003(\0162\014.StationType\"4\n\026RoadSegme"
      "ntReferenceID\022\016\n\006region\030\001 \001(\003\022\n\n\002id\030\002 \002("
      "\003\"\363\001\n\005Shape\022(\n\013rectangular\030\001 \001(\0132\021.Recta"
      "ngularShapeH\000\022\"\n\010circular\030\002 \001(\0132\016.Circul"
      "arShapeH\000\022$\n\tpolygonal\030\003 \001(\0132\017.Polygonal"
      "ShapeH\000\022&\n\nelliptical\030\004 \001(\0132\020.Elliptical"
      "ShapeH\000\022\036\n\006radial\030\005 \001(\0132\014.RadialShapeH\000\022"
      "%\n\014radialShapes\030\006 \001(\0132\r.RadialShapesH\000B\007"
      "\n\005shape\"*\n\005Speed\022\r\n\005value\030\001 \002(\005\022\022\n\nconfi"
      "dence\030\002 \002(\r\"7\n\025VehicleIdentification\022\021\n\t"
      "WMInumber\030\001 \001(\t\022\013\n\003VDS\030\002 \001(\t\"\\\n\rVehicleL"
      "ength\022\r\n\005value\030\001 \002(\005\022<\n\020veh_len_conf_ind"
      "\030\002 \001(\0162\".VehicleLengthConfidenceIndicati"
      "on\"\035\n\014VehicleWidth\022\r\n\005value\030\001 \002(\005\"\210\001\n\021Ve"
      "locityCartesian\022%\n\txVelocity\030\001 \002(\0132\022.Vel"
      "ocityComponent\022%\n\tyVelocity\030\002 \002(\0132\022.Velo"
      "cityComponent\022%\n\tzVelocity\030\003 \001(\0132\022.Veloc"
      "ityComponent\"E\n\021VelocityComponent\022\026\n\016vel"
      "_comp_value\030\001 \002(\005\022\030\n\020speed_confidence\030\002 "
      "\002(\r\"\212\001\n\022VelocityPolarWithZ\022!\n\021velocityMa"
      "gnitude\030\001 \002(\0132\006.Speed\022*\n\021velocityDirecti"
      "on\030\002 \002(\0132\017.CartesianAngle\022%\n\tzVelocity\030\003"
      " \001(\0132\022.VelocityComponent\"\205\001\n\030Velocity3dW"
      "ithConfidence\022,\n\rpolarVelocity\030\001 \001(\0132\023.V"
      "elocityPolarWithZH\000\022/\n\021cartesianVelocity"
      "\030\002 \001(\0132\022.VelocityCartesianH\000B\n\n\010velocity"
      "\"\241\001\n\025VruClusterInformation\022\021\n\tclusterId\030"
      "\001 \001(\r\022\'\n\027clusterBoundingBoxShape\030\002 \001(\0132\006"
      ".Shape\022\036\n\026clusterCardinalitySize\030\003 \002(\r\022,"
      "\n\017clusterProfiles\030\004 \001(\0132\023.VruClusterProf"
      "iles\"a\n\022VruClusterProfiles\022\022\n\npedestrian"
      "\030\001 \002(\010\022\021\n\tbicyclist\030\002 \002(\010\022\024\n\014motorcyclis"
      "t\030\003 \002(\010\022\016\n\006animal\030\004 \002(\010\"\354\001\n\027VruProfileAn"
      "dSubprofile\022.\n\npedestrian\030\001 \001(\0162\030.VruSub"
      "ProfilePedestrianH\000\022>\n\033bicyclistAndLight"
      "VruVehicle\030\002 \001(\0162\027.VruSubProfileBicyclis"
      "tH\000\0222\n\014motorcyclist\030\003 \001(\0162\032.VruSubProfil"
      "eMotorcyclistH\000\022&\n\006animal\030\004 \001(\0162\024.VruSub"
      "ProfileAnimalH\000B\005\n\003vru\"A\n\nWgs84Angle\022\025\n\r"
      "wgsAngleValue\030\001 \002(\r\022\034\n\024wgs84AngleConfide"
      "nce\030\002 \002(\r\"N\n\007YawRate\022\024\n\014yawratevalue\030\001 \002"
      "(\005\022-\n\021yawrateconfidence\030\002 \002(\0162\022.YawRateC"
      "onfidence*\263\001\n\026AngularSpeedConfidence\022\021\n\r"
      "ASC_DEGSEC_01\020\000\022\021\n\rASC_DEGSEC_02\020\001\022\021\n\rAS"
      "C_DEGSEC_05\020\002\022\021\n\rASC_DEGSEC_10\020\003\022\021\n\rASC_"
      "DEGSEC_20\020\004\022\021\n\rASC_DEGSEC_50\020\005\022\022\n\016ASC_OU"
      "TOFRANGE\020\006\022\023\n\017ASC_UNAVAILABLE\020\007*\\\n\030Curva"
      "tureCalculationMode\022\023\n\017CCM_YAWRATEUSED\020\000"
      "\022\026\n\022CCM_YAWRATENOTUSED\020\001\022\023\n\017CCM_UNAVAILA"
      "BLE\020\002*\371\006\n\rCauseCodeType\022\030\n\024CCT_TRAFFICCO"
      "NDITION\020\001\022\020\n\014CCT_ACCIDENT\020\002\022\021\n\rCCT_ROADW"
      "ORKS\020\003\022\025\n\021CCT_IMPASSABILITY\020\005\022(\n$CCT_ADV"
      "ERSEWEATHERCONDITION_ADHESION\020\006\022\023\n\017CCT_A"
      "QUAPLANING\020\007\022*\n&CCT_HAZARDOUSLOCATION_SU"
      "RFACECONDITION\020\t\022+\n\'CCT_HAZARDOUSLOCATIO"
      "N_OBSTACLEONTHEROAD\020\n\022)\n%CCT_HAZARDOUSLO"
      "CATION_ANIMALONTHEROAD\020\013\022\036\n\032CCT_HUMANPRE"
      "SENCEONTHEROAD\020\014\022\027\n\023CCT_WRONGWAYDRIVING\020"
      "\016\022\'\n#CCT_RESCUEANDRECOVERYWORKINPROGRESS"
      "\020\017\0227\n3CCT_ADVERSEWEATHERCONDITION_EXTREM"
      "EWEATHERCONDITION\020\021\022*\n&CCT_ADVERSEWEATHE"
      "RCONDITION_VISIBILITY\020\022\022-\n)CCT_ADVERSEWE"
      "ATHERCONDITION_PRECIPITATION\020\023\022\020\n\014CCT_VI"
      "OLENCE\020\024\022\023\n\017CCT_SLOWVEHICLE\020\032\022\033\n\027CCT_DAN"
      "GEROUSENDOFQUEUE\020\033\022\030\n\024CCT_VEHICLEBREAKDO"
      "WN\020[\022\021\n\rCCT_POSTCRASH\020\\\022\024\n\020CCT_HUMANPROB"
      "LEM\020]\022\031\n\025CCT_STATIONARYVEHICLE\020^\022#\n\037CCT_"
      "EMERGENCYVEHICLEAPPROACHING\020_\022(\n$CCT_HAZ"
      "ARDOUSLOCATION_DANGEROUSCURVE\020`\022\025\n\021CCT_C"
      "OLLISIONRISK\020a\022\027\n\023CCT_SIGNALVIOLATION\020b\022"
      "\032\n\026CCT_DANGEROUSSITUATION\020c\022\034\n\030CCT_RAILW"
      "AYLEVELCROSSING\020d*\316\004\n\023DangerousGoodsBasi"
      "c\022\023\n\017DGB_EXPLOSIVES1\020\000\022\023\n\017DGB_EXPLOSIVES"
      "2\020\001\022\023\n\017DGB_EXPLOSIVES3\020\002\022\023\n\017DGB_EXPLOSIV"
      "ES4\020\003\022\023\n\017DGB_EXPLOSIVES5\020\004\022\023\n\017DGB_EXPLOS"
      "IVES6\020\005\022\026\n\022DGB_FLAMMABLEGASES\020\006\022\031\n\025DGB_N"
      "ONFLAMMABLEGASES\020\007\022\022\n\016DGB_TOXICGASES\020\010\022\030"
      "\n\024DGB_FLAMMABLELIQUIDS\020\t\022\027\n\023DGB_FLAMMABL"
      "ESOLIDS\020\n\022/\n+DGB_SUBSTANCESLIABLETOSPONT"
      "ANEOUSCOMBUSTION\020\013\022<\n8DGB_SUBSTANCESEMIT"
      "TINGFLAMMABLEGASESUPONCONTACTWITHWATER\020\014"
      "\022\033\n\027DGB_OXIDIZINGSUBSTANCES\020\r\022\030\n\024DGB_ORG"
      "ANICPEROXIDES\020\016\022\027\n\023DGB_TOXICSUBSTANCES\020\017"
      "\022\034\n\030DGB_INFECTIOUSSUBSTANCES\020\020\022\033\n\027DGB_RA"
      "DIOACTIVEMATERIAL\020\021\022\033\n\027DGB_CORROSIVESUBS"
      "TANCES\020\022\022(\n$DGB_MISCELLANEOUSDANGEROUSSU"
      "BSTANCES\020\023*E\n\016DriveDirection\022\016\n\nDD_FORWA"
      "RD\020\000\022\017\n\013DD_BACKWARD\020\001\022\022\n\016DD_UNAVAILABLE\020"
      "\002*_\n\022HardShoulderStatus\022\034\n\030HSS_AVAILABLE"
      "FORSTOPPING\020\000\022\016\n\nHSS_CLOSED\020\001\022\033\n\027HSS_AVA"
      "ILABLEFORDRIVING\020\002*E\n\022LightBarSirenInUse"
      "\022\030\n\024LS_LIGHTBARACTIVATED\020\000\022\025\n\021LS_SIRENAC"
      "TIVATED\020\001*\214\001\n\027PositioningSolutionType\022\035\n"
      "\031PST_NOPOSITIONINGSOLUTION\020\000\022\r\n\tPST_SGNS"
      "S\020\001\022\r\n\tPST_DGNSS\020\002\022\023\n\017PST_SGNSSPLUSDR\020\003\022"
      "\023\n\017PST_DGNSSPLUSDR\020\004\022\n\n\006PST_DR\020\005*\351\004\n\023Pos"
      "itionOfOccupants\022\034\n\030POS_OCC_ROW1LEFTOCCU"
      "PIED\020\000\022\035\n\031POS_OCC_ROW1RIGHTOCCUPIED\020\001\022\033\n"
      "\027POS_OCC_ROW1MIDOCCUPIED\020\002\022\035\n\031POS_OCC_RO"
      "W1NOTDETECTABLE\020\003\022\032\n\026POS_OCC_ROW1NOTPRES"
      "ENT\020\004\022\034\n\030POS_OCC_ROW2LEFTOCCUPIED\020\005\022\035\n\031P"
      "OS_OCC_ROW2RIGHTOCCUPIED\020\006\022\033\n\027POS_OCC_RO"
      "W2MIDOCCUPIED\020\007\022\035\n\031POS_OCC_ROW2NOTDETECT"
      "ABLE\020\010\022\032\n\026POS_OCC_ROW2NOTPRESENT\020\t\022\034\n\030PO"
      "S_OCC_ROW3LEFTOCCUPIED\020\n\022\035\n\031POS_OCC_ROW3"
      "RIGHTOCCUPIED\020\013\022\033\n\027POS_OCC_ROW3MIDOCCUPI"
      "ED\020\014\022\035\n\031POS_OCC_ROW3NOTDETECTABLE\020\r\022\032\n\026P"
      "OS_OCC_ROW3NOTPRESENT\020\016\022\034\n\030POS_OCC_ROW4L"
      "EFTOCCUPIED\020\017\022\035\n\031POS_OCC_ROW4RIGHTOCCUPI"
      "ED\020\020\022\033\n\027POS_OCC_ROW4MIDOCCUPIED\020\021\022\035\n\031POS"
      "_OCC_ROW4NOTDETECTABLE\020\022\022\032\n\026POS_OCC_ROW4"
      "NOTPRESENT\020\023*\346\001\n\021RelevanceDistance\022\030\n\024RE"
      "L_DIST_LESSTHAN50M\020\000\022\031\n\025REL_DIST_LESSTHA"
      "N100M\020\001\022\031\n\025REL_DIST_LESSTHAN200M\020\002\022\031\n\025RE"
      "L_DIST_LESSTHAN500M\020\003\022\032\n\026REL_DIST_LESSTH"
      "AN1000M\020\004\022\030\n\024REL_DIST_LESSTHAN5KM\020\005\022\031\n\025R"
      "EL_DIST_LESSTHAN10KM\020\006\022\025\n\021REL_DIST_OVER1"
      "0KM\020\007*\222\001\n\031RelevanceTrafficDirection\022\037\n\033R"
      "EL_TD_ALLTRAFFICDIRECTIONS\020\000\022\032\n\026REL_TD_U"
      "PSTREAMTRAFFIC\020\001\022\034\n\030REL_TD_DOWNSTREAMTRA"
      "FFIC\020\002\022\032\n\026REL_TD_OPPOSITETRAFFIC\020\003*>\n\031Re"
      "questResponseIndication\022\017\n\013RRI_REQUEST\020\000"
      "\022\020\n\014RRI_RESPONSE\020\001*\344\001\n\010RoadType\0222\n.RT_UR"
      "BAN_NOSTRUCTURALSEPARATIONTOOPPOSITELANE"
      "S\020\000\0224\n0RT_URBAN_WITHSTRUCTURALSEPARATION"
      "TOOPPOSITELANES\020\001\0225\n1RT_NONURBAN_NOSTRUC"
      "TURALSEPARATIONTOOPPOSITELANES\020\002\0227\n3RT_N"
      "ONURBAN_WITHSTRUCTURALSEPARATIONTOOPPOSI"
      "TELANES\020\003*\252\002\n\nSensorType\022\022\n\016SNSR_UNDEFIN"
      "ED\020\000\022\016\n\nSNSR_RADAR\020\001\022\016\n\nSNSR_LIDAR\020\002\022\022\n\016"
      "SNSR_MONOVIDEO\020\003\022\024\n\020SNSR_STEROVISION\020\004\022\024"
      "\n\020SNSR_NIGHTVISION\020\005\022\023\n\017SNSR_ULTRASONIC\020"
      "\006\022\014\n\010SNSR_PMD\020\007\022\026\n\022SNSR_INDUCTIONLOOP\020\010\022"
      "\030\n\024SNSR_SPHERICALCAMERA\020\t\022\014\n\010SNSR_UWB\020\n\022"
      "\021\n\rSNSR_ACOUSTIC\020\013\022\031\n\025SNSR_LOCALAGGREGAT"
      "ION\020\014\022\027\n\023SNSR_ITSAGGREGATION\020\r*\264\001\n\017Stati"
      "onarySince\022$\n STATIONARY_SINCE_LESSTHAN1"
      "MINUTE\020\000\022%\n!STATIONARY_SINCE_LESSTHAN2MI"
      "NUTES\020\001\022&\n\"STATIONARY_SINCE_LESSTHAN15MI"
      "NUTES\020\002\022,\n(STATIONARY_SINCE_EQUALORGREAT"
      "ER15MINUTES\020\003*\305\002\n\013StationType\022\024\n\020STN_TYP"
      "E_UNKNOWN\020\000\022\027\n\023STN_TYPE_PEDESTRIAN\020\001\022\024\n\020"
      "STN_TYPE_CYCLIST\020\002\022\022\n\016STN_TYPE_MOPED\020\003\022\027"
      "\n\023STN_TYPE_MOTORCYCLE\020\004\022\032\n\026STN_TYPE_PASS"
      "ENGER_CAR\020\005\022\020\n\014STN_TYPE_BUS\020\006\022\030\n\024STN_TYP"
      "E_LIGHT_TRUCK\020\007\022\030\n\024STN_TYPE_HEAVY_TRUCK\020"
      "\010\022\024\n\020STN_TYPE_TRAILER\020\t\022\034\n\030STN_TYPE_SPEC"
      "IAL_VEHICLE\020\n\022\021\n\rSTN_TYPE_TRAM\020\013\022\033\n\027STN_"
      "TYPE_ROAD_SIDE_UNIT\020\017*\210\003\n\026TrafficPartici"
      "pantType\022\023\n\017TP_TYPE_UNKNOWN\020\000\022\026\n\022TP_TYPE"
      "_PEDESTRIAN\020\001\022\023\n\017TP_TYPE_CYCLIST\020\002\022\021\n\rTP"
      "_TYPE_MOPED\020\003\022\026\n\022TP_TYPE_MOTORCYCLE\020\004\022\030\n"
      "\024TP_TYPE_PASSENGERCAR\020\005\022\017\n\013TP_TYPE_BUS\020\006"
      "\022\026\n\022TP_TYPE_LIGHTTRUCK\020\007\022\026\n\022TP_TYPE_HEAV"
      "YTRUCK\020\010\022\023\n\017TP_TYPE_TRAILER\020\t\022\032\n\026TP_TYPE"
      "_SPECIALVEHICLE\020\n\022\020\n\014TP_TYPE_TRAM\020\013\022\033\n\027T"
      "P_TYPE_LIGHTVRUVEHICLE\020\014\022\022\n\016TP_TYPE_ANIM"
      "AL\020\r\022\030\n\024TP_TYPE_AGRICULTURAL\020\016\022\030\n\024TP_TYP"
      "E_ROADSIDEUNIT\020\017*a\n\013TrafficRule\022\020\n\014TR_NO"
      "PASSING\020\000\022\031\n\025TR_NOPASSINGFORTRUCKS\020\001\022\022\n\016"
      "TR_PASSTORIGHT\020\002\022\021\n\rTR_PASSTOLEFT\020\003*\326\001\n!"
      "VehicleLengthConfidenceIndication\022\033\n\027VLC"
      "I_NO_TRAILER_PRESENT\020\000\022*\n&VLCI_TRAILER_P"
      "RESENT_WITH_KNOWN_LENGTH\020\001\022,\n(VLCI_TRAIL"
      "ER_PRESENT_WITH_UNKNOWN_LENGTH\020\002\022$\n VLCI"
      "_TRAILER_PRESENCE_IS_UNKNOWN\020\003\022\024\n\020VLCI_U"
      "NAVAILABLE\020\004*\206\001\n\027VruSubProfilePedestrian"
      "\022\023\n\017PED_UNAVAILABLE\020\000\022\033\n\027PED_ORDINARY_PE"
      "DESTRIAN\020\001\022\023\n\017PED_ROAD_WORKER\020\002\022\027\n\023PED_F"
      "IRST_RESPONDER\020\003\022\013\n\007PED_MAX\020\017*\344\001\n\026VruSub"
      "ProfileBicyclist\022\022\n\016BC_UNAVAILABLE\020\000\022\020\n\014"
      "BC_BICYCLIST\020\001\022\026\n\022BC_WHEELCHAIR_USER\020\002\022\026"
      "\n\022BC_HORSE_AND_RIDER\020\003\022\023\n\017BC_ROLLERSKATE"
      "R\020\004\022\020\n\014BC_E_SCOOTER\020\005\022\033\n\027BC_PERSONAL_TRA"
      "NSPORTER\020\006\022\016\n\nBC_PEDELEC\020\007\022\024\n\020BC_SPEED_P"
      "EDELEC\020\010\022\n\n\006BC_MAX\020\017*\245\001\n\031VruSubProfileMo"
      "torcyclist\022\022\n\016MC_UNAVAILABLE\020\000\022\014\n\010MC_MOP"
      "ED\020\001\022\021\n\rMC_MOTORCYCLE\020\002\022#\n\037MC_MOTORCYCLE"
      "_AND_SIDECAR_RIGHT\020\003\022\"\n\036MC_MOTORCYCLE_AN"
      "D_SIDECAR_LEFT\020\004\022\n\n\006MC_MAX\020\017*t\n\023VruSubPr"
      "ofileAnimal\022\022\n\016AN_UNAVAILABLE\020\000\022\022\n\016AN_WI"
      "LD_ANIMAL\020\001\022\022\n\016AN_FARM_ANIMAL\020\002\022\025\n\021AN_SE"
      "RVICE_ANIMAL\020\003\022\n\n\006AN_MAX\020\017*\335\001\n\021YawRateCo"
      "nfidence\022\025\n\021YRC_degSec_000_01\020\000\022\025\n\021YRC_d"
      "egSec_000_05\020\001\022\025\n\021YRC_degSec_000_10\020\002\022\025\n"
      "\021YRC_degSec_001_00\020\003\022\025\n\021YRC_degSec_005_0"
      "0\020\004\022\025\n\021YRC_degSec_010_00\020\005\022\025\n\021YRC_degSec"
      "_100_00\020\006\022\022\n\016YRC_OutOfRange\020\007\022\023\n\017YRC_UNA"
      "VAILABLE\020\010"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 13170);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "etsi_its_cdd.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_etsi_5fits_5fcdd_2eproto
const ::google::protobuf::EnumDescriptor* AngularSpeedConfidence_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[0];
}
bool AngularSpeedConfidence_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CurvatureCalculationMode_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[1];
}
bool CurvatureCalculationMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CauseCodeType_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[2];
}
bool CauseCodeType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 26:
    case 27:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DangerousGoodsBasic_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[3];
}
bool DangerousGoodsBasic_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DriveDirection_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[4];
}
bool DriveDirection_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* HardShoulderStatus_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[5];
}
bool HardShoulderStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LightBarSirenInUse_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[6];
}
bool LightBarSirenInUse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PositioningSolutionType_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[7];
}
bool PositioningSolutionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PositionOfOccupants_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[8];
}
bool PositionOfOccupants_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RelevanceDistance_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[9];
}
bool RelevanceDistance_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RelevanceTrafficDirection_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[10];
}
bool RelevanceTrafficDirection_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RequestResponseIndication_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[11];
}
bool RequestResponseIndication_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RoadType_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[12];
}
bool RoadType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SensorType_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[13];
}
bool SensorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* StationarySince_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[14];
}
bool StationarySince_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* StationType_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[15];
}
bool StationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TrafficParticipantType_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[16];
}
bool TrafficParticipantType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TrafficRule_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[17];
}
bool TrafficRule_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* VehicleLengthConfidenceIndication_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[18];
}
bool VehicleLengthConfidenceIndication_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* VruSubProfilePedestrian_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[19];
}
bool VruSubProfilePedestrian_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* VruSubProfileBicyclist_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[20];
}
bool VruSubProfileBicyclist_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* VruSubProfileMotorcyclist_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[21];
}
bool VruSubProfileMotorcyclist_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* VruSubProfileAnimal_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[22];
}
bool VruSubProfileAnimal_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* YawRateConfidence_descriptor() {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fits_5fcdd_2eproto::file_level_enum_descriptors[23];
}
bool YawRateConfidence_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Acceleration3dWithConfidence::InitAsDefaultInstance() {
  ::_Acceleration3dWithConfidence_default_instance_.polaracceleration_ = const_cast< ::AccelerationPolarWithZ*>(
      ::AccelerationPolarWithZ::internal_default_instance());
  ::_Acceleration3dWithConfidence_default_instance_.cartesianacceleration_ = const_cast< ::AccelerationCartesian*>(
      ::AccelerationCartesian::internal_default_instance());
}
void Acceleration3dWithConfidence::set_allocated_polaracceleration(::AccelerationPolarWithZ* polaracceleration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_accelaration();
  if (polaracceleration) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      polaracceleration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, polaracceleration, submessage_arena);
    }
    set_has_polaracceleration();
    accelaration_.polaracceleration_ = polaracceleration;
  }
  // @@protoc_insertion_point(field_set_allocated:Acceleration3dWithConfidence.polarAcceleration)
}
void Acceleration3dWithConfidence::set_allocated_cartesianacceleration(::AccelerationCartesian* cartesianacceleration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_accelaration();
  if (cartesianacceleration) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cartesianacceleration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cartesianacceleration, submessage_arena);
    }
    set_has_cartesianacceleration();
    accelaration_.cartesianacceleration_ = cartesianacceleration;
  }
  // @@protoc_insertion_point(field_set_allocated:Acceleration3dWithConfidence.cartesianAcceleration)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acceleration3dWithConfidence::kPolarAccelerationFieldNumber;
const int Acceleration3dWithConfidence::kCartesianAccelerationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acceleration3dWithConfidence::Acceleration3dWithConfidence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_Acceleration3dWithConfidence.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Acceleration3dWithConfidence)
}
Acceleration3dWithConfidence::Acceleration3dWithConfidence(const Acceleration3dWithConfidence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_accelaration();
  switch (from.accelaration_case()) {
    case kPolarAcceleration: {
      mutable_polaracceleration()->::AccelerationPolarWithZ::MergeFrom(from.polaracceleration());
      break;
    }
    case kCartesianAcceleration: {
      mutable_cartesianacceleration()->::AccelerationCartesian::MergeFrom(from.cartesianacceleration());
      break;
    }
    case ACCELARATION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Acceleration3dWithConfidence)
}

void Acceleration3dWithConfidence::SharedCtor() {
  clear_has_accelaration();
}

Acceleration3dWithConfidence::~Acceleration3dWithConfidence() {
  // @@protoc_insertion_point(destructor:Acceleration3dWithConfidence)
  SharedDtor();
}

void Acceleration3dWithConfidence::SharedDtor() {
  if (has_accelaration()) {
    clear_accelaration();
  }
}

void Acceleration3dWithConfidence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Acceleration3dWithConfidence::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acceleration3dWithConfidence& Acceleration3dWithConfidence::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_Acceleration3dWithConfidence.base);
  return *internal_default_instance();
}


void Acceleration3dWithConfidence::clear_accelaration() {
// @@protoc_insertion_point(one_of_clear_start:Acceleration3dWithConfidence)
  switch (accelaration_case()) {
    case kPolarAcceleration: {
      delete accelaration_.polaracceleration_;
      break;
    }
    case kCartesianAcceleration: {
      delete accelaration_.cartesianacceleration_;
      break;
    }
    case ACCELARATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ACCELARATION_NOT_SET;
}


void Acceleration3dWithConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:Acceleration3dWithConfidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_accelaration();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Acceleration3dWithConfidence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Acceleration3dWithConfidence)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .AccelerationPolarWithZ polarAcceleration = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_polaracceleration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .AccelerationCartesian cartesianAcceleration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cartesianacceleration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Acceleration3dWithConfidence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Acceleration3dWithConfidence)
  return false;
#undef DO_
}

void Acceleration3dWithConfidence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Acceleration3dWithConfidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (accelaration_case()) {
    case kPolarAcceleration:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_polaracceleration(), output);
      break;
    case kCartesianAcceleration:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_cartesianacceleration(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Acceleration3dWithConfidence)
}

::google::protobuf::uint8* Acceleration3dWithConfidence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Acceleration3dWithConfidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (accelaration_case()) {
    case kPolarAcceleration:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          1, this->_internal_polaracceleration(), deterministic, target);
      break;
    case kCartesianAcceleration:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_cartesianacceleration(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acceleration3dWithConfidence)
  return target;
}

size_t Acceleration3dWithConfidence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acceleration3dWithConfidence)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (accelaration_case()) {
    // optional .AccelerationPolarWithZ polarAcceleration = 1;
    case kPolarAcceleration: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *accelaration_.polaracceleration_);
      break;
    }
    // optional .AccelerationCartesian cartesianAcceleration = 2;
    case kCartesianAcceleration: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *accelaration_.cartesianacceleration_);
      break;
    }
    case ACCELARATION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Acceleration3dWithConfidence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Acceleration3dWithConfidence)
  GOOGLE_DCHECK_NE(&from, this);
  const Acceleration3dWithConfidence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acceleration3dWithConfidence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Acceleration3dWithConfidence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Acceleration3dWithConfidence)
    MergeFrom(*source);
  }
}

void Acceleration3dWithConfidence::MergeFrom(const Acceleration3dWithConfidence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Acceleration3dWithConfidence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.accelaration_case()) {
    case kPolarAcceleration: {
      mutable_polaracceleration()->::AccelerationPolarWithZ::MergeFrom(from.polaracceleration());
      break;
    }
    case kCartesianAcceleration: {
      mutable_cartesianacceleration()->::AccelerationCartesian::MergeFrom(from.cartesianacceleration());
      break;
    }
    case ACCELARATION_NOT_SET: {
      break;
    }
  }
}

void Acceleration3dWithConfidence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Acceleration3dWithConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acceleration3dWithConfidence::CopyFrom(const Acceleration3dWithConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acceleration3dWithConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acceleration3dWithConfidence::IsInitialized() const {
  switch (accelaration_case()) {
    case kPolarAcceleration: {
      if (has_polaracceleration()) {
        if (!this->polaracceleration().IsInitialized()) return false;
      }
      break;
    }
    case kCartesianAcceleration: {
      if (has_cartesianacceleration()) {
        if (!this->cartesianacceleration().IsInitialized()) return false;
      }
      break;
    }
    case ACCELARATION_NOT_SET: {
      break;
    }
  }
  return true;
}

void Acceleration3dWithConfidence::Swap(Acceleration3dWithConfidence* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acceleration3dWithConfidence::InternalSwap(Acceleration3dWithConfidence* other) {
  using std::swap;
  swap(accelaration_, other->accelaration_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Acceleration3dWithConfidence::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccelerationCartesian::InitAsDefaultInstance() {
  ::_AccelerationCartesian_default_instance_._instance.get_mutable()->xacceleration_ = const_cast< ::AccelerationComponent*>(
      ::AccelerationComponent::internal_default_instance());
  ::_AccelerationCartesian_default_instance_._instance.get_mutable()->yacceleration_ = const_cast< ::AccelerationComponent*>(
      ::AccelerationComponent::internal_default_instance());
  ::_AccelerationCartesian_default_instance_._instance.get_mutable()->zacceleration_ = const_cast< ::AccelerationComponent*>(
      ::AccelerationComponent::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccelerationCartesian::kXAccelerationFieldNumber;
const int AccelerationCartesian::kYAccelerationFieldNumber;
const int AccelerationCartesian::kZAccelerationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccelerationCartesian::AccelerationCartesian()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_AccelerationCartesian.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccelerationCartesian)
}
AccelerationCartesian::AccelerationCartesian(const AccelerationCartesian& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_xacceleration()) {
    xacceleration_ = new ::AccelerationComponent(*from.xacceleration_);
  } else {
    xacceleration_ = NULL;
  }
  if (from.has_yacceleration()) {
    yacceleration_ = new ::AccelerationComponent(*from.yacceleration_);
  } else {
    yacceleration_ = NULL;
  }
  if (from.has_zacceleration()) {
    zacceleration_ = new ::AccelerationComponent(*from.zacceleration_);
  } else {
    zacceleration_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:AccelerationCartesian)
}

void AccelerationCartesian::SharedCtor() {
  ::memset(&xacceleration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zacceleration_) -
      reinterpret_cast<char*>(&xacceleration_)) + sizeof(zacceleration_));
}

AccelerationCartesian::~AccelerationCartesian() {
  // @@protoc_insertion_point(destructor:AccelerationCartesian)
  SharedDtor();
}

void AccelerationCartesian::SharedDtor() {
  if (this != internal_default_instance()) delete xacceleration_;
  if (this != internal_default_instance()) delete yacceleration_;
  if (this != internal_default_instance()) delete zacceleration_;
}

void AccelerationCartesian::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccelerationCartesian::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccelerationCartesian& AccelerationCartesian::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_AccelerationCartesian.base);
  return *internal_default_instance();
}


void AccelerationCartesian::Clear() {
// @@protoc_insertion_point(message_clear_start:AccelerationCartesian)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(xacceleration_ != NULL);
      xacceleration_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(yacceleration_ != NULL);
      yacceleration_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(zacceleration_ != NULL);
      zacceleration_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AccelerationCartesian::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccelerationCartesian)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AccelerationComponent xAcceleration = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_xacceleration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .AccelerationComponent yAcceleration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_yacceleration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .AccelerationComponent zAcceleration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_zacceleration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccelerationCartesian)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccelerationCartesian)
  return false;
#undef DO_
}

void AccelerationCartesian::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccelerationCartesian)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .AccelerationComponent xAcceleration = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_xacceleration(), output);
  }

  // required .AccelerationComponent yAcceleration = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_yacceleration(), output);
  }

  // optional .AccelerationComponent zAcceleration = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_zacceleration(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AccelerationCartesian)
}

::google::protobuf::uint8* AccelerationCartesian::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccelerationCartesian)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .AccelerationComponent xAcceleration = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_xacceleration(), deterministic, target);
  }

  // required .AccelerationComponent yAcceleration = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_yacceleration(), deterministic, target);
  }

  // optional .AccelerationComponent zAcceleration = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_zacceleration(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccelerationCartesian)
  return target;
}

size_t AccelerationCartesian::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AccelerationCartesian)
  size_t total_size = 0;

  if (has_xacceleration()) {
    // required .AccelerationComponent xAcceleration = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *xacceleration_);
  }

  if (has_yacceleration()) {
    // required .AccelerationComponent yAcceleration = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *yacceleration_);
  }

  return total_size;
}
size_t AccelerationCartesian::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccelerationCartesian)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .AccelerationComponent xAcceleration = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *xacceleration_);

    // required .AccelerationComponent yAcceleration = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *yacceleration_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .AccelerationComponent zAcceleration = 3;
  if (has_zacceleration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *zacceleration_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccelerationCartesian::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccelerationCartesian)
  GOOGLE_DCHECK_NE(&from, this);
  const AccelerationCartesian* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccelerationCartesian>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccelerationCartesian)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccelerationCartesian)
    MergeFrom(*source);
  }
}

void AccelerationCartesian::MergeFrom(const AccelerationCartesian& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccelerationCartesian)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_xacceleration()->::AccelerationComponent::MergeFrom(from.xacceleration());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_yacceleration()->::AccelerationComponent::MergeFrom(from.yacceleration());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_zacceleration()->::AccelerationComponent::MergeFrom(from.zacceleration());
    }
  }
}

void AccelerationCartesian::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccelerationCartesian)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccelerationCartesian::CopyFrom(const AccelerationCartesian& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccelerationCartesian)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccelerationCartesian::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_xacceleration()) {
    if (!this->xacceleration_->IsInitialized()) return false;
  }
  if (has_yacceleration()) {
    if (!this->yacceleration_->IsInitialized()) return false;
  }
  if (has_zacceleration()) {
    if (!this->zacceleration_->IsInitialized()) return false;
  }
  return true;
}

void AccelerationCartesian::Swap(AccelerationCartesian* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccelerationCartesian::InternalSwap(AccelerationCartesian* other) {
  using std::swap;
  swap(xacceleration_, other->xacceleration_);
  swap(yacceleration_, other->yacceleration_);
  swap(zacceleration_, other->zacceleration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccelerationCartesian::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccelerationComponent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccelerationComponent::kValueFieldNumber;
const int AccelerationComponent::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccelerationComponent::AccelerationComponent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_AccelerationComponent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccelerationComponent)
}
AccelerationComponent::AccelerationComponent(const AccelerationComponent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&confidence_) -
    reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
  // @@protoc_insertion_point(copy_constructor:AccelerationComponent)
}

void AccelerationComponent::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confidence_) -
      reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
}

AccelerationComponent::~AccelerationComponent() {
  // @@protoc_insertion_point(destructor:AccelerationComponent)
  SharedDtor();
}

void AccelerationComponent::SharedDtor() {
}

void AccelerationComponent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccelerationComponent::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccelerationComponent& AccelerationComponent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_AccelerationComponent.base);
  return *internal_default_instance();
}


void AccelerationComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:AccelerationComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&confidence_) -
        reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AccelerationComponent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccelerationComponent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_confidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccelerationComponent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccelerationComponent)
  return false;
#undef DO_
}

void AccelerationComponent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccelerationComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  // required uint32 confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->confidence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AccelerationComponent)
}

::google::protobuf::uint8* AccelerationComponent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccelerationComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  // required uint32 confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->confidence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccelerationComponent)
  return target;
}

size_t AccelerationComponent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AccelerationComponent)
  size_t total_size = 0;

  if (has_value()) {
    // required int32 value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  if (has_confidence()) {
    // required uint32 confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->confidence());
  }

  return total_size;
}
size_t AccelerationComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccelerationComponent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());

    // required uint32 confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->confidence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccelerationComponent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccelerationComponent)
  GOOGLE_DCHECK_NE(&from, this);
  const AccelerationComponent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccelerationComponent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccelerationComponent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccelerationComponent)
    MergeFrom(*source);
  }
}

void AccelerationComponent::MergeFrom(const AccelerationComponent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccelerationComponent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000002u) {
      confidence_ = from.confidence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AccelerationComponent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccelerationComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccelerationComponent::CopyFrom(const AccelerationComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccelerationComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccelerationComponent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void AccelerationComponent::Swap(AccelerationComponent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccelerationComponent::InternalSwap(AccelerationComponent* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(confidence_, other->confidence_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccelerationComponent::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccelerationMagnitude::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccelerationMagnitude::kAccelerationMagnitudeValueFieldNumber;
const int AccelerationMagnitude::kAccelerationConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccelerationMagnitude::AccelerationMagnitude()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_AccelerationMagnitude.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccelerationMagnitude)
}
AccelerationMagnitude::AccelerationMagnitude(const AccelerationMagnitude& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accelerationmagnitudevalue_, &from.accelerationmagnitudevalue_,
    static_cast<size_t>(reinterpret_cast<char*>(&accelerationconfidence_) -
    reinterpret_cast<char*>(&accelerationmagnitudevalue_)) + sizeof(accelerationconfidence_));
  // @@protoc_insertion_point(copy_constructor:AccelerationMagnitude)
}

void AccelerationMagnitude::SharedCtor() {
  ::memset(&accelerationmagnitudevalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accelerationconfidence_) -
      reinterpret_cast<char*>(&accelerationmagnitudevalue_)) + sizeof(accelerationconfidence_));
}

AccelerationMagnitude::~AccelerationMagnitude() {
  // @@protoc_insertion_point(destructor:AccelerationMagnitude)
  SharedDtor();
}

void AccelerationMagnitude::SharedDtor() {
}

void AccelerationMagnitude::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccelerationMagnitude::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccelerationMagnitude& AccelerationMagnitude::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_AccelerationMagnitude.base);
  return *internal_default_instance();
}


void AccelerationMagnitude::Clear() {
// @@protoc_insertion_point(message_clear_start:AccelerationMagnitude)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&accelerationmagnitudevalue_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&accelerationconfidence_) -
        reinterpret_cast<char*>(&accelerationmagnitudevalue_)) + sizeof(accelerationconfidence_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AccelerationMagnitude::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccelerationMagnitude)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 accelerationMagnitudeValue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_accelerationmagnitudevalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accelerationmagnitudevalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 accelerationConfidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_accelerationconfidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accelerationconfidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccelerationMagnitude)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccelerationMagnitude)
  return false;
#undef DO_
}

void AccelerationMagnitude::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccelerationMagnitude)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 accelerationMagnitudeValue = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->accelerationmagnitudevalue(), output);
  }

  // required uint32 accelerationConfidence = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->accelerationconfidence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AccelerationMagnitude)
}

::google::protobuf::uint8* AccelerationMagnitude::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccelerationMagnitude)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 accelerationMagnitudeValue = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->accelerationmagnitudevalue(), target);
  }

  // required uint32 accelerationConfidence = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->accelerationconfidence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccelerationMagnitude)
  return target;
}

size_t AccelerationMagnitude::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AccelerationMagnitude)
  size_t total_size = 0;

  if (has_accelerationmagnitudevalue()) {
    // required uint32 accelerationMagnitudeValue = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->accelerationmagnitudevalue());
  }

  if (has_accelerationconfidence()) {
    // required uint32 accelerationConfidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->accelerationconfidence());
  }

  return total_size;
}
size_t AccelerationMagnitude::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccelerationMagnitude)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 accelerationMagnitudeValue = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->accelerationmagnitudevalue());

    // required uint32 accelerationConfidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->accelerationconfidence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccelerationMagnitude::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccelerationMagnitude)
  GOOGLE_DCHECK_NE(&from, this);
  const AccelerationMagnitude* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccelerationMagnitude>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccelerationMagnitude)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccelerationMagnitude)
    MergeFrom(*source);
  }
}

void AccelerationMagnitude::MergeFrom(const AccelerationMagnitude& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccelerationMagnitude)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      accelerationmagnitudevalue_ = from.accelerationmagnitudevalue_;
    }
    if (cached_has_bits & 0x00000002u) {
      accelerationconfidence_ = from.accelerationconfidence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AccelerationMagnitude::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccelerationMagnitude)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccelerationMagnitude::CopyFrom(const AccelerationMagnitude& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccelerationMagnitude)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccelerationMagnitude::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void AccelerationMagnitude::Swap(AccelerationMagnitude* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccelerationMagnitude::InternalSwap(AccelerationMagnitude* other) {
  using std::swap;
  swap(accelerationmagnitudevalue_, other->accelerationmagnitudevalue_);
  swap(accelerationconfidence_, other->accelerationconfidence_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccelerationMagnitude::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccelerationPolarWithZ::InitAsDefaultInstance() {
  ::_AccelerationPolarWithZ_default_instance_._instance.get_mutable()->accelerationmagnitude_ = const_cast< ::AccelerationMagnitude*>(
      ::AccelerationMagnitude::internal_default_instance());
  ::_AccelerationPolarWithZ_default_instance_._instance.get_mutable()->accelerationdirection_ = const_cast< ::CartesianAngle*>(
      ::CartesianAngle::internal_default_instance());
  ::_AccelerationPolarWithZ_default_instance_._instance.get_mutable()->zacceleration_ = const_cast< ::AccelerationComponent*>(
      ::AccelerationComponent::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccelerationPolarWithZ::kAccelerationMagnitudeFieldNumber;
const int AccelerationPolarWithZ::kAccelerationDirectionFieldNumber;
const int AccelerationPolarWithZ::kZAccelerationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccelerationPolarWithZ::AccelerationPolarWithZ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_AccelerationPolarWithZ.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccelerationPolarWithZ)
}
AccelerationPolarWithZ::AccelerationPolarWithZ(const AccelerationPolarWithZ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_accelerationmagnitude()) {
    accelerationmagnitude_ = new ::AccelerationMagnitude(*from.accelerationmagnitude_);
  } else {
    accelerationmagnitude_ = NULL;
  }
  if (from.has_accelerationdirection()) {
    accelerationdirection_ = new ::CartesianAngle(*from.accelerationdirection_);
  } else {
    accelerationdirection_ = NULL;
  }
  if (from.has_zacceleration()) {
    zacceleration_ = new ::AccelerationComponent(*from.zacceleration_);
  } else {
    zacceleration_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:AccelerationPolarWithZ)
}

void AccelerationPolarWithZ::SharedCtor() {
  ::memset(&accelerationmagnitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zacceleration_) -
      reinterpret_cast<char*>(&accelerationmagnitude_)) + sizeof(zacceleration_));
}

AccelerationPolarWithZ::~AccelerationPolarWithZ() {
  // @@protoc_insertion_point(destructor:AccelerationPolarWithZ)
  SharedDtor();
}

void AccelerationPolarWithZ::SharedDtor() {
  if (this != internal_default_instance()) delete accelerationmagnitude_;
  if (this != internal_default_instance()) delete accelerationdirection_;
  if (this != internal_default_instance()) delete zacceleration_;
}

void AccelerationPolarWithZ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccelerationPolarWithZ::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccelerationPolarWithZ& AccelerationPolarWithZ::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_AccelerationPolarWithZ.base);
  return *internal_default_instance();
}


void AccelerationPolarWithZ::Clear() {
// @@protoc_insertion_point(message_clear_start:AccelerationPolarWithZ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(accelerationmagnitude_ != NULL);
      accelerationmagnitude_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(accelerationdirection_ != NULL);
      accelerationdirection_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(zacceleration_ != NULL);
      zacceleration_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AccelerationPolarWithZ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccelerationPolarWithZ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AccelerationMagnitude accelerationMagnitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_accelerationmagnitude()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .CartesianAngle accelerationDirection = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_accelerationdirection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .AccelerationComponent zAcceleration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_zacceleration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccelerationPolarWithZ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccelerationPolarWithZ)
  return false;
#undef DO_
}

void AccelerationPolarWithZ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccelerationPolarWithZ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .AccelerationMagnitude accelerationMagnitude = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_accelerationmagnitude(), output);
  }

  // required .CartesianAngle accelerationDirection = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_accelerationdirection(), output);
  }

  // optional .AccelerationComponent zAcceleration = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_zacceleration(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AccelerationPolarWithZ)
}

::google::protobuf::uint8* AccelerationPolarWithZ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccelerationPolarWithZ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .AccelerationMagnitude accelerationMagnitude = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_accelerationmagnitude(), deterministic, target);
  }

  // required .CartesianAngle accelerationDirection = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_accelerationdirection(), deterministic, target);
  }

  // optional .AccelerationComponent zAcceleration = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_zacceleration(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccelerationPolarWithZ)
  return target;
}

size_t AccelerationPolarWithZ::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AccelerationPolarWithZ)
  size_t total_size = 0;

  if (has_accelerationmagnitude()) {
    // required .AccelerationMagnitude accelerationMagnitude = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *accelerationmagnitude_);
  }

  if (has_accelerationdirection()) {
    // required .CartesianAngle accelerationDirection = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *accelerationdirection_);
  }

  return total_size;
}
size_t AccelerationPolarWithZ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccelerationPolarWithZ)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .AccelerationMagnitude accelerationMagnitude = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *accelerationmagnitude_);

    // required .CartesianAngle accelerationDirection = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *accelerationdirection_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .AccelerationComponent zAcceleration = 3;
  if (has_zacceleration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *zacceleration_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccelerationPolarWithZ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccelerationPolarWithZ)
  GOOGLE_DCHECK_NE(&from, this);
  const AccelerationPolarWithZ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccelerationPolarWithZ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccelerationPolarWithZ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccelerationPolarWithZ)
    MergeFrom(*source);
  }
}

void AccelerationPolarWithZ::MergeFrom(const AccelerationPolarWithZ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccelerationPolarWithZ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_accelerationmagnitude()->::AccelerationMagnitude::MergeFrom(from.accelerationmagnitude());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_accelerationdirection()->::CartesianAngle::MergeFrom(from.accelerationdirection());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_zacceleration()->::AccelerationComponent::MergeFrom(from.zacceleration());
    }
  }
}

void AccelerationPolarWithZ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccelerationPolarWithZ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccelerationPolarWithZ::CopyFrom(const AccelerationPolarWithZ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccelerationPolarWithZ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccelerationPolarWithZ::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_accelerationmagnitude()) {
    if (!this->accelerationmagnitude_->IsInitialized()) return false;
  }
  if (has_accelerationdirection()) {
    if (!this->accelerationdirection_->IsInitialized()) return false;
  }
  if (has_zacceleration()) {
    if (!this->zacceleration_->IsInitialized()) return false;
  }
  return true;
}

void AccelerationPolarWithZ::Swap(AccelerationPolarWithZ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccelerationPolarWithZ::InternalSwap(AccelerationPolarWithZ* other) {
  using std::swap;
  swap(accelerationmagnitude_, other->accelerationmagnitude_);
  swap(accelerationdirection_, other->accelerationdirection_);
  swap(zacceleration_, other->zacceleration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccelerationPolarWithZ::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ActionID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionID::kOriginatingStationIdFieldNumber;
const int ActionID::kSequenceNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionID::ActionID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ActionID.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActionID)
}
ActionID::ActionID(const ActionID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&originatingstationid_, &from.originatingstationid_,
    static_cast<size_t>(reinterpret_cast<char*>(&sequencenumber_) -
    reinterpret_cast<char*>(&originatingstationid_)) + sizeof(sequencenumber_));
  // @@protoc_insertion_point(copy_constructor:ActionID)
}

void ActionID::SharedCtor() {
  ::memset(&originatingstationid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequencenumber_) -
      reinterpret_cast<char*>(&originatingstationid_)) + sizeof(sequencenumber_));
}

ActionID::~ActionID() {
  // @@protoc_insertion_point(destructor:ActionID)
  SharedDtor();
}

void ActionID::SharedDtor() {
}

void ActionID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ActionID::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionID& ActionID::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ActionID.base);
  return *internal_default_instance();
}


void ActionID::Clear() {
// @@protoc_insertion_point(message_clear_start:ActionID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&originatingstationid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sequencenumber_) -
        reinterpret_cast<char*>(&originatingstationid_)) + sizeof(sequencenumber_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActionID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActionID)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 originatingStationId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_originatingstationid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &originatingstationid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 sequenceNumber = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_sequencenumber();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sequencenumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActionID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActionID)
  return false;
#undef DO_
}

void ActionID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActionID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 originatingStationId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->originatingstationid(), output);
  }

  // required uint32 sequenceNumber = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sequencenumber(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActionID)
}

::google::protobuf::uint8* ActionID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActionID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 originatingStationId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->originatingstationid(), target);
  }

  // required uint32 sequenceNumber = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sequencenumber(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActionID)
  return target;
}

size_t ActionID::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ActionID)
  size_t total_size = 0;

  if (has_originatingstationid()) {
    // required uint64 originatingStationId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->originatingstationid());
  }

  if (has_sequencenumber()) {
    // required uint32 sequenceNumber = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sequencenumber());
  }

  return total_size;
}
size_t ActionID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActionID)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 originatingStationId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->originatingstationid());

    // required uint32 sequenceNumber = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sequencenumber());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActionID)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActionID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActionID)
    MergeFrom(*source);
  }
}

void ActionID::MergeFrom(const ActionID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActionID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      originatingstationid_ = from.originatingstationid_;
    }
    if (cached_has_bits & 0x00000002u) {
      sequencenumber_ = from.sequencenumber_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ActionID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActionID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionID::CopyFrom(const ActionID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActionID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionID::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ActionID::Swap(ActionID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionID::InternalSwap(ActionID* other) {
  using std::swap;
  swap(originatingstationid_, other->originatingstationid_);
  swap(sequencenumber_, other->sequencenumber_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ActionID::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Altitude::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Altitude::kValueFieldNumber;
const int Altitude::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Altitude::Altitude()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_Altitude.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Altitude)
}
Altitude::Altitude(const Altitude& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&confidence_) -
    reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
  // @@protoc_insertion_point(copy_constructor:Altitude)
}

void Altitude::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confidence_) -
      reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
}

Altitude::~Altitude() {
  // @@protoc_insertion_point(destructor:Altitude)
  SharedDtor();
}

void Altitude::SharedDtor() {
}

void Altitude::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Altitude::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Altitude& Altitude::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_Altitude.base);
  return *internal_default_instance();
}


void Altitude::Clear() {
// @@protoc_insertion_point(message_clear_start:Altitude)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&confidence_) -
        reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Altitude::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Altitude)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_confidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Altitude)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Altitude)
  return false;
#undef DO_
}

void Altitude::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Altitude)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  // required uint32 confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->confidence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Altitude)
}

::google::protobuf::uint8* Altitude::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Altitude)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  // required uint32 confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->confidence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Altitude)
  return target;
}

size_t Altitude::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Altitude)
  size_t total_size = 0;

  if (has_value()) {
    // required int32 value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  if (has_confidence()) {
    // required uint32 confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->confidence());
  }

  return total_size;
}
size_t Altitude::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Altitude)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());

    // required uint32 confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->confidence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Altitude::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Altitude)
  GOOGLE_DCHECK_NE(&from, this);
  const Altitude* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Altitude>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Altitude)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Altitude)
    MergeFrom(*source);
  }
}

void Altitude::MergeFrom(const Altitude& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Altitude)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000002u) {
      confidence_ = from.confidence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Altitude::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Altitude)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Altitude::CopyFrom(const Altitude& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Altitude)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Altitude::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Altitude::Swap(Altitude* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Altitude::InternalSwap(Altitude* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(confidence_, other->confidence_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Altitude::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CartesianAngle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CartesianAngle::kCartesianValueFieldNumber;
const int CartesianAngle::kCartesianAngleConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CartesianAngle::CartesianAngle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CartesianAngle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesianAngle)
}
CartesianAngle::CartesianAngle(const CartesianAngle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cartesian_value_, &from.cartesian_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&cartesian_angle_confidence_) -
    reinterpret_cast<char*>(&cartesian_value_)) + sizeof(cartesian_angle_confidence_));
  // @@protoc_insertion_point(copy_constructor:CartesianAngle)
}

void CartesianAngle::SharedCtor() {
  ::memset(&cartesian_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cartesian_angle_confidence_) -
      reinterpret_cast<char*>(&cartesian_value_)) + sizeof(cartesian_angle_confidence_));
}

CartesianAngle::~CartesianAngle() {
  // @@protoc_insertion_point(destructor:CartesianAngle)
  SharedDtor();
}

void CartesianAngle::SharedDtor() {
}

void CartesianAngle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CartesianAngle::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CartesianAngle& CartesianAngle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CartesianAngle.base);
  return *internal_default_instance();
}


void CartesianAngle::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesianAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&cartesian_value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cartesian_angle_confidence_) -
        reinterpret_cast<char*>(&cartesian_value_)) + sizeof(cartesian_angle_confidence_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CartesianAngle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesianAngle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 cartesian_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_cartesian_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cartesian_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 cartesian_angle_confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cartesian_angle_confidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cartesian_angle_confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesianAngle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesianAngle)
  return false;
#undef DO_
}

void CartesianAngle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesianAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 cartesian_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->cartesian_value(), output);
  }

  // required int64 cartesian_angle_confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->cartesian_angle_confidence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesianAngle)
}

::google::protobuf::uint8* CartesianAngle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesianAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 cartesian_value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->cartesian_value(), target);
  }

  // required int64 cartesian_angle_confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->cartesian_angle_confidence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesianAngle)
  return target;
}

size_t CartesianAngle::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CartesianAngle)
  size_t total_size = 0;

  if (has_cartesian_value()) {
    // required int64 cartesian_value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->cartesian_value());
  }

  if (has_cartesian_angle_confidence()) {
    // required int64 cartesian_angle_confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->cartesian_angle_confidence());
  }

  return total_size;
}
size_t CartesianAngle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesianAngle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 cartesian_value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->cartesian_value());

    // required int64 cartesian_angle_confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->cartesian_angle_confidence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CartesianAngle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesianAngle)
  GOOGLE_DCHECK_NE(&from, this);
  const CartesianAngle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CartesianAngle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesianAngle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesianAngle)
    MergeFrom(*source);
  }
}

void CartesianAngle::MergeFrom(const CartesianAngle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesianAngle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      cartesian_value_ = from.cartesian_value_;
    }
    if (cached_has_bits & 0x00000002u) {
      cartesian_angle_confidence_ = from.cartesian_angle_confidence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CartesianAngle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesianAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CartesianAngle::CopyFrom(const CartesianAngle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesianAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CartesianAngle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CartesianAngle::Swap(CartesianAngle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CartesianAngle::InternalSwap(CartesianAngle* other) {
  using std::swap;
  swap(cartesian_value_, other->cartesian_value_);
  swap(cartesian_angle_confidence_, other->cartesian_angle_confidence_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CartesianAngle::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CartesianAngularVelocityComponent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CartesianAngularVelocityComponent::kValueFieldNumber;
const int CartesianAngularVelocityComponent::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CartesianAngularVelocityComponent::CartesianAngularVelocityComponent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CartesianAngularVelocityComponent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesianAngularVelocityComponent)
}
CartesianAngularVelocityComponent::CartesianAngularVelocityComponent(const CartesianAngularVelocityComponent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&confidence_) -
    reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
  // @@protoc_insertion_point(copy_constructor:CartesianAngularVelocityComponent)
}

void CartesianAngularVelocityComponent::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confidence_) -
      reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
}

CartesianAngularVelocityComponent::~CartesianAngularVelocityComponent() {
  // @@protoc_insertion_point(destructor:CartesianAngularVelocityComponent)
  SharedDtor();
}

void CartesianAngularVelocityComponent::SharedDtor() {
}

void CartesianAngularVelocityComponent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CartesianAngularVelocityComponent::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CartesianAngularVelocityComponent& CartesianAngularVelocityComponent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CartesianAngularVelocityComponent.base);
  return *internal_default_instance();
}


void CartesianAngularVelocityComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesianAngularVelocityComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&confidence_) -
        reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CartesianAngularVelocityComponent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesianAngularVelocityComponent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .AngularSpeedConfidence confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AngularSpeedConfidence_IsValid(value)) {
            set_confidence(static_cast< ::AngularSpeedConfidence >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesianAngularVelocityComponent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesianAngularVelocityComponent)
  return false;
#undef DO_
}

void CartesianAngularVelocityComponent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesianAngularVelocityComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  // required .AngularSpeedConfidence confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->confidence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesianAngularVelocityComponent)
}

::google::protobuf::uint8* CartesianAngularVelocityComponent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesianAngularVelocityComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  // required .AngularSpeedConfidence confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->confidence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesianAngularVelocityComponent)
  return target;
}

size_t CartesianAngularVelocityComponent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CartesianAngularVelocityComponent)
  size_t total_size = 0;

  if (has_value()) {
    // required int32 value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  if (has_confidence()) {
    // required .AngularSpeedConfidence confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->confidence());
  }

  return total_size;
}
size_t CartesianAngularVelocityComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesianAngularVelocityComponent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());

    // required .AngularSpeedConfidence confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->confidence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CartesianAngularVelocityComponent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesianAngularVelocityComponent)
  GOOGLE_DCHECK_NE(&from, this);
  const CartesianAngularVelocityComponent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CartesianAngularVelocityComponent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesianAngularVelocityComponent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesianAngularVelocityComponent)
    MergeFrom(*source);
  }
}

void CartesianAngularVelocityComponent::MergeFrom(const CartesianAngularVelocityComponent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesianAngularVelocityComponent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000002u) {
      confidence_ = from.confidence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CartesianAngularVelocityComponent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesianAngularVelocityComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CartesianAngularVelocityComponent::CopyFrom(const CartesianAngularVelocityComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesianAngularVelocityComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CartesianAngularVelocityComponent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CartesianAngularVelocityComponent::Swap(CartesianAngularVelocityComponent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CartesianAngularVelocityComponent::InternalSwap(CartesianAngularVelocityComponent* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(confidence_, other->confidence_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CartesianAngularVelocityComponent::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CartesianPosition3d::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CartesianPosition3d::kXCordFieldNumber;
const int CartesianPosition3d::kYCordFieldNumber;
const int CartesianPosition3d::kZCordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CartesianPosition3d::CartesianPosition3d()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CartesianPosition3d.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesianPosition3d)
}
CartesianPosition3d::CartesianPosition3d(const CartesianPosition3d& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_cord_, &from.x_cord_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_cord_) -
    reinterpret_cast<char*>(&x_cord_)) + sizeof(z_cord_));
  // @@protoc_insertion_point(copy_constructor:CartesianPosition3d)
}

void CartesianPosition3d::SharedCtor() {
  ::memset(&x_cord_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_cord_) -
      reinterpret_cast<char*>(&x_cord_)) + sizeof(z_cord_));
}

CartesianPosition3d::~CartesianPosition3d() {
  // @@protoc_insertion_point(destructor:CartesianPosition3d)
  SharedDtor();
}

void CartesianPosition3d::SharedDtor() {
}

void CartesianPosition3d::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CartesianPosition3d::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CartesianPosition3d& CartesianPosition3d::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CartesianPosition3d.base);
  return *internal_default_instance();
}


void CartesianPosition3d::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesianPosition3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&x_cord_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&z_cord_) -
        reinterpret_cast<char*>(&x_cord_)) + sizeof(z_cord_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CartesianPosition3d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesianPosition3d)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 x_cord = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x_cord();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_cord_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y_cord = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y_cord();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_cord_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 z_cord = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_z_cord();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_cord_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesianPosition3d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesianPosition3d)
  return false;
#undef DO_
}

void CartesianPosition3d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesianPosition3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 x_cord = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x_cord(), output);
  }

  // required int32 y_cord = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y_cord(), output);
  }

  // required int32 z_cord = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->z_cord(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesianPosition3d)
}

::google::protobuf::uint8* CartesianPosition3d::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesianPosition3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 x_cord = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x_cord(), target);
  }

  // required int32 y_cord = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y_cord(), target);
  }

  // required int32 z_cord = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->z_cord(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesianPosition3d)
  return target;
}

size_t CartesianPosition3d::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CartesianPosition3d)
  size_t total_size = 0;

  if (has_x_cord()) {
    // required int32 x_cord = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x_cord());
  }

  if (has_y_cord()) {
    // required int32 y_cord = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y_cord());
  }

  if (has_z_cord()) {
    // required int32 z_cord = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->z_cord());
  }

  return total_size;
}
size_t CartesianPosition3d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesianPosition3d)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 x_cord = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x_cord());

    // required int32 y_cord = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y_cord());

    // required int32 z_cord = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->z_cord());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CartesianPosition3d::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesianPosition3d)
  GOOGLE_DCHECK_NE(&from, this);
  const CartesianPosition3d* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CartesianPosition3d>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesianPosition3d)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesianPosition3d)
    MergeFrom(*source);
  }
}

void CartesianPosition3d::MergeFrom(const CartesianPosition3d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesianPosition3d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      x_cord_ = from.x_cord_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_cord_ = from.y_cord_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_cord_ = from.z_cord_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CartesianPosition3d::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesianPosition3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CartesianPosition3d::CopyFrom(const CartesianPosition3d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesianPosition3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CartesianPosition3d::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void CartesianPosition3d::Swap(CartesianPosition3d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CartesianPosition3d::InternalSwap(CartesianPosition3d* other) {
  using std::swap;
  swap(x_cord_, other->x_cord_);
  swap(y_cord_, other->y_cord_);
  swap(z_cord_, other->z_cord_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CartesianPosition3d::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CartesianCoordinateWithConfidence::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CartesianCoordinateWithConfidence::kValueFieldNumber;
const int CartesianCoordinateWithConfidence::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CartesianCoordinateWithConfidence::CartesianCoordinateWithConfidence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CartesianCoordinateWithConfidence.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesianCoordinateWithConfidence)
}
CartesianCoordinateWithConfidence::CartesianCoordinateWithConfidence(const CartesianCoordinateWithConfidence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&confidence_) -
    reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
  // @@protoc_insertion_point(copy_constructor:CartesianCoordinateWithConfidence)
}

void CartesianCoordinateWithConfidence::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confidence_) -
      reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
}

CartesianCoordinateWithConfidence::~CartesianCoordinateWithConfidence() {
  // @@protoc_insertion_point(destructor:CartesianCoordinateWithConfidence)
  SharedDtor();
}

void CartesianCoordinateWithConfidence::SharedDtor() {
}

void CartesianCoordinateWithConfidence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CartesianCoordinateWithConfidence::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CartesianCoordinateWithConfidence& CartesianCoordinateWithConfidence::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CartesianCoordinateWithConfidence.base);
  return *internal_default_instance();
}


void CartesianCoordinateWithConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesianCoordinateWithConfidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&confidence_) -
        reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CartesianCoordinateWithConfidence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesianCoordinateWithConfidence)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_confidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesianCoordinateWithConfidence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesianCoordinateWithConfidence)
  return false;
#undef DO_
}

void CartesianCoordinateWithConfidence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesianCoordinateWithConfidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  // required uint32 confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->confidence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesianCoordinateWithConfidence)
}

::google::protobuf::uint8* CartesianCoordinateWithConfidence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesianCoordinateWithConfidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  // required uint32 confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->confidence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesianCoordinateWithConfidence)
  return target;
}

size_t CartesianCoordinateWithConfidence::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CartesianCoordinateWithConfidence)
  size_t total_size = 0;

  if (has_value()) {
    // required int32 value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  if (has_confidence()) {
    // required uint32 confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->confidence());
  }

  return total_size;
}
size_t CartesianCoordinateWithConfidence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesianCoordinateWithConfidence)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());

    // required uint32 confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->confidence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CartesianCoordinateWithConfidence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesianCoordinateWithConfidence)
  GOOGLE_DCHECK_NE(&from, this);
  const CartesianCoordinateWithConfidence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CartesianCoordinateWithConfidence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesianCoordinateWithConfidence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesianCoordinateWithConfidence)
    MergeFrom(*source);
  }
}

void CartesianCoordinateWithConfidence::MergeFrom(const CartesianCoordinateWithConfidence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesianCoordinateWithConfidence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000002u) {
      confidence_ = from.confidence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CartesianCoordinateWithConfidence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesianCoordinateWithConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CartesianCoordinateWithConfidence::CopyFrom(const CartesianCoordinateWithConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesianCoordinateWithConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CartesianCoordinateWithConfidence::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CartesianCoordinateWithConfidence::Swap(CartesianCoordinateWithConfidence* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CartesianCoordinateWithConfidence::InternalSwap(CartesianCoordinateWithConfidence* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(confidence_, other->confidence_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CartesianCoordinateWithConfidence::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CartesianPosition3dWithConfidence::InitAsDefaultInstance() {
  ::_CartesianPosition3dWithConfidence_default_instance_._instance.get_mutable()->x_cord_ = const_cast< ::CartesianCoordinateWithConfidence*>(
      ::CartesianCoordinateWithConfidence::internal_default_instance());
  ::_CartesianPosition3dWithConfidence_default_instance_._instance.get_mutable()->y_cord_ = const_cast< ::CartesianCoordinateWithConfidence*>(
      ::CartesianCoordinateWithConfidence::internal_default_instance());
  ::_CartesianPosition3dWithConfidence_default_instance_._instance.get_mutable()->z_cord_ = const_cast< ::CartesianCoordinateWithConfidence*>(
      ::CartesianCoordinateWithConfidence::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CartesianPosition3dWithConfidence::kXCordFieldNumber;
const int CartesianPosition3dWithConfidence::kYCordFieldNumber;
const int CartesianPosition3dWithConfidence::kZCordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CartesianPosition3dWithConfidence::CartesianPosition3dWithConfidence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CartesianPosition3dWithConfidence.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesianPosition3dWithConfidence)
}
CartesianPosition3dWithConfidence::CartesianPosition3dWithConfidence(const CartesianPosition3dWithConfidence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_x_cord()) {
    x_cord_ = new ::CartesianCoordinateWithConfidence(*from.x_cord_);
  } else {
    x_cord_ = NULL;
  }
  if (from.has_y_cord()) {
    y_cord_ = new ::CartesianCoordinateWithConfidence(*from.y_cord_);
  } else {
    y_cord_ = NULL;
  }
  if (from.has_z_cord()) {
    z_cord_ = new ::CartesianCoordinateWithConfidence(*from.z_cord_);
  } else {
    z_cord_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CartesianPosition3dWithConfidence)
}

void CartesianPosition3dWithConfidence::SharedCtor() {
  ::memset(&x_cord_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_cord_) -
      reinterpret_cast<char*>(&x_cord_)) + sizeof(z_cord_));
}

CartesianPosition3dWithConfidence::~CartesianPosition3dWithConfidence() {
  // @@protoc_insertion_point(destructor:CartesianPosition3dWithConfidence)
  SharedDtor();
}

void CartesianPosition3dWithConfidence::SharedDtor() {
  if (this != internal_default_instance()) delete x_cord_;
  if (this != internal_default_instance()) delete y_cord_;
  if (this != internal_default_instance()) delete z_cord_;
}

void CartesianPosition3dWithConfidence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CartesianPosition3dWithConfidence::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CartesianPosition3dWithConfidence& CartesianPosition3dWithConfidence::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CartesianPosition3dWithConfidence.base);
  return *internal_default_instance();
}


void CartesianPosition3dWithConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesianPosition3dWithConfidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(x_cord_ != NULL);
      x_cord_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(y_cord_ != NULL);
      y_cord_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(z_cord_ != NULL);
      z_cord_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CartesianPosition3dWithConfidence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesianPosition3dWithConfidence)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .CartesianCoordinateWithConfidence x_cord = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_x_cord()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .CartesianCoordinateWithConfidence y_cord = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_y_cord()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CartesianCoordinateWithConfidence z_cord = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_z_cord()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesianPosition3dWithConfidence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesianPosition3dWithConfidence)
  return false;
#undef DO_
}

void CartesianPosition3dWithConfidence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesianPosition3dWithConfidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .CartesianCoordinateWithConfidence x_cord = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_x_cord(), output);
  }

  // required .CartesianCoordinateWithConfidence y_cord = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_y_cord(), output);
  }

  // optional .CartesianCoordinateWithConfidence z_cord = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_z_cord(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesianPosition3dWithConfidence)
}

::google::protobuf::uint8* CartesianPosition3dWithConfidence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesianPosition3dWithConfidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .CartesianCoordinateWithConfidence x_cord = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_x_cord(), deterministic, target);
  }

  // required .CartesianCoordinateWithConfidence y_cord = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_y_cord(), deterministic, target);
  }

  // optional .CartesianCoordinateWithConfidence z_cord = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_z_cord(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesianPosition3dWithConfidence)
  return target;
}

size_t CartesianPosition3dWithConfidence::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CartesianPosition3dWithConfidence)
  size_t total_size = 0;

  if (has_x_cord()) {
    // required .CartesianCoordinateWithConfidence x_cord = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *x_cord_);
  }

  if (has_y_cord()) {
    // required .CartesianCoordinateWithConfidence y_cord = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *y_cord_);
  }

  return total_size;
}
size_t CartesianPosition3dWithConfidence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesianPosition3dWithConfidence)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .CartesianCoordinateWithConfidence x_cord = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *x_cord_);

    // required .CartesianCoordinateWithConfidence y_cord = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *y_cord_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .CartesianCoordinateWithConfidence z_cord = 3;
  if (has_z_cord()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *z_cord_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CartesianPosition3dWithConfidence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesianPosition3dWithConfidence)
  GOOGLE_DCHECK_NE(&from, this);
  const CartesianPosition3dWithConfidence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CartesianPosition3dWithConfidence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesianPosition3dWithConfidence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesianPosition3dWithConfidence)
    MergeFrom(*source);
  }
}

void CartesianPosition3dWithConfidence::MergeFrom(const CartesianPosition3dWithConfidence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesianPosition3dWithConfidence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_x_cord()->::CartesianCoordinateWithConfidence::MergeFrom(from.x_cord());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_y_cord()->::CartesianCoordinateWithConfidence::MergeFrom(from.y_cord());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_z_cord()->::CartesianCoordinateWithConfidence::MergeFrom(from.z_cord());
    }
  }
}

void CartesianPosition3dWithConfidence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesianPosition3dWithConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CartesianPosition3dWithConfidence::CopyFrom(const CartesianPosition3dWithConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesianPosition3dWithConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CartesianPosition3dWithConfidence::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_x_cord()) {
    if (!this->x_cord_->IsInitialized()) return false;
  }
  if (has_y_cord()) {
    if (!this->y_cord_->IsInitialized()) return false;
  }
  if (has_z_cord()) {
    if (!this->z_cord_->IsInitialized()) return false;
  }
  return true;
}

void CartesianPosition3dWithConfidence::Swap(CartesianPosition3dWithConfidence* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CartesianPosition3dWithConfidence::InternalSwap(CartesianPosition3dWithConfidence* other) {
  using std::swap;
  swap(x_cord_, other->x_cord_);
  swap(y_cord_, other->y_cord_);
  swap(z_cord_, other->z_cord_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CartesianPosition3dWithConfidence::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CircularShape::InitAsDefaultInstance() {
  ::_CircularShape_default_instance_._instance.get_mutable()->shaperefpoint_ = const_cast< ::CartesianPosition3d*>(
      ::CartesianPosition3d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CircularShape::kShapeRefPointFieldNumber;
const int CircularShape::kRadiusFieldNumber;
const int CircularShape::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CircularShape::CircularShape()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CircularShape.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CircularShape)
}
CircularShape::CircularShape(const CircularShape& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_shaperefpoint()) {
    shaperefpoint_ = new ::CartesianPosition3d(*from.shaperefpoint_);
  } else {
    shaperefpoint_ = NULL;
  }
  ::memcpy(&radius_, &from.radius_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&radius_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:CircularShape)
}

void CircularShape::SharedCtor() {
  ::memset(&shaperefpoint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&shaperefpoint_)) + sizeof(height_));
}

CircularShape::~CircularShape() {
  // @@protoc_insertion_point(destructor:CircularShape)
  SharedDtor();
}

void CircularShape::SharedDtor() {
  if (this != internal_default_instance()) delete shaperefpoint_;
}

void CircularShape::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CircularShape::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CircularShape& CircularShape::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CircularShape.base);
  return *internal_default_instance();
}


void CircularShape::Clear() {
// @@protoc_insertion_point(message_clear_start:CircularShape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(shaperefpoint_ != NULL);
    shaperefpoint_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&radius_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&height_) -
        reinterpret_cast<char*>(&radius_)) + sizeof(height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CircularShape::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CircularShape)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CartesianPosition3d shapeRefPoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shaperefpoint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 radius = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_radius();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &radius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CircularShape)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CircularShape)
  return false;
#undef DO_
}

void CircularShape::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CircularShape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CartesianPosition3d shapeRefPoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_shaperefpoint(), output);
  }

  // required int32 radius = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->radius(), output);
  }

  // optional uint32 height = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CircularShape)
}

::google::protobuf::uint8* CircularShape::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CircularShape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CartesianPosition3d shapeRefPoint = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_shaperefpoint(), deterministic, target);
  }

  // required int32 radius = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->radius(), target);
  }

  // optional uint32 height = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CircularShape)
  return target;
}

size_t CircularShape::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CircularShape)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 radius = 2;
  if (has_radius()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->radius());
  }
  // optional .CartesianPosition3d shapeRefPoint = 1;
  if (has_shaperefpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shaperefpoint_);
  }

  // optional uint32 height = 3;
  if (has_height()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CircularShape::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CircularShape)
  GOOGLE_DCHECK_NE(&from, this);
  const CircularShape* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CircularShape>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CircularShape)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CircularShape)
    MergeFrom(*source);
  }
}

void CircularShape::MergeFrom(const CircularShape& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CircularShape)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_shaperefpoint()->::CartesianPosition3d::MergeFrom(from.shaperefpoint());
    }
    if (cached_has_bits & 0x00000002u) {
      radius_ = from.radius_;
    }
    if (cached_has_bits & 0x00000004u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CircularShape::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CircularShape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CircularShape::CopyFrom(const CircularShape& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CircularShape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CircularShape::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_shaperefpoint()) {
    if (!this->shaperefpoint_->IsInitialized()) return false;
  }
  return true;
}

void CircularShape::Swap(CircularShape* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CircularShape::InternalSwap(CircularShape* other) {
  using std::swap;
  swap(shaperefpoint_, other->shaperefpoint_);
  swap(radius_, other->radius_);
  swap(height_, other->height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CircularShape::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClosedLanes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClosedLanes::kInnerhardShoulderStatusFieldNumber;
const int ClosedLanes::kOuterhardShoulderStatusFieldNumber;
const int ClosedLanes::kDrivingLaneStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClosedLanes::ClosedLanes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ClosedLanes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClosedLanes)
}
ClosedLanes::ClosedLanes(const ClosedLanes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&innerhardshoulderstatus_, &from.innerhardshoulderstatus_,
    static_cast<size_t>(reinterpret_cast<char*>(&drivinglanestatus_) -
    reinterpret_cast<char*>(&innerhardshoulderstatus_)) + sizeof(drivinglanestatus_));
  // @@protoc_insertion_point(copy_constructor:ClosedLanes)
}

void ClosedLanes::SharedCtor() {
  ::memset(&innerhardshoulderstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&drivinglanestatus_) -
      reinterpret_cast<char*>(&innerhardshoulderstatus_)) + sizeof(drivinglanestatus_));
}

ClosedLanes::~ClosedLanes() {
  // @@protoc_insertion_point(destructor:ClosedLanes)
  SharedDtor();
}

void ClosedLanes::SharedDtor() {
}

void ClosedLanes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClosedLanes::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClosedLanes& ClosedLanes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ClosedLanes.base);
  return *internal_default_instance();
}


void ClosedLanes::Clear() {
// @@protoc_insertion_point(message_clear_start:ClosedLanes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&innerhardshoulderstatus_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&drivinglanestatus_) -
        reinterpret_cast<char*>(&innerhardshoulderstatus_)) + sizeof(drivinglanestatus_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClosedLanes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClosedLanes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .HardShoulderStatus innerhardShoulderStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::HardShoulderStatus_IsValid(value)) {
            set_innerhardshoulderstatus(static_cast< ::HardShoulderStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .HardShoulderStatus outerhardShoulderStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::HardShoulderStatus_IsValid(value)) {
            set_outerhardshoulderstatus(static_cast< ::HardShoulderStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 drivingLaneStatus = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_drivinglanestatus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drivinglanestatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClosedLanes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClosedLanes)
  return false;
#undef DO_
}

void ClosedLanes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClosedLanes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .HardShoulderStatus innerhardShoulderStatus = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->innerhardshoulderstatus(), output);
  }

  // optional .HardShoulderStatus outerhardShoulderStatus = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->outerhardshoulderstatus(), output);
  }

  // optional uint32 drivingLaneStatus = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->drivinglanestatus(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ClosedLanes)
}

::google::protobuf::uint8* ClosedLanes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClosedLanes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .HardShoulderStatus innerhardShoulderStatus = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->innerhardshoulderstatus(), target);
  }

  // optional .HardShoulderStatus outerhardShoulderStatus = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->outerhardshoulderstatus(), target);
  }

  // optional uint32 drivingLaneStatus = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->drivinglanestatus(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClosedLanes)
  return target;
}

size_t ClosedLanes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClosedLanes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .HardShoulderStatus innerhardShoulderStatus = 1;
    if (has_innerhardshoulderstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->innerhardshoulderstatus());
    }

    // optional .HardShoulderStatus outerhardShoulderStatus = 2;
    if (has_outerhardshoulderstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->outerhardshoulderstatus());
    }

    // optional uint32 drivingLaneStatus = 3;
    if (has_drivinglanestatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->drivinglanestatus());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClosedLanes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClosedLanes)
  GOOGLE_DCHECK_NE(&from, this);
  const ClosedLanes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClosedLanes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClosedLanes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClosedLanes)
    MergeFrom(*source);
  }
}

void ClosedLanes::MergeFrom(const ClosedLanes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClosedLanes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      innerhardshoulderstatus_ = from.innerhardshoulderstatus_;
    }
    if (cached_has_bits & 0x00000002u) {
      outerhardshoulderstatus_ = from.outerhardshoulderstatus_;
    }
    if (cached_has_bits & 0x00000004u) {
      drivinglanestatus_ = from.drivinglanestatus_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ClosedLanes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClosedLanes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClosedLanes::CopyFrom(const ClosedLanes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClosedLanes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClosedLanes::IsInitialized() const {
  return true;
}

void ClosedLanes::Swap(ClosedLanes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClosedLanes::InternalSwap(ClosedLanes* other) {
  using std::swap;
  swap(innerhardshoulderstatus_, other->innerhardshoulderstatus_);
  swap(outerhardshoulderstatus_, other->outerhardshoulderstatus_);
  swap(drivinglanestatus_, other->drivinglanestatus_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClosedLanes::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CorrelationColumn::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CorrelationColumn::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CorrelationColumn::CorrelationColumn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CorrelationColumn.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CorrelationColumn)
}
CorrelationColumn::CorrelationColumn(const CorrelationColumn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      value_(from.value_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CorrelationColumn)
}

void CorrelationColumn::SharedCtor() {
}

CorrelationColumn::~CorrelationColumn() {
  // @@protoc_insertion_point(destructor:CorrelationColumn)
  SharedDtor();
}

void CorrelationColumn::SharedDtor() {
}

void CorrelationColumn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CorrelationColumn::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CorrelationColumn& CorrelationColumn::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CorrelationColumn.base);
  return *internal_default_instance();
}


void CorrelationColumn::Clear() {
// @@protoc_insertion_point(message_clear_start:CorrelationColumn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CorrelationColumn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CorrelationColumn)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CorrelationColumn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CorrelationColumn)
  return false;
#undef DO_
}

void CorrelationColumn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CorrelationColumn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 value = 1;
  for (int i = 0, n = this->value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->value(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CorrelationColumn)
}

::google::protobuf::uint8* CorrelationColumn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CorrelationColumn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 value = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->value_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CorrelationColumn)
  return target;
}

size_t CorrelationColumn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CorrelationColumn)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 value = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->value_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CorrelationColumn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CorrelationColumn)
  GOOGLE_DCHECK_NE(&from, this);
  const CorrelationColumn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CorrelationColumn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CorrelationColumn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CorrelationColumn)
    MergeFrom(*source);
  }
}

void CorrelationColumn::MergeFrom(const CorrelationColumn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CorrelationColumn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
}

void CorrelationColumn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CorrelationColumn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CorrelationColumn::CopyFrom(const CorrelationColumn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CorrelationColumn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CorrelationColumn::IsInitialized() const {
  return true;
}

void CorrelationColumn::Swap(CorrelationColumn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CorrelationColumn::InternalSwap(CorrelationColumn* other) {
  using std::swap;
  value_.InternalSwap(&other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CorrelationColumn::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Curvature::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Curvature::kValueFieldNumber;
const int Curvature::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Curvature::Curvature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_Curvature.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Curvature)
}
Curvature::Curvature(const Curvature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&confidence_) -
    reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
  // @@protoc_insertion_point(copy_constructor:Curvature)
}

void Curvature::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confidence_) -
      reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
}

Curvature::~Curvature() {
  // @@protoc_insertion_point(destructor:Curvature)
  SharedDtor();
}

void Curvature::SharedDtor() {
}

void Curvature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Curvature::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Curvature& Curvature::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_Curvature.base);
  return *internal_default_instance();
}


void Curvature::Clear() {
// @@protoc_insertion_point(message_clear_start:Curvature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&confidence_) -
        reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Curvature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Curvature)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_confidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Curvature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Curvature)
  return false;
#undef DO_
}

void Curvature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Curvature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  // optional int32 confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->confidence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Curvature)
}

::google::protobuf::uint8* Curvature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Curvature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  // optional int32 confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->confidence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Curvature)
  return target;
}

size_t Curvature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Curvature)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 value = 1;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }
  // optional int32 confidence = 2;
  if (has_confidence()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->confidence());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Curvature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Curvature)
  GOOGLE_DCHECK_NE(&from, this);
  const Curvature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Curvature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Curvature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Curvature)
    MergeFrom(*source);
  }
}

void Curvature::MergeFrom(const Curvature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Curvature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000002u) {
      confidence_ = from.confidence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Curvature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Curvature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Curvature::CopyFrom(const Curvature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Curvature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Curvature::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Curvature::Swap(Curvature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Curvature::InternalSwap(Curvature* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(confidence_, other->confidence_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Curvature::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CauseCode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CauseCode::kCauseCodeFieldNumber;
const int CauseCode::kSubCauseCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CauseCode::CauseCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CauseCode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CauseCode)
}
CauseCode::CauseCode(const CauseCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&subcausecode_, &from.subcausecode_,
    static_cast<size_t>(reinterpret_cast<char*>(&causecode_) -
    reinterpret_cast<char*>(&subcausecode_)) + sizeof(causecode_));
  // @@protoc_insertion_point(copy_constructor:CauseCode)
}

void CauseCode::SharedCtor() {
  subcausecode_ = 0u;
  causecode_ = 1;
}

CauseCode::~CauseCode() {
  // @@protoc_insertion_point(destructor:CauseCode)
  SharedDtor();
}

void CauseCode::SharedDtor() {
}

void CauseCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CauseCode::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CauseCode& CauseCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_CauseCode.base);
  return *internal_default_instance();
}


void CauseCode::Clear() {
// @@protoc_insertion_point(message_clear_start:CauseCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    subcausecode_ = 0u;
    causecode_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CauseCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CauseCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .CauseCodeType causeCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CauseCodeType_IsValid(value)) {
            set_causecode(static_cast< ::CauseCodeType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 subCauseCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_subcausecode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &subcausecode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CauseCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CauseCode)
  return false;
#undef DO_
}

void CauseCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CauseCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .CauseCodeType causeCode = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->causecode(), output);
  }

  // required uint32 subCauseCode = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->subcausecode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CauseCode)
}

::google::protobuf::uint8* CauseCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CauseCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .CauseCodeType causeCode = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->causecode(), target);
  }

  // required uint32 subCauseCode = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->subcausecode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CauseCode)
  return target;
}

size_t CauseCode::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CauseCode)
  size_t total_size = 0;

  if (has_subcausecode()) {
    // required uint32 subCauseCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->subcausecode());
  }

  if (has_causecode()) {
    // required .CauseCodeType causeCode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->causecode());
  }

  return total_size;
}
size_t CauseCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CauseCode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 subCauseCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->subcausecode());

    // required .CauseCodeType causeCode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->causecode());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CauseCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CauseCode)
  GOOGLE_DCHECK_NE(&from, this);
  const CauseCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CauseCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CauseCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CauseCode)
    MergeFrom(*source);
  }
}

void CauseCode::MergeFrom(const CauseCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CauseCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      subcausecode_ = from.subcausecode_;
    }
    if (cached_has_bits & 0x00000002u) {
      causecode_ = from.causecode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CauseCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CauseCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CauseCode::CopyFrom(const CauseCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CauseCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CauseCode::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CauseCode::Swap(CauseCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CauseCode::InternalSwap(CauseCode* other) {
  using std::swap;
  swap(subcausecode_, other->subcausecode_);
  swap(causecode_, other->causecode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CauseCode::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DangerousGoodsExtended::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DangerousGoodsExtended::kDangerousGoodsTypeFieldNumber;
const int DangerousGoodsExtended::kUnNumberFieldNumber;
const int DangerousGoodsExtended::kElevatedTemperatureFieldNumber;
const int DangerousGoodsExtended::kTunnelsRestrictedFieldNumber;
const int DangerousGoodsExtended::kLimitedQuantityFieldNumber;
const int DangerousGoodsExtended::kEmergencyActionCodeFieldNumber;
const int DangerousGoodsExtended::kPhoneNumberFieldNumber;
const int DangerousGoodsExtended::kCompanyNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DangerousGoodsExtended::DangerousGoodsExtended()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_DangerousGoodsExtended.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DangerousGoodsExtended)
}
DangerousGoodsExtended::DangerousGoodsExtended(const DangerousGoodsExtended& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  emergencyactioncode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_emergencyactioncode()) {
    emergencyactioncode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.emergencyactioncode_);
  }
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phonenumber()) {
    phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
  }
  companyname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_companyname()) {
    companyname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.companyname_);
  }
  ::memcpy(&dangerousgoodstype_, &from.dangerousgoodstype_,
    static_cast<size_t>(reinterpret_cast<char*>(&limitedquantity_) -
    reinterpret_cast<char*>(&dangerousgoodstype_)) + sizeof(limitedquantity_));
  // @@protoc_insertion_point(copy_constructor:DangerousGoodsExtended)
}

void DangerousGoodsExtended::SharedCtor() {
  emergencyactioncode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companyname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&dangerousgoodstype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limitedquantity_) -
      reinterpret_cast<char*>(&dangerousgoodstype_)) + sizeof(limitedquantity_));
}

DangerousGoodsExtended::~DangerousGoodsExtended() {
  // @@protoc_insertion_point(destructor:DangerousGoodsExtended)
  SharedDtor();
}

void DangerousGoodsExtended::SharedDtor() {
  emergencyactioncode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companyname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DangerousGoodsExtended::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DangerousGoodsExtended::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DangerousGoodsExtended& DangerousGoodsExtended::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_DangerousGoodsExtended.base);
  return *internal_default_instance();
}


void DangerousGoodsExtended::Clear() {
// @@protoc_insertion_point(message_clear_start:DangerousGoodsExtended)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      emergencyactioncode_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      phonenumber_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      companyname_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&dangerousgoodstype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&limitedquantity_) -
        reinterpret_cast<char*>(&dangerousgoodstype_)) + sizeof(limitedquantity_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DangerousGoodsExtended::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DangerousGoodsExtended)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DangerousGoodsBasic dangerousGoodsType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DangerousGoodsBasic_IsValid(value)) {
            set_dangerousgoodstype(static_cast< ::DangerousGoodsBasic >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 unNumber = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_unnumber();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unnumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool elevatedTemperature = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_elevatedtemperature();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &elevatedtemperature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool tunnelsRestricted = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_tunnelsrestricted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tunnelsrestricted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool limitedQuantity = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_limitedquantity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &limitedquantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string emergencyActionCode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_emergencyactioncode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->emergencyactioncode().data(), static_cast<int>(this->emergencyactioncode().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DangerousGoodsExtended.emergencyActionCode");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string phoneNumber = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenumber().data(), static_cast<int>(this->phonenumber().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DangerousGoodsExtended.phoneNumber");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string companyName = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_companyname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->companyname().data(), static_cast<int>(this->companyname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DangerousGoodsExtended.companyName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DangerousGoodsExtended)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DangerousGoodsExtended)
  return false;
#undef DO_
}

void DangerousGoodsExtended::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DangerousGoodsExtended)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .DangerousGoodsBasic dangerousGoodsType = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->dangerousgoodstype(), output);
  }

  // required uint32 unNumber = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->unnumber(), output);
  }

  // required bool elevatedTemperature = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->elevatedtemperature(), output);
  }

  // required bool tunnelsRestricted = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->tunnelsrestricted(), output);
  }

  // required bool limitedQuantity = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->limitedquantity(), output);
  }

  // optional string emergencyActionCode = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emergencyactioncode().data(), static_cast<int>(this->emergencyactioncode().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DangerousGoodsExtended.emergencyActionCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->emergencyactioncode(), output);
  }

  // optional string phoneNumber = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), static_cast<int>(this->phonenumber().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DangerousGoodsExtended.phoneNumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->phonenumber(), output);
  }

  // optional string companyName = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companyname().data(), static_cast<int>(this->companyname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DangerousGoodsExtended.companyName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->companyname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DangerousGoodsExtended)
}

::google::protobuf::uint8* DangerousGoodsExtended::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DangerousGoodsExtended)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .DangerousGoodsBasic dangerousGoodsType = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->dangerousgoodstype(), target);
  }

  // required uint32 unNumber = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->unnumber(), target);
  }

  // required bool elevatedTemperature = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->elevatedtemperature(), target);
  }

  // required bool tunnelsRestricted = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->tunnelsrestricted(), target);
  }

  // required bool limitedQuantity = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->limitedquantity(), target);
  }

  // optional string emergencyActionCode = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emergencyactioncode().data(), static_cast<int>(this->emergencyactioncode().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DangerousGoodsExtended.emergencyActionCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->emergencyactioncode(), target);
  }

  // optional string phoneNumber = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), static_cast<int>(this->phonenumber().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DangerousGoodsExtended.phoneNumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->phonenumber(), target);
  }

  // optional string companyName = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companyname().data(), static_cast<int>(this->companyname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DangerousGoodsExtended.companyName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->companyname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DangerousGoodsExtended)
  return target;
}

size_t DangerousGoodsExtended::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:DangerousGoodsExtended)
  size_t total_size = 0;

  if (has_dangerousgoodstype()) {
    // required .DangerousGoodsBasic dangerousGoodsType = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->dangerousgoodstype());
  }

  if (has_unnumber()) {
    // required uint32 unNumber = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unnumber());
  }

  if (has_elevatedtemperature()) {
    // required bool elevatedTemperature = 3;
    total_size += 1 + 1;
  }

  if (has_tunnelsrestricted()) {
    // required bool tunnelsRestricted = 4;
    total_size += 1 + 1;
  }

  if (has_limitedquantity()) {
    // required bool limitedQuantity = 5;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t DangerousGoodsExtended::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DangerousGoodsExtended)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000f8) ^ 0x000000f8) == 0) {  // All required fields are present.
    // required .DangerousGoodsBasic dangerousGoodsType = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->dangerousgoodstype());

    // required uint32 unNumber = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unnumber());

    // required bool elevatedTemperature = 3;
    total_size += 1 + 1;

    // required bool tunnelsRestricted = 4;
    total_size += 1 + 1;

    // required bool limitedQuantity = 5;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string emergencyActionCode = 6;
    if (has_emergencyactioncode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->emergencyactioncode());
    }

    // optional string phoneNumber = 7;
    if (has_phonenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenumber());
    }

    // optional string companyName = 8;
    if (has_companyname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->companyname());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DangerousGoodsExtended::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DangerousGoodsExtended)
  GOOGLE_DCHECK_NE(&from, this);
  const DangerousGoodsExtended* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DangerousGoodsExtended>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DangerousGoodsExtended)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DangerousGoodsExtended)
    MergeFrom(*source);
  }
}

void DangerousGoodsExtended::MergeFrom(const DangerousGoodsExtended& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DangerousGoodsExtended)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_emergencyactioncode();
      emergencyactioncode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.emergencyactioncode_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_phonenumber();
      phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_companyname();
      companyname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.companyname_);
    }
    if (cached_has_bits & 0x00000008u) {
      dangerousgoodstype_ = from.dangerousgoodstype_;
    }
    if (cached_has_bits & 0x00000010u) {
      unnumber_ = from.unnumber_;
    }
    if (cached_has_bits & 0x00000020u) {
      elevatedtemperature_ = from.elevatedtemperature_;
    }
    if (cached_has_bits & 0x00000040u) {
      tunnelsrestricted_ = from.tunnelsrestricted_;
    }
    if (cached_has_bits & 0x00000080u) {
      limitedquantity_ = from.limitedquantity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DangerousGoodsExtended::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DangerousGoodsExtended)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DangerousGoodsExtended::CopyFrom(const DangerousGoodsExtended& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DangerousGoodsExtended)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DangerousGoodsExtended::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000f8) != 0x000000f8) return false;
  return true;
}

void DangerousGoodsExtended::Swap(DangerousGoodsExtended* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DangerousGoodsExtended::InternalSwap(DangerousGoodsExtended* other) {
  using std::swap;
  emergencyactioncode_.Swap(&other->emergencyactioncode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phonenumber_.Swap(&other->phonenumber_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  companyname_.Swap(&other->companyname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(dangerousgoodstype_, other->dangerousgoodstype_);
  swap(unnumber_, other->unnumber_);
  swap(elevatedtemperature_, other->elevatedtemperature_);
  swap(tunnelsrestricted_, other->tunnelsrestricted_);
  swap(limitedquantity_, other->limitedquantity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DangerousGoodsExtended::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeltaReferencePosition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeltaReferencePosition::kDeltaLatitudeFieldNumber;
const int DeltaReferencePosition::kDeltaLongitudeFieldNumber;
const int DeltaReferencePosition::kDeltaAltitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeltaReferencePosition::DeltaReferencePosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_DeltaReferencePosition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeltaReferencePosition)
}
DeltaReferencePosition::DeltaReferencePosition(const DeltaReferencePosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&deltalatitude_, &from.deltalatitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&deltaaltitude_) -
    reinterpret_cast<char*>(&deltalatitude_)) + sizeof(deltaaltitude_));
  // @@protoc_insertion_point(copy_constructor:DeltaReferencePosition)
}

void DeltaReferencePosition::SharedCtor() {
  ::memset(&deltalatitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deltaaltitude_) -
      reinterpret_cast<char*>(&deltalatitude_)) + sizeof(deltaaltitude_));
}

DeltaReferencePosition::~DeltaReferencePosition() {
  // @@protoc_insertion_point(destructor:DeltaReferencePosition)
  SharedDtor();
}

void DeltaReferencePosition::SharedDtor() {
}

void DeltaReferencePosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeltaReferencePosition::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeltaReferencePosition& DeltaReferencePosition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_DeltaReferencePosition.base);
  return *internal_default_instance();
}


void DeltaReferencePosition::Clear() {
// @@protoc_insertion_point(message_clear_start:DeltaReferencePosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&deltalatitude_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&deltaaltitude_) -
        reinterpret_cast<char*>(&deltalatitude_)) + sizeof(deltaaltitude_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeltaReferencePosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeltaReferencePosition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 deltaLatitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_deltalatitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deltalatitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 deltaLongitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_deltalongitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deltalongitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 deltaAltitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_deltaaltitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deltaaltitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeltaReferencePosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeltaReferencePosition)
  return false;
#undef DO_
}

void DeltaReferencePosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeltaReferencePosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 deltaLatitude = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->deltalatitude(), output);
  }

  // required int32 deltaLongitude = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->deltalongitude(), output);
  }

  // required int32 deltaAltitude = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->deltaaltitude(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeltaReferencePosition)
}

::google::protobuf::uint8* DeltaReferencePosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeltaReferencePosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 deltaLatitude = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->deltalatitude(), target);
  }

  // required int32 deltaLongitude = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->deltalongitude(), target);
  }

  // required int32 deltaAltitude = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->deltaaltitude(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeltaReferencePosition)
  return target;
}

size_t DeltaReferencePosition::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:DeltaReferencePosition)
  size_t total_size = 0;

  if (has_deltalatitude()) {
    // required int32 deltaLatitude = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deltalatitude());
  }

  if (has_deltalongitude()) {
    // required int32 deltaLongitude = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deltalongitude());
  }

  if (has_deltaaltitude()) {
    // required int32 deltaAltitude = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deltaaltitude());
  }

  return total_size;
}
size_t DeltaReferencePosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeltaReferencePosition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 deltaLatitude = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deltalatitude());

    // required int32 deltaLongitude = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deltalongitude());

    // required int32 deltaAltitude = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deltaaltitude());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeltaReferencePosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeltaReferencePosition)
  GOOGLE_DCHECK_NE(&from, this);
  const DeltaReferencePosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeltaReferencePosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeltaReferencePosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeltaReferencePosition)
    MergeFrom(*source);
  }
}

void DeltaReferencePosition::MergeFrom(const DeltaReferencePosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeltaReferencePosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      deltalatitude_ = from.deltalatitude_;
    }
    if (cached_has_bits & 0x00000002u) {
      deltalongitude_ = from.deltalongitude_;
    }
    if (cached_has_bits & 0x00000004u) {
      deltaaltitude_ = from.deltaaltitude_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DeltaReferencePosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeltaReferencePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeltaReferencePosition::CopyFrom(const DeltaReferencePosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeltaReferencePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeltaReferencePosition::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void DeltaReferencePosition::Swap(DeltaReferencePosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeltaReferencePosition::InternalSwap(DeltaReferencePosition* other) {
  using std::swap;
  swap(deltalatitude_, other->deltalatitude_);
  swap(deltalongitude_, other->deltalongitude_);
  swap(deltaaltitude_, other->deltaaltitude_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeltaReferencePosition::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnergyStorageType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnergyStorageType::kHydrogenStorageFieldNumber;
const int EnergyStorageType::kElectricEnergyStorageFieldNumber;
const int EnergyStorageType::kLiquidPropaneGasFieldNumber;
const int EnergyStorageType::kCompressedNaturalGasFieldNumber;
const int EnergyStorageType::kDieselFieldNumber;
const int EnergyStorageType::kGasolineFieldNumber;
const int EnergyStorageType::kAmmoniaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnergyStorageType::EnergyStorageType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_EnergyStorageType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:EnergyStorageType)
}
EnergyStorageType::EnergyStorageType(const EnergyStorageType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hydrogenstorage_, &from.hydrogenstorage_,
    static_cast<size_t>(reinterpret_cast<char*>(&ammonia_) -
    reinterpret_cast<char*>(&hydrogenstorage_)) + sizeof(ammonia_));
  // @@protoc_insertion_point(copy_constructor:EnergyStorageType)
}

void EnergyStorageType::SharedCtor() {
  ::memset(&hydrogenstorage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ammonia_) -
      reinterpret_cast<char*>(&hydrogenstorage_)) + sizeof(ammonia_));
}

EnergyStorageType::~EnergyStorageType() {
  // @@protoc_insertion_point(destructor:EnergyStorageType)
  SharedDtor();
}

void EnergyStorageType::SharedDtor() {
}

void EnergyStorageType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EnergyStorageType::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnergyStorageType& EnergyStorageType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_EnergyStorageType.base);
  return *internal_default_instance();
}


void EnergyStorageType::Clear() {
// @@protoc_insertion_point(message_clear_start:EnergyStorageType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&hydrogenstorage_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ammonia_) -
        reinterpret_cast<char*>(&hydrogenstorage_)) + sizeof(ammonia_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnergyStorageType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EnergyStorageType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool hydrogenStorage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_hydrogenstorage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hydrogenstorage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool electricEnergyStorage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_electricenergystorage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &electricenergystorage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool liquidPropaneGas = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_liquidpropanegas();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &liquidpropanegas_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool compressedNaturalGas = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_compressednaturalgas();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &compressednaturalgas_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool diesel = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_diesel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &diesel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool gasoline = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_gasoline();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gasoline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool ammonia = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_ammonia();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ammonia_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EnergyStorageType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EnergyStorageType)
  return false;
#undef DO_
}

void EnergyStorageType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EnergyStorageType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool hydrogenStorage = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->hydrogenstorage(), output);
  }

  // required bool electricEnergyStorage = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->electricenergystorage(), output);
  }

  // required bool liquidPropaneGas = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->liquidpropanegas(), output);
  }

  // required bool compressedNaturalGas = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->compressednaturalgas(), output);
  }

  // required bool diesel = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->diesel(), output);
  }

  // required bool gasoline = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->gasoline(), output);
  }

  // required bool ammonia = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->ammonia(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EnergyStorageType)
}

::google::protobuf::uint8* EnergyStorageType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EnergyStorageType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool hydrogenStorage = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->hydrogenstorage(), target);
  }

  // required bool electricEnergyStorage = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->electricenergystorage(), target);
  }

  // required bool liquidPropaneGas = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->liquidpropanegas(), target);
  }

  // required bool compressedNaturalGas = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->compressednaturalgas(), target);
  }

  // required bool diesel = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->diesel(), target);
  }

  // required bool gasoline = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->gasoline(), target);
  }

  // required bool ammonia = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->ammonia(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EnergyStorageType)
  return target;
}

size_t EnergyStorageType::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:EnergyStorageType)
  size_t total_size = 0;

  if (has_hydrogenstorage()) {
    // required bool hydrogenStorage = 1;
    total_size += 1 + 1;
  }

  if (has_electricenergystorage()) {
    // required bool electricEnergyStorage = 2;
    total_size += 1 + 1;
  }

  if (has_liquidpropanegas()) {
    // required bool liquidPropaneGas = 3;
    total_size += 1 + 1;
  }

  if (has_compressednaturalgas()) {
    // required bool compressedNaturalGas = 4;
    total_size += 1 + 1;
  }

  if (has_diesel()) {
    // required bool diesel = 5;
    total_size += 1 + 1;
  }

  if (has_gasoline()) {
    // required bool gasoline = 6;
    total_size += 1 + 1;
  }

  if (has_ammonia()) {
    // required bool ammonia = 7;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t EnergyStorageType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EnergyStorageType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required bool hydrogenStorage = 1;
    total_size += 1 + 1;

    // required bool electricEnergyStorage = 2;
    total_size += 1 + 1;

    // required bool liquidPropaneGas = 3;
    total_size += 1 + 1;

    // required bool compressedNaturalGas = 4;
    total_size += 1 + 1;

    // required bool diesel = 5;
    total_size += 1 + 1;

    // required bool gasoline = 6;
    total_size += 1 + 1;

    // required bool ammonia = 7;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnergyStorageType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EnergyStorageType)
  GOOGLE_DCHECK_NE(&from, this);
  const EnergyStorageType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnergyStorageType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EnergyStorageType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EnergyStorageType)
    MergeFrom(*source);
  }
}

void EnergyStorageType::MergeFrom(const EnergyStorageType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EnergyStorageType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      hydrogenstorage_ = from.hydrogenstorage_;
    }
    if (cached_has_bits & 0x00000002u) {
      electricenergystorage_ = from.electricenergystorage_;
    }
    if (cached_has_bits & 0x00000004u) {
      liquidpropanegas_ = from.liquidpropanegas_;
    }
    if (cached_has_bits & 0x00000008u) {
      compressednaturalgas_ = from.compressednaturalgas_;
    }
    if (cached_has_bits & 0x00000010u) {
      diesel_ = from.diesel_;
    }
    if (cached_has_bits & 0x00000020u) {
      gasoline_ = from.gasoline_;
    }
    if (cached_has_bits & 0x00000040u) {
      ammonia_ = from.ammonia_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EnergyStorageType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EnergyStorageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnergyStorageType::CopyFrom(const EnergyStorageType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EnergyStorageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnergyStorageType::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  return true;
}

void EnergyStorageType::Swap(EnergyStorageType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnergyStorageType::InternalSwap(EnergyStorageType* other) {
  using std::swap;
  swap(hydrogenstorage_, other->hydrogenstorage_);
  swap(electricenergystorage_, other->electricenergystorage_);
  swap(liquidpropanegas_, other->liquidpropanegas_);
  swap(compressednaturalgas_, other->compressednaturalgas_);
  swap(diesel_, other->diesel_);
  swap(gasoline_, other->gasoline_);
  swap(ammonia_, other->ammonia_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EnergyStorageType::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EllipticalShape::InitAsDefaultInstance() {
  ::_EllipticalShape_default_instance_._instance.get_mutable()->shapereferencepoint_ = const_cast< ::CartesianPosition3d*>(
      ::CartesianPosition3d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EllipticalShape::kShapeReferencePointFieldNumber;
const int EllipticalShape::kSemiMajorAxisLengthFieldNumber;
const int EllipticalShape::kSemiMinorAxisLengthFieldNumber;
const int EllipticalShape::kOrientationFieldNumber;
const int EllipticalShape::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EllipticalShape::EllipticalShape()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_EllipticalShape.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:EllipticalShape)
}
EllipticalShape::EllipticalShape(const EllipticalShape& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_shapereferencepoint()) {
    shapereferencepoint_ = new ::CartesianPosition3d(*from.shapereferencepoint_);
  } else {
    shapereferencepoint_ = NULL;
  }
  ::memcpy(&semimajoraxislength_, &from.semimajoraxislength_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&semimajoraxislength_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:EllipticalShape)
}

void EllipticalShape::SharedCtor() {
  ::memset(&shapereferencepoint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&shapereferencepoint_)) + sizeof(height_));
}

EllipticalShape::~EllipticalShape() {
  // @@protoc_insertion_point(destructor:EllipticalShape)
  SharedDtor();
}

void EllipticalShape::SharedDtor() {
  if (this != internal_default_instance()) delete shapereferencepoint_;
}

void EllipticalShape::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EllipticalShape::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EllipticalShape& EllipticalShape::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_EllipticalShape.base);
  return *internal_default_instance();
}


void EllipticalShape::Clear() {
// @@protoc_insertion_point(message_clear_start:EllipticalShape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(shapereferencepoint_ != NULL);
    shapereferencepoint_->Clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&semimajoraxislength_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&height_) -
        reinterpret_cast<char*>(&semimajoraxislength_)) + sizeof(height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EllipticalShape::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EllipticalShape)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CartesianPosition3d shapeReferencePoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shapereferencepoint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 semiMajorAxisLength = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_semimajoraxislength();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &semimajoraxislength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 semiMinorAxisLength = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_semiminoraxislength();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &semiminoraxislength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 orientation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_orientation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &orientation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 height = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EllipticalShape)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EllipticalShape)
  return false;
#undef DO_
}

void EllipticalShape::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EllipticalShape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CartesianPosition3d shapeReferencePoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_shapereferencepoint(), output);
  }

  // required uint32 semiMajorAxisLength = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->semimajoraxislength(), output);
  }

  // required uint32 semiMinorAxisLength = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->semiminoraxislength(), output);
  }

  // optional uint32 orientation = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->orientation(), output);
  }

  // optional uint32 height = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EllipticalShape)
}

::google::protobuf::uint8* EllipticalShape::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EllipticalShape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CartesianPosition3d shapeReferencePoint = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_shapereferencepoint(), deterministic, target);
  }

  // required uint32 semiMajorAxisLength = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->semimajoraxislength(), target);
  }

  // required uint32 semiMinorAxisLength = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->semiminoraxislength(), target);
  }

  // optional uint32 orientation = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->orientation(), target);
  }

  // optional uint32 height = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EllipticalShape)
  return target;
}

size_t EllipticalShape::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:EllipticalShape)
  size_t total_size = 0;

  if (has_semimajoraxislength()) {
    // required uint32 semiMajorAxisLength = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->semimajoraxislength());
  }

  if (has_semiminoraxislength()) {
    // required uint32 semiMinorAxisLength = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->semiminoraxislength());
  }

  return total_size;
}
size_t EllipticalShape::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EllipticalShape)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 semiMajorAxisLength = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->semimajoraxislength());

    // required uint32 semiMinorAxisLength = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->semiminoraxislength());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .CartesianPosition3d shapeReferencePoint = 1;
  if (has_shapereferencepoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shapereferencepoint_);
  }

  if (_has_bits_[0 / 32] & 24u) {
    // optional uint32 orientation = 4;
    if (has_orientation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->orientation());
    }

    // optional uint32 height = 5;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EllipticalShape::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EllipticalShape)
  GOOGLE_DCHECK_NE(&from, this);
  const EllipticalShape* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EllipticalShape>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EllipticalShape)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EllipticalShape)
    MergeFrom(*source);
  }
}

void EllipticalShape::MergeFrom(const EllipticalShape& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EllipticalShape)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_shapereferencepoint()->::CartesianPosition3d::MergeFrom(from.shapereferencepoint());
    }
    if (cached_has_bits & 0x00000002u) {
      semimajoraxislength_ = from.semimajoraxislength_;
    }
    if (cached_has_bits & 0x00000004u) {
      semiminoraxislength_ = from.semiminoraxislength_;
    }
    if (cached_has_bits & 0x00000008u) {
      orientation_ = from.orientation_;
    }
    if (cached_has_bits & 0x00000010u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EllipticalShape::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EllipticalShape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EllipticalShape::CopyFrom(const EllipticalShape& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EllipticalShape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EllipticalShape::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (has_shapereferencepoint()) {
    if (!this->shapereferencepoint_->IsInitialized()) return false;
  }
  return true;
}

void EllipticalShape::Swap(EllipticalShape* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EllipticalShape::InternalSwap(EllipticalShape* other) {
  using std::swap;
  swap(shapereferencepoint_, other->shapereferencepoint_);
  swap(semimajoraxislength_, other->semimajoraxislength_);
  swap(semiminoraxislength_, other->semiminoraxislength_);
  swap(orientation_, other->orientation_);
  swap(height_, other->height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EllipticalShape::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EulerAnglesWithConfidence::InitAsDefaultInstance() {
  ::_EulerAnglesWithConfidence_default_instance_._instance.get_mutable()->zangle_ = const_cast< ::CartesianAngle*>(
      ::CartesianAngle::internal_default_instance());
  ::_EulerAnglesWithConfidence_default_instance_._instance.get_mutable()->yangle_ = const_cast< ::CartesianAngle*>(
      ::CartesianAngle::internal_default_instance());
  ::_EulerAnglesWithConfidence_default_instance_._instance.get_mutable()->xangle_ = const_cast< ::CartesianAngle*>(
      ::CartesianAngle::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EulerAnglesWithConfidence::kZAngleFieldNumber;
const int EulerAnglesWithConfidence::kYAngleFieldNumber;
const int EulerAnglesWithConfidence::kXAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EulerAnglesWithConfidence::EulerAnglesWithConfidence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_EulerAnglesWithConfidence.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:EulerAnglesWithConfidence)
}
EulerAnglesWithConfidence::EulerAnglesWithConfidence(const EulerAnglesWithConfidence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_zangle()) {
    zangle_ = new ::CartesianAngle(*from.zangle_);
  } else {
    zangle_ = NULL;
  }
  if (from.has_yangle()) {
    yangle_ = new ::CartesianAngle(*from.yangle_);
  } else {
    yangle_ = NULL;
  }
  if (from.has_xangle()) {
    xangle_ = new ::CartesianAngle(*from.xangle_);
  } else {
    xangle_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:EulerAnglesWithConfidence)
}

void EulerAnglesWithConfidence::SharedCtor() {
  ::memset(&zangle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&xangle_) -
      reinterpret_cast<char*>(&zangle_)) + sizeof(xangle_));
}

EulerAnglesWithConfidence::~EulerAnglesWithConfidence() {
  // @@protoc_insertion_point(destructor:EulerAnglesWithConfidence)
  SharedDtor();
}

void EulerAnglesWithConfidence::SharedDtor() {
  if (this != internal_default_instance()) delete zangle_;
  if (this != internal_default_instance()) delete yangle_;
  if (this != internal_default_instance()) delete xangle_;
}

void EulerAnglesWithConfidence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EulerAnglesWithConfidence::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EulerAnglesWithConfidence& EulerAnglesWithConfidence::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_EulerAnglesWithConfidence.base);
  return *internal_default_instance();
}


void EulerAnglesWithConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:EulerAnglesWithConfidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(zangle_ != NULL);
      zangle_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(yangle_ != NULL);
      yangle_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(xangle_ != NULL);
      xangle_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EulerAnglesWithConfidence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EulerAnglesWithConfidence)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .CartesianAngle zAngle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_zangle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CartesianAngle yAngle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_yangle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CartesianAngle xAngle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_xangle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EulerAnglesWithConfidence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EulerAnglesWithConfidence)
  return false;
#undef DO_
}

void EulerAnglesWithConfidence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EulerAnglesWithConfidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .CartesianAngle zAngle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_zangle(), output);
  }

  // optional .CartesianAngle yAngle = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_yangle(), output);
  }

  // optional .CartesianAngle xAngle = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_xangle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EulerAnglesWithConfidence)
}

::google::protobuf::uint8* EulerAnglesWithConfidence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EulerAnglesWithConfidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .CartesianAngle zAngle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_zangle(), deterministic, target);
  }

  // optional .CartesianAngle yAngle = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_yangle(), deterministic, target);
  }

  // optional .CartesianAngle xAngle = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_xangle(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EulerAnglesWithConfidence)
  return target;
}

size_t EulerAnglesWithConfidence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EulerAnglesWithConfidence)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .CartesianAngle zAngle = 1;
  if (has_zangle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *zangle_);
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional .CartesianAngle yAngle = 2;
    if (has_yangle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *yangle_);
    }

    // optional .CartesianAngle xAngle = 3;
    if (has_xangle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *xangle_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EulerAnglesWithConfidence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EulerAnglesWithConfidence)
  GOOGLE_DCHECK_NE(&from, this);
  const EulerAnglesWithConfidence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EulerAnglesWithConfidence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EulerAnglesWithConfidence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EulerAnglesWithConfidence)
    MergeFrom(*source);
  }
}

void EulerAnglesWithConfidence::MergeFrom(const EulerAnglesWithConfidence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EulerAnglesWithConfidence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_zangle()->::CartesianAngle::MergeFrom(from.zangle());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_yangle()->::CartesianAngle::MergeFrom(from.yangle());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_xangle()->::CartesianAngle::MergeFrom(from.xangle());
    }
  }
}

void EulerAnglesWithConfidence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EulerAnglesWithConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EulerAnglesWithConfidence::CopyFrom(const EulerAnglesWithConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EulerAnglesWithConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EulerAnglesWithConfidence::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_zangle()) {
    if (!this->zangle_->IsInitialized()) return false;
  }
  if (has_yangle()) {
    if (!this->yangle_->IsInitialized()) return false;
  }
  if (has_xangle()) {
    if (!this->xangle_->IsInitialized()) return false;
  }
  return true;
}

void EulerAnglesWithConfidence::Swap(EulerAnglesWithConfidence* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EulerAnglesWithConfidence::InternalSwap(EulerAnglesWithConfidence* other) {
  using std::swap;
  swap(zangle_, other->zangle_);
  swap(yangle_, other->yangle_);
  swap(xangle_, other->xangle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EulerAnglesWithConfidence::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventHistory::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventHistory::kEventPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventHistory::EventHistory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_EventHistory.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:EventHistory)
}
EventHistory::EventHistory(const EventHistory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      event_points_(from.event_points_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:EventHistory)
}

void EventHistory::SharedCtor() {
}

EventHistory::~EventHistory() {
  // @@protoc_insertion_point(destructor:EventHistory)
  SharedDtor();
}

void EventHistory::SharedDtor() {
}

void EventHistory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EventHistory::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventHistory& EventHistory::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_EventHistory.base);
  return *internal_default_instance();
}


void EventHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:EventHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_points_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EventHistory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EventHistory)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .EventPoint event_points = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_event_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EventHistory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EventHistory)
  return false;
#undef DO_
}

void EventHistory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EventHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .EventPoint event_points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->event_points(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EventHistory)
}

::google::protobuf::uint8* EventHistory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EventHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .EventPoint event_points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->event_points(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EventHistory)
  return target;
}

size_t EventHistory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EventHistory)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .EventPoint event_points = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->event_points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->event_points(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventHistory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EventHistory)
  GOOGLE_DCHECK_NE(&from, this);
  const EventHistory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventHistory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EventHistory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EventHistory)
    MergeFrom(*source);
  }
}

void EventHistory::MergeFrom(const EventHistory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EventHistory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  event_points_.MergeFrom(from.event_points_);
}

void EventHistory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EventHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventHistory::CopyFrom(const EventHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EventHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventHistory::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->event_points())) return false;
  return true;
}

void EventHistory::Swap(EventHistory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventHistory::InternalSwap(EventHistory* other) {
  using std::swap;
  CastToBase(&event_points_)->InternalSwap(CastToBase(&other->event_points_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EventHistory::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventPoint::InitAsDefaultInstance() {
  ::_EventPoint_default_instance_._instance.get_mutable()->eventposition_ = const_cast< ::DeltaReferencePosition*>(
      ::DeltaReferencePosition::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventPoint::kEventPositionFieldNumber;
const int EventPoint::kEventDeltaTimeFieldNumber;
const int EventPoint::kInformationQualityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventPoint::EventPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_EventPoint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:EventPoint)
}
EventPoint::EventPoint(const EventPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_eventposition()) {
    eventposition_ = new ::DeltaReferencePosition(*from.eventposition_);
  } else {
    eventposition_ = NULL;
  }
  ::memcpy(&eventdeltatime_, &from.eventdeltatime_,
    static_cast<size_t>(reinterpret_cast<char*>(&informationquality_) -
    reinterpret_cast<char*>(&eventdeltatime_)) + sizeof(informationquality_));
  // @@protoc_insertion_point(copy_constructor:EventPoint)
}

void EventPoint::SharedCtor() {
  ::memset(&eventposition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&informationquality_) -
      reinterpret_cast<char*>(&eventposition_)) + sizeof(informationquality_));
}

EventPoint::~EventPoint() {
  // @@protoc_insertion_point(destructor:EventPoint)
  SharedDtor();
}

void EventPoint::SharedDtor() {
  if (this != internal_default_instance()) delete eventposition_;
}

void EventPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EventPoint::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventPoint& EventPoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_EventPoint.base);
  return *internal_default_instance();
}


void EventPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:EventPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(eventposition_ != NULL);
    eventposition_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&eventdeltatime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&informationquality_) -
        reinterpret_cast<char*>(&eventdeltatime_)) + sizeof(informationquality_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EventPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EventPoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DeltaReferencePosition eventPosition = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_eventposition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eventDeltaTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_eventdeltatime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eventdeltatime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 informationQuality = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_informationquality();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &informationquality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EventPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EventPoint)
  return false;
#undef DO_
}

void EventPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EventPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .DeltaReferencePosition eventPosition = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_eventposition(), output);
  }

  // optional uint32 eventDeltaTime = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eventdeltatime(), output);
  }

  // required uint32 informationQuality = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->informationquality(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EventPoint)
}

::google::protobuf::uint8* EventPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EventPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .DeltaReferencePosition eventPosition = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_eventposition(), deterministic, target);
  }

  // optional uint32 eventDeltaTime = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eventdeltatime(), target);
  }

  // required uint32 informationQuality = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->informationquality(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EventPoint)
  return target;
}

size_t EventPoint::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:EventPoint)
  size_t total_size = 0;

  if (has_eventposition()) {
    // required .DeltaReferencePosition eventPosition = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *eventposition_);
  }

  if (has_informationquality()) {
    // required uint32 informationQuality = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->informationquality());
  }

  return total_size;
}
size_t EventPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EventPoint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required .DeltaReferencePosition eventPosition = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *eventposition_);

    // required uint32 informationQuality = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->informationquality());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional uint32 eventDeltaTime = 2;
  if (has_eventdeltatime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eventdeltatime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EventPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const EventPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EventPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EventPoint)
    MergeFrom(*source);
  }
}

void EventPoint::MergeFrom(const EventPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EventPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_eventposition()->::DeltaReferencePosition::MergeFrom(from.eventposition());
    }
    if (cached_has_bits & 0x00000002u) {
      eventdeltatime_ = from.eventdeltatime_;
    }
    if (cached_has_bits & 0x00000004u) {
      informationquality_ = from.informationquality_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EventPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EventPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventPoint::CopyFrom(const EventPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EventPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventPoint::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  if (has_eventposition()) {
    if (!this->eventposition_->IsInitialized()) return false;
  }
  return true;
}

void EventPoint::Swap(EventPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventPoint::InternalSwap(EventPoint* other) {
  using std::swap;
  swap(eventposition_, other->eventposition_);
  swap(eventdeltatime_, other->eventdeltatime_);
  swap(informationquality_, other->informationquality_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EventPoint::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Heading::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Heading::kValueFieldNumber;
const int Heading::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Heading::Heading()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_Heading.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Heading)
}
Heading::Heading(const Heading& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&confidence_) -
    reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
  // @@protoc_insertion_point(copy_constructor:Heading)
}

void Heading::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confidence_) -
      reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
}

Heading::~Heading() {
  // @@protoc_insertion_point(destructor:Heading)
  SharedDtor();
}

void Heading::SharedDtor() {
}

void Heading::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Heading::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Heading& Heading::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_Heading.base);
  return *internal_default_instance();
}


void Heading::Clear() {
// @@protoc_insertion_point(message_clear_start:Heading)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&confidence_) -
        reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Heading::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Heading)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_confidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Heading)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Heading)
  return false;
#undef DO_
}

void Heading::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Heading)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  // required uint32 confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->confidence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Heading)
}

::google::protobuf::uint8* Heading::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Heading)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  // required uint32 confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->confidence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Heading)
  return target;
}

size_t Heading::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Heading)
  size_t total_size = 0;

  if (has_value()) {
    // required int32 value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  if (has_confidence()) {
    // required uint32 confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->confidence());
  }

  return total_size;
}
size_t Heading::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Heading)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());

    // required uint32 confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->confidence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Heading::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Heading)
  GOOGLE_DCHECK_NE(&from, this);
  const Heading* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Heading>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Heading)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Heading)
    MergeFrom(*source);
  }
}

void Heading::MergeFrom(const Heading& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Heading)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000002u) {
      confidence_ = from.confidence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Heading::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Heading)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Heading::CopyFrom(const Heading& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Heading)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Heading::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Heading::Swap(Heading* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Heading::InternalSwap(Heading* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(confidence_, other->confidence_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Heading::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IntersectionReferenceID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IntersectionReferenceID::kRegionFieldNumber;
const int IntersectionReferenceID::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IntersectionReferenceID::IntersectionReferenceID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_IntersectionReferenceID.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IntersectionReferenceID)
}
IntersectionReferenceID::IntersectionReferenceID(const IntersectionReferenceID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&region_, &from.region_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&region_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:IntersectionReferenceID)
}

void IntersectionReferenceID::SharedCtor() {
  ::memset(&region_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&region_)) + sizeof(id_));
}

IntersectionReferenceID::~IntersectionReferenceID() {
  // @@protoc_insertion_point(destructor:IntersectionReferenceID)
  SharedDtor();
}

void IntersectionReferenceID::SharedDtor() {
}

void IntersectionReferenceID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IntersectionReferenceID::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IntersectionReferenceID& IntersectionReferenceID::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_IntersectionReferenceID.base);
  return *internal_default_instance();
}


void IntersectionReferenceID::Clear() {
// @@protoc_insertion_point(message_clear_start:IntersectionReferenceID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&region_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&region_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IntersectionReferenceID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IntersectionReferenceID)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 region = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_region();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &region_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IntersectionReferenceID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IntersectionReferenceID)
  return false;
#undef DO_
}

void IntersectionReferenceID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IntersectionReferenceID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 region = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->region(), output);
  }

  // optional int64 id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:IntersectionReferenceID)
}

::google::protobuf::uint8* IntersectionReferenceID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IntersectionReferenceID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 region = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->region(), target);
  }

  // optional int64 id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IntersectionReferenceID)
  return target;
}

size_t IntersectionReferenceID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IntersectionReferenceID)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 region = 1;
    if (has_region()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->region());
    }

    // optional int64 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntersectionReferenceID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IntersectionReferenceID)
  GOOGLE_DCHECK_NE(&from, this);
  const IntersectionReferenceID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IntersectionReferenceID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IntersectionReferenceID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IntersectionReferenceID)
    MergeFrom(*source);
  }
}

void IntersectionReferenceID::MergeFrom(const IntersectionReferenceID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IntersectionReferenceID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      region_ = from.region_;
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void IntersectionReferenceID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IntersectionReferenceID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntersectionReferenceID::CopyFrom(const IntersectionReferenceID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IntersectionReferenceID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntersectionReferenceID::IsInitialized() const {
  return true;
}

void IntersectionReferenceID::Swap(IntersectionReferenceID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IntersectionReferenceID::InternalSwap(IntersectionReferenceID* other) {
  using std::swap;
  swap(region_, other->region_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IntersectionReferenceID::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ItineraryPath::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItineraryPath::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItineraryPath::ItineraryPath()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ItineraryPath.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ItineraryPath)
}
ItineraryPath::ItineraryPath(const ItineraryPath& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      path_(from.path_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ItineraryPath)
}

void ItineraryPath::SharedCtor() {
}

ItineraryPath::~ItineraryPath() {
  // @@protoc_insertion_point(destructor:ItineraryPath)
  SharedDtor();
}

void ItineraryPath::SharedDtor() {
}

void ItineraryPath::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ItineraryPath::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItineraryPath& ItineraryPath::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ItineraryPath.base);
  return *internal_default_instance();
}


void ItineraryPath::Clear() {
// @@protoc_insertion_point(message_clear_start:ItineraryPath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ItineraryPath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ItineraryPath)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ReferencePosition path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ItineraryPath)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ItineraryPath)
  return false;
#undef DO_
}

void ItineraryPath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ItineraryPath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ReferencePosition path = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->path(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ItineraryPath)
}

::google::protobuf::uint8* ItineraryPath::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ItineraryPath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ReferencePosition path = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->path(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ItineraryPath)
  return target;
}

size_t ItineraryPath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ItineraryPath)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ReferencePosition path = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->path_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->path(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ItineraryPath::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ItineraryPath)
  GOOGLE_DCHECK_NE(&from, this);
  const ItineraryPath* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItineraryPath>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ItineraryPath)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ItineraryPath)
    MergeFrom(*source);
  }
}

void ItineraryPath::MergeFrom(const ItineraryPath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ItineraryPath)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  path_.MergeFrom(from.path_);
}

void ItineraryPath::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ItineraryPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItineraryPath::CopyFrom(const ItineraryPath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ItineraryPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItineraryPath::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->path())) return false;
  return true;
}

void ItineraryPath::Swap(ItineraryPath* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItineraryPath::InternalSwap(ItineraryPath* other) {
  using std::swap;
  CastToBase(&path_)->InternalSwap(CastToBase(&other->path_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ItineraryPath::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LongitudinalAcceleration::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LongitudinalAcceleration::kValueFieldNumber;
const int LongitudinalAcceleration::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LongitudinalAcceleration::LongitudinalAcceleration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_LongitudinalAcceleration.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LongitudinalAcceleration)
}
LongitudinalAcceleration::LongitudinalAcceleration(const LongitudinalAcceleration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&confidence_) -
    reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
  // @@protoc_insertion_point(copy_constructor:LongitudinalAcceleration)
}

void LongitudinalAcceleration::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confidence_) -
      reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
}

LongitudinalAcceleration::~LongitudinalAcceleration() {
  // @@protoc_insertion_point(destructor:LongitudinalAcceleration)
  SharedDtor();
}

void LongitudinalAcceleration::SharedDtor() {
}

void LongitudinalAcceleration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LongitudinalAcceleration::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LongitudinalAcceleration& LongitudinalAcceleration::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_LongitudinalAcceleration.base);
  return *internal_default_instance();
}


void LongitudinalAcceleration::Clear() {
// @@protoc_insertion_point(message_clear_start:LongitudinalAcceleration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&confidence_) -
        reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LongitudinalAcceleration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LongitudinalAcceleration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_confidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LongitudinalAcceleration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LongitudinalAcceleration)
  return false;
#undef DO_
}

void LongitudinalAcceleration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LongitudinalAcceleration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  // optional int32 confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->confidence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LongitudinalAcceleration)
}

::google::protobuf::uint8* LongitudinalAcceleration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LongitudinalAcceleration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  // optional int32 confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->confidence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LongitudinalAcceleration)
  return target;
}

size_t LongitudinalAcceleration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LongitudinalAcceleration)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 value = 1;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }
  // optional int32 confidence = 2;
  if (has_confidence()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->confidence());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LongitudinalAcceleration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LongitudinalAcceleration)
  GOOGLE_DCHECK_NE(&from, this);
  const LongitudinalAcceleration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LongitudinalAcceleration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LongitudinalAcceleration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LongitudinalAcceleration)
    MergeFrom(*source);
  }
}

void LongitudinalAcceleration::MergeFrom(const LongitudinalAcceleration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LongitudinalAcceleration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000002u) {
      confidence_ = from.confidence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LongitudinalAcceleration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LongitudinalAcceleration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LongitudinalAcceleration::CopyFrom(const LongitudinalAcceleration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LongitudinalAcceleration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LongitudinalAcceleration::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void LongitudinalAcceleration::Swap(LongitudinalAcceleration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LongitudinalAcceleration::InternalSwap(LongitudinalAcceleration* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(confidence_, other->confidence_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LongitudinalAcceleration::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LongitudinalLanePosition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LongitudinalLanePosition::kLongitudinalLanePositionValueFieldNumber;
const int LongitudinalLanePosition::kLongitudinalLanePositionConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LongitudinalLanePosition::LongitudinalLanePosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_LongitudinalLanePosition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LongitudinalLanePosition)
}
LongitudinalLanePosition::LongitudinalLanePosition(const LongitudinalLanePosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&longitudinallanepositionvalue_, &from.longitudinallanepositionvalue_,
    static_cast<size_t>(reinterpret_cast<char*>(&longitudinallanepositionconfidence_) -
    reinterpret_cast<char*>(&longitudinallanepositionvalue_)) + sizeof(longitudinallanepositionconfidence_));
  // @@protoc_insertion_point(copy_constructor:LongitudinalLanePosition)
}

void LongitudinalLanePosition::SharedCtor() {
  ::memset(&longitudinallanepositionvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&longitudinallanepositionconfidence_) -
      reinterpret_cast<char*>(&longitudinallanepositionvalue_)) + sizeof(longitudinallanepositionconfidence_));
}

LongitudinalLanePosition::~LongitudinalLanePosition() {
  // @@protoc_insertion_point(destructor:LongitudinalLanePosition)
  SharedDtor();
}

void LongitudinalLanePosition::SharedDtor() {
}

void LongitudinalLanePosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LongitudinalLanePosition::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LongitudinalLanePosition& LongitudinalLanePosition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_LongitudinalLanePosition.base);
  return *internal_default_instance();
}


void LongitudinalLanePosition::Clear() {
// @@protoc_insertion_point(message_clear_start:LongitudinalLanePosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&longitudinallanepositionvalue_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&longitudinallanepositionconfidence_) -
        reinterpret_cast<char*>(&longitudinallanepositionvalue_)) + sizeof(longitudinallanepositionconfidence_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LongitudinalLanePosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LongitudinalLanePosition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 longitudinalLanePositionValue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_longitudinallanepositionvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &longitudinallanepositionvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 longitudinalLanePositionConfidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_longitudinallanepositionconfidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &longitudinallanepositionconfidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LongitudinalLanePosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LongitudinalLanePosition)
  return false;
#undef DO_
}

void LongitudinalLanePosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LongitudinalLanePosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 longitudinalLanePositionValue = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->longitudinallanepositionvalue(), output);
  }

  // required uint32 longitudinalLanePositionConfidence = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->longitudinallanepositionconfidence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LongitudinalLanePosition)
}

::google::protobuf::uint8* LongitudinalLanePosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LongitudinalLanePosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 longitudinalLanePositionValue = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->longitudinallanepositionvalue(), target);
  }

  // required uint32 longitudinalLanePositionConfidence = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->longitudinallanepositionconfidence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LongitudinalLanePosition)
  return target;
}

size_t LongitudinalLanePosition::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:LongitudinalLanePosition)
  size_t total_size = 0;

  if (has_longitudinallanepositionvalue()) {
    // required uint32 longitudinalLanePositionValue = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->longitudinallanepositionvalue());
  }

  if (has_longitudinallanepositionconfidence()) {
    // required uint32 longitudinalLanePositionConfidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->longitudinallanepositionconfidence());
  }

  return total_size;
}
size_t LongitudinalLanePosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LongitudinalLanePosition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 longitudinalLanePositionValue = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->longitudinallanepositionvalue());

    // required uint32 longitudinalLanePositionConfidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->longitudinallanepositionconfidence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LongitudinalLanePosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LongitudinalLanePosition)
  GOOGLE_DCHECK_NE(&from, this);
  const LongitudinalLanePosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LongitudinalLanePosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LongitudinalLanePosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LongitudinalLanePosition)
    MergeFrom(*source);
  }
}

void LongitudinalLanePosition::MergeFrom(const LongitudinalLanePosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LongitudinalLanePosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      longitudinallanepositionvalue_ = from.longitudinallanepositionvalue_;
    }
    if (cached_has_bits & 0x00000002u) {
      longitudinallanepositionconfidence_ = from.longitudinallanepositionconfidence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LongitudinalLanePosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LongitudinalLanePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LongitudinalLanePosition::CopyFrom(const LongitudinalLanePosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LongitudinalLanePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LongitudinalLanePosition::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void LongitudinalLanePosition::Swap(LongitudinalLanePosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LongitudinalLanePosition::InternalSwap(LongitudinalLanePosition* other) {
  using std::swap;
  swap(longitudinallanepositionvalue_, other->longitudinallanepositionvalue_);
  swap(longitudinallanepositionconfidence_, other->longitudinallanepositionconfidence_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LongitudinalLanePosition::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LowerTriangularPositiveSemidefiniteMatrix::InitAsDefaultInstance() {
  ::_LowerTriangularPositiveSemidefiniteMatrix_default_instance_._instance.get_mutable()->componentsincludedinthematrix_ = const_cast< ::MatrixIncludedComponents*>(
      ::MatrixIncludedComponents::internal_default_instance());
  ::_LowerTriangularPositiveSemidefiniteMatrix_default_instance_._instance.get_mutable()->matrix_ = const_cast< ::LowerTriangularPositiveSemidefiniteMatrixColumns*>(
      ::LowerTriangularPositiveSemidefiniteMatrixColumns::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LowerTriangularPositiveSemidefiniteMatrix::kComponentsIncludedIntheMatrixFieldNumber;
const int LowerTriangularPositiveSemidefiniteMatrix::kMatrixFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LowerTriangularPositiveSemidefiniteMatrix::LowerTriangularPositiveSemidefiniteMatrix()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_LowerTriangularPositiveSemidefiniteMatrix.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LowerTriangularPositiveSemidefiniteMatrix)
}
LowerTriangularPositiveSemidefiniteMatrix::LowerTriangularPositiveSemidefiniteMatrix(const LowerTriangularPositiveSemidefiniteMatrix& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_componentsincludedinthematrix()) {
    componentsincludedinthematrix_ = new ::MatrixIncludedComponents(*from.componentsincludedinthematrix_);
  } else {
    componentsincludedinthematrix_ = NULL;
  }
  if (from.has_matrix()) {
    matrix_ = new ::LowerTriangularPositiveSemidefiniteMatrixColumns(*from.matrix_);
  } else {
    matrix_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:LowerTriangularPositiveSemidefiniteMatrix)
}

void LowerTriangularPositiveSemidefiniteMatrix::SharedCtor() {
  ::memset(&componentsincludedinthematrix_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matrix_) -
      reinterpret_cast<char*>(&componentsincludedinthematrix_)) + sizeof(matrix_));
}

LowerTriangularPositiveSemidefiniteMatrix::~LowerTriangularPositiveSemidefiniteMatrix() {
  // @@protoc_insertion_point(destructor:LowerTriangularPositiveSemidefiniteMatrix)
  SharedDtor();
}

void LowerTriangularPositiveSemidefiniteMatrix::SharedDtor() {
  if (this != internal_default_instance()) delete componentsincludedinthematrix_;
  if (this != internal_default_instance()) delete matrix_;
}

void LowerTriangularPositiveSemidefiniteMatrix::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LowerTriangularPositiveSemidefiniteMatrix::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LowerTriangularPositiveSemidefiniteMatrix& LowerTriangularPositiveSemidefiniteMatrix::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_LowerTriangularPositiveSemidefiniteMatrix.base);
  return *internal_default_instance();
}


void LowerTriangularPositiveSemidefiniteMatrix::Clear() {
// @@protoc_insertion_point(message_clear_start:LowerTriangularPositiveSemidefiniteMatrix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(componentsincludedinthematrix_ != NULL);
      componentsincludedinthematrix_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(matrix_ != NULL);
      matrix_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LowerTriangularPositiveSemidefiniteMatrix::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LowerTriangularPositiveSemidefiniteMatrix)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MatrixIncludedComponents componentsIncludedIntheMatrix = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_componentsincludedinthematrix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .LowerTriangularPositiveSemidefiniteMatrixColumns matrix = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_matrix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LowerTriangularPositiveSemidefiniteMatrix)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LowerTriangularPositiveSemidefiniteMatrix)
  return false;
#undef DO_
}

void LowerTriangularPositiveSemidefiniteMatrix::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LowerTriangularPositiveSemidefiniteMatrix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .MatrixIncludedComponents componentsIncludedIntheMatrix = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_componentsincludedinthematrix(), output);
  }

  // required .LowerTriangularPositiveSemidefiniteMatrixColumns matrix = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_matrix(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LowerTriangularPositiveSemidefiniteMatrix)
}

::google::protobuf::uint8* LowerTriangularPositiveSemidefiniteMatrix::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LowerTriangularPositiveSemidefiniteMatrix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .MatrixIncludedComponents componentsIncludedIntheMatrix = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_componentsincludedinthematrix(), deterministic, target);
  }

  // required .LowerTriangularPositiveSemidefiniteMatrixColumns matrix = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_matrix(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LowerTriangularPositiveSemidefiniteMatrix)
  return target;
}

size_t LowerTriangularPositiveSemidefiniteMatrix::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:LowerTriangularPositiveSemidefiniteMatrix)
  size_t total_size = 0;

  if (has_componentsincludedinthematrix()) {
    // required .MatrixIncludedComponents componentsIncludedIntheMatrix = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *componentsincludedinthematrix_);
  }

  if (has_matrix()) {
    // required .LowerTriangularPositiveSemidefiniteMatrixColumns matrix = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *matrix_);
  }

  return total_size;
}
size_t LowerTriangularPositiveSemidefiniteMatrix::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LowerTriangularPositiveSemidefiniteMatrix)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .MatrixIncludedComponents componentsIncludedIntheMatrix = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *componentsincludedinthematrix_);

    // required .LowerTriangularPositiveSemidefiniteMatrixColumns matrix = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *matrix_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LowerTriangularPositiveSemidefiniteMatrix::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LowerTriangularPositiveSemidefiniteMatrix)
  GOOGLE_DCHECK_NE(&from, this);
  const LowerTriangularPositiveSemidefiniteMatrix* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LowerTriangularPositiveSemidefiniteMatrix>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LowerTriangularPositiveSemidefiniteMatrix)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LowerTriangularPositiveSemidefiniteMatrix)
    MergeFrom(*source);
  }
}

void LowerTriangularPositiveSemidefiniteMatrix::MergeFrom(const LowerTriangularPositiveSemidefiniteMatrix& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LowerTriangularPositiveSemidefiniteMatrix)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_componentsincludedinthematrix()->::MatrixIncludedComponents::MergeFrom(from.componentsincludedinthematrix());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_matrix()->::LowerTriangularPositiveSemidefiniteMatrixColumns::MergeFrom(from.matrix());
    }
  }
}

void LowerTriangularPositiveSemidefiniteMatrix::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LowerTriangularPositiveSemidefiniteMatrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LowerTriangularPositiveSemidefiniteMatrix::CopyFrom(const LowerTriangularPositiveSemidefiniteMatrix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LowerTriangularPositiveSemidefiniteMatrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LowerTriangularPositiveSemidefiniteMatrix::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_componentsincludedinthematrix()) {
    if (!this->componentsincludedinthematrix_->IsInitialized()) return false;
  }
  return true;
}

void LowerTriangularPositiveSemidefiniteMatrix::Swap(LowerTriangularPositiveSemidefiniteMatrix* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LowerTriangularPositiveSemidefiniteMatrix::InternalSwap(LowerTriangularPositiveSemidefiniteMatrix* other) {
  using std::swap;
  swap(componentsincludedinthematrix_, other->componentsincludedinthematrix_);
  swap(matrix_, other->matrix_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LowerTriangularPositiveSemidefiniteMatrix::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LowerTriangularPositiveSemidefiniteMatrixColumns::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LowerTriangularPositiveSemidefiniteMatrixColumns::kColumnsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LowerTriangularPositiveSemidefiniteMatrixColumns::LowerTriangularPositiveSemidefiniteMatrixColumns()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_LowerTriangularPositiveSemidefiniteMatrixColumns.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LowerTriangularPositiveSemidefiniteMatrixColumns)
}
LowerTriangularPositiveSemidefiniteMatrixColumns::LowerTriangularPositiveSemidefiniteMatrixColumns(const LowerTriangularPositiveSemidefiniteMatrixColumns& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      columns_(from.columns_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:LowerTriangularPositiveSemidefiniteMatrixColumns)
}

void LowerTriangularPositiveSemidefiniteMatrixColumns::SharedCtor() {
}

LowerTriangularPositiveSemidefiniteMatrixColumns::~LowerTriangularPositiveSemidefiniteMatrixColumns() {
  // @@protoc_insertion_point(destructor:LowerTriangularPositiveSemidefiniteMatrixColumns)
  SharedDtor();
}

void LowerTriangularPositiveSemidefiniteMatrixColumns::SharedDtor() {
}

void LowerTriangularPositiveSemidefiniteMatrixColumns::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LowerTriangularPositiveSemidefiniteMatrixColumns::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LowerTriangularPositiveSemidefiniteMatrixColumns& LowerTriangularPositiveSemidefiniteMatrixColumns::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_LowerTriangularPositiveSemidefiniteMatrixColumns.base);
  return *internal_default_instance();
}


void LowerTriangularPositiveSemidefiniteMatrixColumns::Clear() {
// @@protoc_insertion_point(message_clear_start:LowerTriangularPositiveSemidefiniteMatrixColumns)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  columns_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LowerTriangularPositiveSemidefiniteMatrixColumns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LowerTriangularPositiveSemidefiniteMatrixColumns)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CorrelationColumn columns = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_columns()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LowerTriangularPositiveSemidefiniteMatrixColumns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LowerTriangularPositiveSemidefiniteMatrixColumns)
  return false;
#undef DO_
}

void LowerTriangularPositiveSemidefiniteMatrixColumns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LowerTriangularPositiveSemidefiniteMatrixColumns)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CorrelationColumn columns = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->columns_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->columns(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LowerTriangularPositiveSemidefiniteMatrixColumns)
}

::google::protobuf::uint8* LowerTriangularPositiveSemidefiniteMatrixColumns::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LowerTriangularPositiveSemidefiniteMatrixColumns)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CorrelationColumn columns = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->columns_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->columns(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LowerTriangularPositiveSemidefiniteMatrixColumns)
  return target;
}

size_t LowerTriangularPositiveSemidefiniteMatrixColumns::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LowerTriangularPositiveSemidefiniteMatrixColumns)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CorrelationColumn columns = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->columns_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->columns(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LowerTriangularPositiveSemidefiniteMatrixColumns::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LowerTriangularPositiveSemidefiniteMatrixColumns)
  GOOGLE_DCHECK_NE(&from, this);
  const LowerTriangularPositiveSemidefiniteMatrixColumns* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LowerTriangularPositiveSemidefiniteMatrixColumns>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LowerTriangularPositiveSemidefiniteMatrixColumns)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LowerTriangularPositiveSemidefiniteMatrixColumns)
    MergeFrom(*source);
  }
}

void LowerTriangularPositiveSemidefiniteMatrixColumns::MergeFrom(const LowerTriangularPositiveSemidefiniteMatrixColumns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LowerTriangularPositiveSemidefiniteMatrixColumns)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  columns_.MergeFrom(from.columns_);
}

void LowerTriangularPositiveSemidefiniteMatrixColumns::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LowerTriangularPositiveSemidefiniteMatrixColumns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LowerTriangularPositiveSemidefiniteMatrixColumns::CopyFrom(const LowerTriangularPositiveSemidefiniteMatrixColumns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LowerTriangularPositiveSemidefiniteMatrixColumns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LowerTriangularPositiveSemidefiniteMatrixColumns::IsInitialized() const {
  return true;
}

void LowerTriangularPositiveSemidefiniteMatrixColumns::Swap(LowerTriangularPositiveSemidefiniteMatrixColumns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LowerTriangularPositiveSemidefiniteMatrixColumns::InternalSwap(LowerTriangularPositiveSemidefiniteMatrixColumns* other) {
  using std::swap;
  CastToBase(&columns_)->InternalSwap(CastToBase(&other->columns_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LowerTriangularPositiveSemidefiniteMatrixColumns::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MapPosition::InitAsDefaultInstance() {
  ::_MapPosition_default_instance_._instance.get_mutable()->mapreference_ = const_cast< ::MapReference*>(
      ::MapReference::internal_default_instance());
  ::_MapPosition_default_instance_._instance.get_mutable()->longitudinallaneposition_ = const_cast< ::LongitudinalLanePosition*>(
      ::LongitudinalLanePosition::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MapPosition::kMapReferenceFieldNumber;
const int MapPosition::kLaneIdFieldNumber;
const int MapPosition::kConnectionIdFieldNumber;
const int MapPosition::kLongitudinalLanePositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MapPosition::MapPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_MapPosition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MapPosition)
}
MapPosition::MapPosition(const MapPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mapreference()) {
    mapreference_ = new ::MapReference(*from.mapreference_);
  } else {
    mapreference_ = NULL;
  }
  if (from.has_longitudinallaneposition()) {
    longitudinallaneposition_ = new ::LongitudinalLanePosition(*from.longitudinallaneposition_);
  } else {
    longitudinallaneposition_ = NULL;
  }
  ::memcpy(&laneid_, &from.laneid_,
    static_cast<size_t>(reinterpret_cast<char*>(&connectionid_) -
    reinterpret_cast<char*>(&laneid_)) + sizeof(connectionid_));
  // @@protoc_insertion_point(copy_constructor:MapPosition)
}

void MapPosition::SharedCtor() {
  ::memset(&mapreference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&connectionid_) -
      reinterpret_cast<char*>(&mapreference_)) + sizeof(connectionid_));
}

MapPosition::~MapPosition() {
  // @@protoc_insertion_point(destructor:MapPosition)
  SharedDtor();
}

void MapPosition::SharedDtor() {
  if (this != internal_default_instance()) delete mapreference_;
  if (this != internal_default_instance()) delete longitudinallaneposition_;
}

void MapPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MapPosition::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MapPosition& MapPosition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_MapPosition.base);
  return *internal_default_instance();
}


void MapPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:MapPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(mapreference_ != NULL);
      mapreference_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(longitudinallaneposition_ != NULL);
      longitudinallaneposition_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&laneid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&connectionid_) -
        reinterpret_cast<char*>(&laneid_)) + sizeof(connectionid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MapPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MapPosition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MapReference mapReference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mapreference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 laneId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_laneid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &laneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 connectionId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_connectionid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &connectionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .LongitudinalLanePosition longitudinalLanePosition = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_longitudinallaneposition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MapPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MapPosition)
  return false;
#undef DO_
}

void MapPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MapPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .MapReference mapReference = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_mapreference(), output);
  }

  // optional uint32 laneId = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->laneid(), output);
  }

  // optional uint32 connectionId = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->connectionid(), output);
  }

  // optional .LongitudinalLanePosition longitudinalLanePosition = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_longitudinallaneposition(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MapPosition)
}

::google::protobuf::uint8* MapPosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MapPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .MapReference mapReference = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_mapreference(), deterministic, target);
  }

  // optional uint32 laneId = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->laneid(), target);
  }

  // optional uint32 connectionId = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->connectionid(), target);
  }

  // optional .LongitudinalLanePosition longitudinalLanePosition = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_longitudinallaneposition(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MapPosition)
  return target;
}

size_t MapPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MapPosition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .MapReference mapReference = 1;
    if (has_mapreference()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *mapreference_);
    }

    // optional .LongitudinalLanePosition longitudinalLanePosition = 4;
    if (has_longitudinallaneposition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *longitudinallaneposition_);
    }

    // optional uint32 laneId = 2;
    if (has_laneid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->laneid());
    }

    // optional uint32 connectionId = 3;
    if (has_connectionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->connectionid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MapPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MapPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const MapPosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MapPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MapPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MapPosition)
    MergeFrom(*source);
  }
}

void MapPosition::MergeFrom(const MapPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MapPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_mapreference()->::MapReference::MergeFrom(from.mapreference());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_longitudinallaneposition()->::LongitudinalLanePosition::MergeFrom(from.longitudinallaneposition());
    }
    if (cached_has_bits & 0x00000004u) {
      laneid_ = from.laneid_;
    }
    if (cached_has_bits & 0x00000008u) {
      connectionid_ = from.connectionid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MapPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MapPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapPosition::CopyFrom(const MapPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MapPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapPosition::IsInitialized() const {
  if (has_mapreference()) {
    if (!this->mapreference_->IsInitialized()) return false;
  }
  if (has_longitudinallaneposition()) {
    if (!this->longitudinallaneposition_->IsInitialized()) return false;
  }
  return true;
}

void MapPosition::Swap(MapPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapPosition::InternalSwap(MapPosition* other) {
  using std::swap;
  swap(mapreference_, other->mapreference_);
  swap(longitudinallaneposition_, other->longitudinallaneposition_);
  swap(laneid_, other->laneid_);
  swap(connectionid_, other->connectionid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MapPosition::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MapReference::InitAsDefaultInstance() {
  ::_MapReference_default_instance_.roadsegment_ = const_cast< ::RoadSegmentReferenceID*>(
      ::RoadSegmentReferenceID::internal_default_instance());
  ::_MapReference_default_instance_.intersection_ = const_cast< ::IntersectionReferenceID*>(
      ::IntersectionReferenceID::internal_default_instance());
}
void MapReference::set_allocated_roadsegment(::RoadSegmentReferenceID* roadsegment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_mapref();
  if (roadsegment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      roadsegment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, roadsegment, submessage_arena);
    }
    set_has_roadsegment();
    mapref_.roadsegment_ = roadsegment;
  }
  // @@protoc_insertion_point(field_set_allocated:MapReference.roadsegment)
}
void MapReference::set_allocated_intersection(::IntersectionReferenceID* intersection) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_mapref();
  if (intersection) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      intersection = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, intersection, submessage_arena);
    }
    set_has_intersection();
    mapref_.intersection_ = intersection;
  }
  // @@protoc_insertion_point(field_set_allocated:MapReference.intersection)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MapReference::kRoadsegmentFieldNumber;
const int MapReference::kIntersectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MapReference::MapReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_MapReference.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MapReference)
}
MapReference::MapReference(const MapReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_mapref();
  switch (from.mapref_case()) {
    case kRoadsegment: {
      mutable_roadsegment()->::RoadSegmentReferenceID::MergeFrom(from.roadsegment());
      break;
    }
    case kIntersection: {
      mutable_intersection()->::IntersectionReferenceID::MergeFrom(from.intersection());
      break;
    }
    case MAPREF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:MapReference)
}

void MapReference::SharedCtor() {
  clear_has_mapref();
}

MapReference::~MapReference() {
  // @@protoc_insertion_point(destructor:MapReference)
  SharedDtor();
}

void MapReference::SharedDtor() {
  if (has_mapref()) {
    clear_mapref();
  }
}

void MapReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MapReference::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MapReference& MapReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_MapReference.base);
  return *internal_default_instance();
}


void MapReference::clear_mapref() {
// @@protoc_insertion_point(one_of_clear_start:MapReference)
  switch (mapref_case()) {
    case kRoadsegment: {
      delete mapref_.roadsegment_;
      break;
    }
    case kIntersection: {
      delete mapref_.intersection_;
      break;
    }
    case MAPREF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MAPREF_NOT_SET;
}


void MapReference::Clear() {
// @@protoc_insertion_point(message_clear_start:MapReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_mapref();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MapReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MapReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .RoadSegmentReferenceID roadsegment = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_roadsegment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .IntersectionReferenceID intersection = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_intersection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MapReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MapReference)
  return false;
#undef DO_
}

void MapReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MapReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (mapref_case()) {
    case kRoadsegment:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_roadsegment(), output);
      break;
    case kIntersection:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_intersection(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MapReference)
}

::google::protobuf::uint8* MapReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MapReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (mapref_case()) {
    case kRoadsegment:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          1, this->_internal_roadsegment(), deterministic, target);
      break;
    case kIntersection:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_intersection(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MapReference)
  return target;
}

size_t MapReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MapReference)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (mapref_case()) {
    // optional .RoadSegmentReferenceID roadsegment = 1;
    case kRoadsegment: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *mapref_.roadsegment_);
      break;
    }
    // optional .IntersectionReferenceID intersection = 2;
    case kIntersection: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *mapref_.intersection_);
      break;
    }
    case MAPREF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MapReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MapReference)
  GOOGLE_DCHECK_NE(&from, this);
  const MapReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MapReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MapReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MapReference)
    MergeFrom(*source);
  }
}

void MapReference::MergeFrom(const MapReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MapReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.mapref_case()) {
    case kRoadsegment: {
      mutable_roadsegment()->::RoadSegmentReferenceID::MergeFrom(from.roadsegment());
      break;
    }
    case kIntersection: {
      mutable_intersection()->::IntersectionReferenceID::MergeFrom(from.intersection());
      break;
    }
    case MAPREF_NOT_SET: {
      break;
    }
  }
}

void MapReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MapReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapReference::CopyFrom(const MapReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MapReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapReference::IsInitialized() const {
  switch (mapref_case()) {
    case kRoadsegment: {
      if (has_roadsegment()) {
        if (!this->roadsegment().IsInitialized()) return false;
      }
      break;
    }
    case kIntersection: {
      break;
    }
    case MAPREF_NOT_SET: {
      break;
    }
  }
  return true;
}

void MapReference::Swap(MapReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapReference::InternalSwap(MapReference* other) {
  using std::swap;
  swap(mapref_, other->mapref_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MapReference::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MatrixIncludedComponents::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatrixIncludedComponents::kXPositionFieldNumber;
const int MatrixIncludedComponents::kYPositionFieldNumber;
const int MatrixIncludedComponents::kZPositionFieldNumber;
const int MatrixIncludedComponents::kXVelocityOrVelocityMagnitudeFieldNumber;
const int MatrixIncludedComponents::kYVelocityOrVelocityDirectionFieldNumber;
const int MatrixIncludedComponents::kZSpeedFieldNumber;
const int MatrixIncludedComponents::kXAccelOrAccelMagnitudeFieldNumber;
const int MatrixIncludedComponents::kYAccelOrAccelDirectionFieldNumber;
const int MatrixIncludedComponents::kZAccelerationFieldNumber;
const int MatrixIncludedComponents::kZAngleFieldNumber;
const int MatrixIncludedComponents::kYAngleFieldNumber;
const int MatrixIncludedComponents::kXAngleFieldNumber;
const int MatrixIncludedComponents::kZAngularVelocityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatrixIncludedComponents::MatrixIncludedComponents()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_MatrixIncludedComponents.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MatrixIncludedComponents)
}
MatrixIncludedComponents::MatrixIncludedComponents(const MatrixIncludedComponents& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&xposition_, &from.xposition_,
    static_cast<size_t>(reinterpret_cast<char*>(&zangularvelocity_) -
    reinterpret_cast<char*>(&xposition_)) + sizeof(zangularvelocity_));
  // @@protoc_insertion_point(copy_constructor:MatrixIncludedComponents)
}

void MatrixIncludedComponents::SharedCtor() {
  ::memset(&xposition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zangularvelocity_) -
      reinterpret_cast<char*>(&xposition_)) + sizeof(zangularvelocity_));
}

MatrixIncludedComponents::~MatrixIncludedComponents() {
  // @@protoc_insertion_point(destructor:MatrixIncludedComponents)
  SharedDtor();
}

void MatrixIncludedComponents::SharedDtor() {
}

void MatrixIncludedComponents::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MatrixIncludedComponents::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatrixIncludedComponents& MatrixIncludedComponents::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_MatrixIncludedComponents.base);
  return *internal_default_instance();
}


void MatrixIncludedComponents::Clear() {
// @@protoc_insertion_point(message_clear_start:MatrixIncludedComponents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&xposition_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&yacceloracceldirection_) -
        reinterpret_cast<char*>(&xposition_)) + sizeof(yacceloracceldirection_));
  }
  if (cached_has_bits & 7936u) {
    ::memset(&zacceleration_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&zangularvelocity_) -
        reinterpret_cast<char*>(&zacceleration_)) + sizeof(zangularvelocity_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MatrixIncludedComponents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MatrixIncludedComponents)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool xPosition = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_xposition();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xposition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool yPosition = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_yposition();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &yposition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool zPosition = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_zposition();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &zposition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool xVelocityOrVelocityMagnitude = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_xvelocityorvelocitymagnitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xvelocityorvelocitymagnitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool yVelocityOrVelocityDirection = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_yvelocityorvelocitydirection();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &yvelocityorvelocitydirection_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool zSpeed = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_zspeed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &zspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool xAccelOrAccelMagnitude = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_xacceloraccelmagnitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xacceloraccelmagnitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool yAccelOrAccelDirection = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_yacceloracceldirection();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &yacceloracceldirection_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool zAcceleration = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_zacceleration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &zacceleration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool zAngle = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_zangle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &zangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool yAngle = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_yangle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &yangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool xAngle = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_xangle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool zAngularVelocity = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_zangularvelocity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &zangularvelocity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MatrixIncludedComponents)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MatrixIncludedComponents)
  return false;
#undef DO_
}

void MatrixIncludedComponents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MatrixIncludedComponents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool xPosition = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->xposition(), output);
  }

  // required bool yPosition = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->yposition(), output);
  }

  // required bool zPosition = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->zposition(), output);
  }

  // required bool xVelocityOrVelocityMagnitude = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->xvelocityorvelocitymagnitude(), output);
  }

  // required bool yVelocityOrVelocityDirection = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->yvelocityorvelocitydirection(), output);
  }

  // required bool zSpeed = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->zspeed(), output);
  }

  // required bool xAccelOrAccelMagnitude = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->xacceloraccelmagnitude(), output);
  }

  // required bool yAccelOrAccelDirection = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->yacceloracceldirection(), output);
  }

  // required bool zAcceleration = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->zacceleration(), output);
  }

  // required bool zAngle = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->zangle(), output);
  }

  // required bool yAngle = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->yangle(), output);
  }

  // required bool xAngle = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->xangle(), output);
  }

  // required bool zAngularVelocity = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->zangularvelocity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MatrixIncludedComponents)
}

::google::protobuf::uint8* MatrixIncludedComponents::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MatrixIncludedComponents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool xPosition = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->xposition(), target);
  }

  // required bool yPosition = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->yposition(), target);
  }

  // required bool zPosition = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->zposition(), target);
  }

  // required bool xVelocityOrVelocityMagnitude = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->xvelocityorvelocitymagnitude(), target);
  }

  // required bool yVelocityOrVelocityDirection = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->yvelocityorvelocitydirection(), target);
  }

  // required bool zSpeed = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->zspeed(), target);
  }

  // required bool xAccelOrAccelMagnitude = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->xacceloraccelmagnitude(), target);
  }

  // required bool yAccelOrAccelDirection = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->yacceloracceldirection(), target);
  }

  // required bool zAcceleration = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->zacceleration(), target);
  }

  // required bool zAngle = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->zangle(), target);
  }

  // required bool yAngle = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->yangle(), target);
  }

  // required bool xAngle = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->xangle(), target);
  }

  // required bool zAngularVelocity = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->zangularvelocity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MatrixIncludedComponents)
  return target;
}

size_t MatrixIncludedComponents::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MatrixIncludedComponents)
  size_t total_size = 0;

  if (has_xposition()) {
    // required bool xPosition = 1;
    total_size += 1 + 1;
  }

  if (has_yposition()) {
    // required bool yPosition = 2;
    total_size += 1 + 1;
  }

  if (has_zposition()) {
    // required bool zPosition = 3;
    total_size += 1 + 1;
  }

  if (has_xvelocityorvelocitymagnitude()) {
    // required bool xVelocityOrVelocityMagnitude = 4;
    total_size += 1 + 1;
  }

  if (has_yvelocityorvelocitydirection()) {
    // required bool yVelocityOrVelocityDirection = 5;
    total_size += 1 + 1;
  }

  if (has_zspeed()) {
    // required bool zSpeed = 6;
    total_size += 1 + 1;
  }

  if (has_xacceloraccelmagnitude()) {
    // required bool xAccelOrAccelMagnitude = 7;
    total_size += 1 + 1;
  }

  if (has_yacceloracceldirection()) {
    // required bool yAccelOrAccelDirection = 8;
    total_size += 1 + 1;
  }

  if (has_zacceleration()) {
    // required bool zAcceleration = 9;
    total_size += 1 + 1;
  }

  if (has_zangle()) {
    // required bool zAngle = 10;
    total_size += 1 + 1;
  }

  if (has_yangle()) {
    // required bool yAngle = 11;
    total_size += 1 + 1;
  }

  if (has_xangle()) {
    // required bool xAngle = 12;
    total_size += 1 + 1;
  }

  if (has_zangularvelocity()) {
    // required bool zAngularVelocity = 13;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t MatrixIncludedComponents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MatrixIncludedComponents)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00001fff) ^ 0x00001fff) == 0) {  // All required fields are present.
    // required bool xPosition = 1;
    total_size += 1 + 1;

    // required bool yPosition = 2;
    total_size += 1 + 1;

    // required bool zPosition = 3;
    total_size += 1 + 1;

    // required bool xVelocityOrVelocityMagnitude = 4;
    total_size += 1 + 1;

    // required bool yVelocityOrVelocityDirection = 5;
    total_size += 1 + 1;

    // required bool zSpeed = 6;
    total_size += 1 + 1;

    // required bool xAccelOrAccelMagnitude = 7;
    total_size += 1 + 1;

    // required bool yAccelOrAccelDirection = 8;
    total_size += 1 + 1;

    // required bool zAcceleration = 9;
    total_size += 1 + 1;

    // required bool zAngle = 10;
    total_size += 1 + 1;

    // required bool yAngle = 11;
    total_size += 1 + 1;

    // required bool xAngle = 12;
    total_size += 1 + 1;

    // required bool zAngularVelocity = 13;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MatrixIncludedComponents::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MatrixIncludedComponents)
  GOOGLE_DCHECK_NE(&from, this);
  const MatrixIncludedComponents* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatrixIncludedComponents>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MatrixIncludedComponents)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MatrixIncludedComponents)
    MergeFrom(*source);
  }
}

void MatrixIncludedComponents::MergeFrom(const MatrixIncludedComponents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MatrixIncludedComponents)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      xposition_ = from.xposition_;
    }
    if (cached_has_bits & 0x00000002u) {
      yposition_ = from.yposition_;
    }
    if (cached_has_bits & 0x00000004u) {
      zposition_ = from.zposition_;
    }
    if (cached_has_bits & 0x00000008u) {
      xvelocityorvelocitymagnitude_ = from.xvelocityorvelocitymagnitude_;
    }
    if (cached_has_bits & 0x00000010u) {
      yvelocityorvelocitydirection_ = from.yvelocityorvelocitydirection_;
    }
    if (cached_has_bits & 0x00000020u) {
      zspeed_ = from.zspeed_;
    }
    if (cached_has_bits & 0x00000040u) {
      xacceloraccelmagnitude_ = from.xacceloraccelmagnitude_;
    }
    if (cached_has_bits & 0x00000080u) {
      yacceloracceldirection_ = from.yacceloracceldirection_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      zacceleration_ = from.zacceleration_;
    }
    if (cached_has_bits & 0x00000200u) {
      zangle_ = from.zangle_;
    }
    if (cached_has_bits & 0x00000400u) {
      yangle_ = from.yangle_;
    }
    if (cached_has_bits & 0x00000800u) {
      xangle_ = from.xangle_;
    }
    if (cached_has_bits & 0x00001000u) {
      zangularvelocity_ = from.zangularvelocity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MatrixIncludedComponents::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MatrixIncludedComponents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatrixIncludedComponents::CopyFrom(const MatrixIncludedComponents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MatrixIncludedComponents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatrixIncludedComponents::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001fff) != 0x00001fff) return false;
  return true;
}

void MatrixIncludedComponents::Swap(MatrixIncludedComponents* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatrixIncludedComponents::InternalSwap(MatrixIncludedComponents* other) {
  using std::swap;
  swap(xposition_, other->xposition_);
  swap(yposition_, other->yposition_);
  swap(zposition_, other->zposition_);
  swap(xvelocityorvelocitymagnitude_, other->xvelocityorvelocitymagnitude_);
  swap(yvelocityorvelocitydirection_, other->yvelocityorvelocitydirection_);
  swap(zspeed_, other->zspeed_);
  swap(xacceloraccelmagnitude_, other->xacceloraccelmagnitude_);
  swap(yacceloracceldirection_, other->yacceloracceldirection_);
  swap(zacceleration_, other->zacceleration_);
  swap(zangle_, other->zangle_);
  swap(yangle_, other->yangle_);
  swap(xangle_, other->xangle_);
  swap(zangularvelocity_, other->zangularvelocity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MatrixIncludedComponents::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageRateHz::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageRateHz::kMantissaFieldNumber;
const int MessageRateHz::kExponentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageRateHz::MessageRateHz()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_MessageRateHz.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageRateHz)
}
MessageRateHz::MessageRateHz(const MessageRateHz& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mantissa_, &from.mantissa_,
    static_cast<size_t>(reinterpret_cast<char*>(&exponent_) -
    reinterpret_cast<char*>(&mantissa_)) + sizeof(exponent_));
  // @@protoc_insertion_point(copy_constructor:MessageRateHz)
}

void MessageRateHz::SharedCtor() {
  ::memset(&mantissa_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exponent_) -
      reinterpret_cast<char*>(&mantissa_)) + sizeof(exponent_));
}

MessageRateHz::~MessageRateHz() {
  // @@protoc_insertion_point(destructor:MessageRateHz)
  SharedDtor();
}

void MessageRateHz::SharedDtor() {
}

void MessageRateHz::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MessageRateHz::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageRateHz& MessageRateHz::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_MessageRateHz.base);
  return *internal_default_instance();
}


void MessageRateHz::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageRateHz)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&mantissa_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&exponent_) -
        reinterpret_cast<char*>(&mantissa_)) + sizeof(exponent_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessageRateHz::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageRateHz)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 mantissa = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_mantissa();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mantissa_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 exponent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_exponent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exponent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageRateHz)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageRateHz)
  return false;
#undef DO_
}

void MessageRateHz::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageRateHz)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 mantissa = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mantissa(), output);
  }

  // required int32 exponent = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exponent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageRateHz)
}

::google::protobuf::uint8* MessageRateHz::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageRateHz)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 mantissa = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mantissa(), target);
  }

  // required int32 exponent = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exponent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageRateHz)
  return target;
}

size_t MessageRateHz::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MessageRateHz)
  size_t total_size = 0;

  if (has_mantissa()) {
    // required uint32 mantissa = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mantissa());
  }

  if (has_exponent()) {
    // required int32 exponent = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exponent());
  }

  return total_size;
}
size_t MessageRateHz::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageRateHz)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 mantissa = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mantissa());

    // required int32 exponent = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exponent());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageRateHz::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageRateHz)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageRateHz* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageRateHz>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageRateHz)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageRateHz)
    MergeFrom(*source);
  }
}

void MessageRateHz::MergeFrom(const MessageRateHz& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageRateHz)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mantissa_ = from.mantissa_;
    }
    if (cached_has_bits & 0x00000002u) {
      exponent_ = from.exponent_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MessageRateHz::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageRateHz)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageRateHz::CopyFrom(const MessageRateHz& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageRateHz)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageRateHz::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void MessageRateHz::Swap(MessageRateHz* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageRateHz::InternalSwap(MessageRateHz* other) {
  using std::swap;
  swap(mantissa_, other->mantissa_);
  swap(exponent_, other->exponent_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MessageRateHz::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageSegmentationInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageSegmentationInfo::kTotalMsgNoFieldNumber;
const int MessageSegmentationInfo::kThisMsgNoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageSegmentationInfo::MessageSegmentationInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_MessageSegmentationInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageSegmentationInfo)
}
MessageSegmentationInfo::MessageSegmentationInfo(const MessageSegmentationInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&totalmsgno_, &from.totalmsgno_,
    static_cast<size_t>(reinterpret_cast<char*>(&thismsgno_) -
    reinterpret_cast<char*>(&totalmsgno_)) + sizeof(thismsgno_));
  // @@protoc_insertion_point(copy_constructor:MessageSegmentationInfo)
}

void MessageSegmentationInfo::SharedCtor() {
  ::memset(&totalmsgno_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&thismsgno_) -
      reinterpret_cast<char*>(&totalmsgno_)) + sizeof(thismsgno_));
}

MessageSegmentationInfo::~MessageSegmentationInfo() {
  // @@protoc_insertion_point(destructor:MessageSegmentationInfo)
  SharedDtor();
}

void MessageSegmentationInfo::SharedDtor() {
}

void MessageSegmentationInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MessageSegmentationInfo::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageSegmentationInfo& MessageSegmentationInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_MessageSegmentationInfo.base);
  return *internal_default_instance();
}


void MessageSegmentationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageSegmentationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&totalmsgno_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&thismsgno_) -
        reinterpret_cast<char*>(&totalmsgno_)) + sizeof(thismsgno_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessageSegmentationInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageSegmentationInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 totalMsgNo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_totalmsgno();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totalmsgno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 thisMsgNo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_thismsgno();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &thismsgno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageSegmentationInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageSegmentationInfo)
  return false;
#undef DO_
}

void MessageSegmentationInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageSegmentationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 totalMsgNo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->totalmsgno(), output);
  }

  // required uint32 thisMsgNo = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->thismsgno(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageSegmentationInfo)
}

::google::protobuf::uint8* MessageSegmentationInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageSegmentationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 totalMsgNo = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->totalmsgno(), target);
  }

  // required uint32 thisMsgNo = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->thismsgno(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageSegmentationInfo)
  return target;
}

size_t MessageSegmentationInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MessageSegmentationInfo)
  size_t total_size = 0;

  if (has_totalmsgno()) {
    // required uint32 totalMsgNo = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->totalmsgno());
  }

  if (has_thismsgno()) {
    // required uint32 thisMsgNo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->thismsgno());
  }

  return total_size;
}
size_t MessageSegmentationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageSegmentationInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 totalMsgNo = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->totalmsgno());

    // required uint32 thisMsgNo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->thismsgno());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageSegmentationInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageSegmentationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageSegmentationInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageSegmentationInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageSegmentationInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageSegmentationInfo)
    MergeFrom(*source);
  }
}

void MessageSegmentationInfo::MergeFrom(const MessageSegmentationInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageSegmentationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      totalmsgno_ = from.totalmsgno_;
    }
    if (cached_has_bits & 0x00000002u) {
      thismsgno_ = from.thismsgno_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MessageSegmentationInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageSegmentationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageSegmentationInfo::CopyFrom(const MessageSegmentationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageSegmentationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageSegmentationInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void MessageSegmentationInfo::Swap(MessageSegmentationInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageSegmentationInfo::InternalSwap(MessageSegmentationInfo* other) {
  using std::swap;
  swap(totalmsgno_, other->totalmsgno_);
  swap(thismsgno_, other->thismsgno_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MessageSegmentationInfo::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectClass::InitAsDefaultInstance() {
  ::_ObjectClass_default_instance_.vehiclesubclass_ = 0;
  ::_ObjectClass_default_instance_.vrusubclass_ = const_cast< ::VruProfileAndSubprofile*>(
      ::VruProfileAndSubprofile::internal_default_instance());
  ::_ObjectClass_default_instance_.groupsubclass_ = const_cast< ::VruClusterInformation*>(
      ::VruClusterInformation::internal_default_instance());
  ::_ObjectClass_default_instance_.othersubclass_ = const_cast< ::OtherSubClass*>(
      ::OtherSubClass::internal_default_instance());
}
void ObjectClass::set_allocated_vrusubclass(::VruProfileAndSubprofile* vrusubclass) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_class();
  if (vrusubclass) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vrusubclass = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vrusubclass, submessage_arena);
    }
    set_has_vrusubclass();
    class_.vrusubclass_ = vrusubclass;
  }
  // @@protoc_insertion_point(field_set_allocated:ObjectClass.vruSubClass)
}
void ObjectClass::set_allocated_groupsubclass(::VruClusterInformation* groupsubclass) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_class();
  if (groupsubclass) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      groupsubclass = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, groupsubclass, submessage_arena);
    }
    set_has_groupsubclass();
    class_.groupsubclass_ = groupsubclass;
  }
  // @@protoc_insertion_point(field_set_allocated:ObjectClass.groupSubClass)
}
void ObjectClass::set_allocated_othersubclass(::OtherSubClass* othersubclass) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_class();
  if (othersubclass) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      othersubclass = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, othersubclass, submessage_arena);
    }
    set_has_othersubclass();
    class_.othersubclass_ = othersubclass;
  }
  // @@protoc_insertion_point(field_set_allocated:ObjectClass.otherSubClass)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectClass::kVehicleSubClassFieldNumber;
const int ObjectClass::kVruSubClassFieldNumber;
const int ObjectClass::kGroupSubClassFieldNumber;
const int ObjectClass::kOtherSubClassFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectClass::ObjectClass()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ObjectClass.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ObjectClass)
}
ObjectClass::ObjectClass(const ObjectClass& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_class();
  switch (from.class_case()) {
    case kVehicleSubClass: {
      set_vehiclesubclass(from.vehiclesubclass());
      break;
    }
    case kVruSubClass: {
      mutable_vrusubclass()->::VruProfileAndSubprofile::MergeFrom(from.vrusubclass());
      break;
    }
    case kGroupSubClass: {
      mutable_groupsubclass()->::VruClusterInformation::MergeFrom(from.groupsubclass());
      break;
    }
    case kOtherSubClass: {
      mutable_othersubclass()->::OtherSubClass::MergeFrom(from.othersubclass());
      break;
    }
    case CLASS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ObjectClass)
}

void ObjectClass::SharedCtor() {
  clear_has_class();
}

ObjectClass::~ObjectClass() {
  // @@protoc_insertion_point(destructor:ObjectClass)
  SharedDtor();
}

void ObjectClass::SharedDtor() {
  if (has_class()) {
    clear_class();
  }
}

void ObjectClass::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectClass::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectClass& ObjectClass::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ObjectClass.base);
  return *internal_default_instance();
}


void ObjectClass::clear_class() {
// @@protoc_insertion_point(one_of_clear_start:ObjectClass)
  switch (class_case()) {
    case kVehicleSubClass: {
      // No need to clear
      break;
    }
    case kVruSubClass: {
      delete class_.vrusubclass_;
      break;
    }
    case kGroupSubClass: {
      delete class_.groupsubclass_;
      break;
    }
    case kOtherSubClass: {
      delete class_.othersubclass_;
      break;
    }
    case CLASS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CLASS_NOT_SET;
}


void ObjectClass::Clear() {
// @@protoc_insertion_point(message_clear_start:ObjectClass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_class();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectClass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ObjectClass)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .TrafficParticipantType vehicleSubClass = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TrafficParticipantType_IsValid(value)) {
            set_vehiclesubclass(static_cast< ::TrafficParticipantType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .VruProfileAndSubprofile vruSubClass = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vrusubclass()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .VruClusterInformation groupSubClass = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_groupsubclass()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .OtherSubClass otherSubClass = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_othersubclass()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ObjectClass)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ObjectClass)
  return false;
#undef DO_
}

void ObjectClass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ObjectClass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (class_case()) {
    case kVehicleSubClass:
      ::google::protobuf::internal::WireFormatLite::WriteEnum(
        1, this->vehiclesubclass(), output);
      break;
    case kVruSubClass:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_vrusubclass(), output);
      break;
    case kGroupSubClass:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_groupsubclass(), output);
      break;
    case kOtherSubClass:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_othersubclass(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ObjectClass)
}

::google::protobuf::uint8* ObjectClass::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ObjectClass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (class_case()) {
    case kVehicleSubClass:
      target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
        1, this->vehiclesubclass(), target);
      break;
    case kVruSubClass:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_vrusubclass(), deterministic, target);
      break;
    case kGroupSubClass:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, this->_internal_groupsubclass(), deterministic, target);
      break;
    case kOtherSubClass:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_othersubclass(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ObjectClass)
  return target;
}

size_t ObjectClass::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ObjectClass)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (class_case()) {
    // optional .TrafficParticipantType vehicleSubClass = 1;
    case kVehicleSubClass: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vehiclesubclass());
      break;
    }
    // optional .VruProfileAndSubprofile vruSubClass = 2;
    case kVruSubClass: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *class_.vrusubclass_);
      break;
    }
    // optional .VruClusterInformation groupSubClass = 3;
    case kGroupSubClass: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *class_.groupsubclass_);
      break;
    }
    // optional .OtherSubClass otherSubClass = 4;
    case kOtherSubClass: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *class_.othersubclass_);
      break;
    }
    case CLASS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectClass::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ObjectClass)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectClass* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectClass>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ObjectClass)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ObjectClass)
    MergeFrom(*source);
  }
}

void ObjectClass::MergeFrom(const ObjectClass& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ObjectClass)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.class_case()) {
    case kVehicleSubClass: {
      set_vehiclesubclass(from.vehiclesubclass());
      break;
    }
    case kVruSubClass: {
      mutable_vrusubclass()->::VruProfileAndSubprofile::MergeFrom(from.vrusubclass());
      break;
    }
    case kGroupSubClass: {
      mutable_groupsubclass()->::VruClusterInformation::MergeFrom(from.groupsubclass());
      break;
    }
    case kOtherSubClass: {
      mutable_othersubclass()->::OtherSubClass::MergeFrom(from.othersubclass());
      break;
    }
    case CLASS_NOT_SET: {
      break;
    }
  }
}

void ObjectClass::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ObjectClass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectClass::CopyFrom(const ObjectClass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ObjectClass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectClass::IsInitialized() const {
  switch (class_case()) {
    case kVehicleSubClass: {
      break;
    }
    case kVruSubClass: {
      break;
    }
    case kGroupSubClass: {
      if (has_groupsubclass()) {
        if (!this->groupsubclass().IsInitialized()) return false;
      }
      break;
    }
    case kOtherSubClass: {
      if (has_othersubclass()) {
        if (!this->othersubclass().IsInitialized()) return false;
      }
      break;
    }
    case CLASS_NOT_SET: {
      break;
    }
  }
  return true;
}

void ObjectClass::Swap(ObjectClass* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectClass::InternalSwap(ObjectClass* other) {
  using std::swap;
  swap(class_, other->class_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectClass::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectClassWithConfidence::InitAsDefaultInstance() {
  ::_ObjectClassWithConfidence_default_instance_._instance.get_mutable()->objectclass_ = const_cast< ::ObjectClass*>(
      ::ObjectClass::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectClassWithConfidence::kObjectClassFieldNumber;
const int ObjectClassWithConfidence::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectClassWithConfidence::ObjectClassWithConfidence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ObjectClassWithConfidence.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ObjectClassWithConfidence)
}
ObjectClassWithConfidence::ObjectClassWithConfidence(const ObjectClassWithConfidence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_objectclass()) {
    objectclass_ = new ::ObjectClass(*from.objectclass_);
  } else {
    objectclass_ = NULL;
  }
  confidence_ = from.confidence_;
  // @@protoc_insertion_point(copy_constructor:ObjectClassWithConfidence)
}

void ObjectClassWithConfidence::SharedCtor() {
  ::memset(&objectclass_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confidence_) -
      reinterpret_cast<char*>(&objectclass_)) + sizeof(confidence_));
}

ObjectClassWithConfidence::~ObjectClassWithConfidence() {
  // @@protoc_insertion_point(destructor:ObjectClassWithConfidence)
  SharedDtor();
}

void ObjectClassWithConfidence::SharedDtor() {
  if (this != internal_default_instance()) delete objectclass_;
}

void ObjectClassWithConfidence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectClassWithConfidence::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectClassWithConfidence& ObjectClassWithConfidence::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ObjectClassWithConfidence.base);
  return *internal_default_instance();
}


void ObjectClassWithConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:ObjectClassWithConfidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(objectclass_ != NULL);
    objectclass_->Clear();
  }
  confidence_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectClassWithConfidence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ObjectClassWithConfidence)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ObjectClass objectClass = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_objectclass()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_confidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ObjectClassWithConfidence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ObjectClassWithConfidence)
  return false;
#undef DO_
}

void ObjectClassWithConfidence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ObjectClassWithConfidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ObjectClass objectClass = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_objectclass(), output);
  }

  // required uint32 confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->confidence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ObjectClassWithConfidence)
}

::google::protobuf::uint8* ObjectClassWithConfidence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ObjectClassWithConfidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ObjectClass objectClass = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_objectclass(), deterministic, target);
  }

  // required uint32 confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->confidence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ObjectClassWithConfidence)
  return target;
}

size_t ObjectClassWithConfidence::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ObjectClassWithConfidence)
  size_t total_size = 0;

  if (has_objectclass()) {
    // required .ObjectClass objectClass = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *objectclass_);
  }

  if (has_confidence()) {
    // required uint32 confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->confidence());
  }

  return total_size;
}
size_t ObjectClassWithConfidence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ObjectClassWithConfidence)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .ObjectClass objectClass = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *objectclass_);

    // required uint32 confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->confidence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectClassWithConfidence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ObjectClassWithConfidence)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectClassWithConfidence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectClassWithConfidence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ObjectClassWithConfidence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ObjectClassWithConfidence)
    MergeFrom(*source);
  }
}

void ObjectClassWithConfidence::MergeFrom(const ObjectClassWithConfidence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ObjectClassWithConfidence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_objectclass()->::ObjectClass::MergeFrom(from.objectclass());
    }
    if (cached_has_bits & 0x00000002u) {
      confidence_ = from.confidence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ObjectClassWithConfidence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ObjectClassWithConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectClassWithConfidence::CopyFrom(const ObjectClassWithConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ObjectClassWithConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectClassWithConfidence::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_objectclass()) {
    if (!this->objectclass_->IsInitialized()) return false;
  }
  return true;
}

void ObjectClassWithConfidence::Swap(ObjectClassWithConfidence* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectClassWithConfidence::InternalSwap(ObjectClassWithConfidence* other) {
  using std::swap;
  swap(objectclass_, other->objectclass_);
  swap(confidence_, other->confidence_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectClassWithConfidence::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectDimension::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectDimension::kValueFieldNumber;
const int ObjectDimension::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectDimension::ObjectDimension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ObjectDimension.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ObjectDimension)
}
ObjectDimension::ObjectDimension(const ObjectDimension& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&confidence_) -
    reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
  // @@protoc_insertion_point(copy_constructor:ObjectDimension)
}

void ObjectDimension::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confidence_) -
      reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
}

ObjectDimension::~ObjectDimension() {
  // @@protoc_insertion_point(destructor:ObjectDimension)
  SharedDtor();
}

void ObjectDimension::SharedDtor() {
}

void ObjectDimension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectDimension::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectDimension& ObjectDimension::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ObjectDimension.base);
  return *internal_default_instance();
}


void ObjectDimension::Clear() {
// @@protoc_insertion_point(message_clear_start:ObjectDimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&confidence_) -
        reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectDimension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ObjectDimension)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_confidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ObjectDimension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ObjectDimension)
  return false;
#undef DO_
}

void ObjectDimension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ObjectDimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->value(), output);
  }

  // required uint32 confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->confidence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ObjectDimension)
}

::google::protobuf::uint8* ObjectDimension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ObjectDimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->value(), target);
  }

  // required uint32 confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->confidence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ObjectDimension)
  return target;
}

size_t ObjectDimension::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ObjectDimension)
  size_t total_size = 0;

  if (has_value()) {
    // required uint32 value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  if (has_confidence()) {
    // required uint32 confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->confidence());
  }

  return total_size;
}
size_t ObjectDimension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ObjectDimension)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());

    // required uint32 confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->confidence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectDimension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ObjectDimension)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectDimension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectDimension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ObjectDimension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ObjectDimension)
    MergeFrom(*source);
  }
}

void ObjectDimension::MergeFrom(const ObjectDimension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ObjectDimension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000002u) {
      confidence_ = from.confidence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ObjectDimension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ObjectDimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectDimension::CopyFrom(const ObjectDimension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ObjectDimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectDimension::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ObjectDimension::Swap(ObjectDimension* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectDimension::InternalSwap(ObjectDimension* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(confidence_, other->confidence_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectDimension::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OtherSubClass::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OtherSubClass::kUnknownFieldNumber;
const int OtherSubClass::kSingleObjectFieldNumber;
const int OtherSubClass::kMultipleObjectsFieldNumber;
const int OtherSubClass::kBulkMaterialFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OtherSubClass::OtherSubClass()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_OtherSubClass.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:OtherSubClass)
}
OtherSubClass::OtherSubClass(const OtherSubClass& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&unknown_, &from.unknown_,
    static_cast<size_t>(reinterpret_cast<char*>(&bulkmaterial_) -
    reinterpret_cast<char*>(&unknown_)) + sizeof(bulkmaterial_));
  // @@protoc_insertion_point(copy_constructor:OtherSubClass)
}

void OtherSubClass::SharedCtor() {
  ::memset(&unknown_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bulkmaterial_) -
      reinterpret_cast<char*>(&unknown_)) + sizeof(bulkmaterial_));
}

OtherSubClass::~OtherSubClass() {
  // @@protoc_insertion_point(destructor:OtherSubClass)
  SharedDtor();
}

void OtherSubClass::SharedDtor() {
}

void OtherSubClass::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OtherSubClass::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OtherSubClass& OtherSubClass::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_OtherSubClass.base);
  return *internal_default_instance();
}


void OtherSubClass::Clear() {
// @@protoc_insertion_point(message_clear_start:OtherSubClass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&unknown_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bulkmaterial_) -
      reinterpret_cast<char*>(&unknown_)) + sizeof(bulkmaterial_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OtherSubClass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OtherSubClass)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool unknown = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_unknown();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unknown_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool singleObject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_singleobject();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &singleobject_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool multipleObjects = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_multipleobjects();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &multipleobjects_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool bulkMaterial = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_bulkmaterial();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bulkmaterial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OtherSubClass)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OtherSubClass)
  return false;
#undef DO_
}

void OtherSubClass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OtherSubClass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool unknown = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->unknown(), output);
  }

  // required bool singleObject = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->singleobject(), output);
  }

  // required bool multipleObjects = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->multipleobjects(), output);
  }

  // required bool bulkMaterial = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->bulkmaterial(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OtherSubClass)
}

::google::protobuf::uint8* OtherSubClass::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OtherSubClass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool unknown = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->unknown(), target);
  }

  // required bool singleObject = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->singleobject(), target);
  }

  // required bool multipleObjects = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->multipleobjects(), target);
  }

  // required bool bulkMaterial = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->bulkmaterial(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OtherSubClass)
  return target;
}

size_t OtherSubClass::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:OtherSubClass)
  size_t total_size = 0;

  if (has_unknown()) {
    // required bool unknown = 1;
    total_size += 1 + 1;
  }

  if (has_singleobject()) {
    // required bool singleObject = 2;
    total_size += 1 + 1;
  }

  if (has_multipleobjects()) {
    // required bool multipleObjects = 3;
    total_size += 1 + 1;
  }

  if (has_bulkmaterial()) {
    // required bool bulkMaterial = 4;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t OtherSubClass::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OtherSubClass)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required bool unknown = 1;
    total_size += 1 + 1;

    // required bool singleObject = 2;
    total_size += 1 + 1;

    // required bool multipleObjects = 3;
    total_size += 1 + 1;

    // required bool bulkMaterial = 4;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OtherSubClass::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OtherSubClass)
  GOOGLE_DCHECK_NE(&from, this);
  const OtherSubClass* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OtherSubClass>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OtherSubClass)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OtherSubClass)
    MergeFrom(*source);
  }
}

void OtherSubClass::MergeFrom(const OtherSubClass& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OtherSubClass)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      unknown_ = from.unknown_;
    }
    if (cached_has_bits & 0x00000002u) {
      singleobject_ = from.singleobject_;
    }
    if (cached_has_bits & 0x00000004u) {
      multipleobjects_ = from.multipleobjects_;
    }
    if (cached_has_bits & 0x00000008u) {
      bulkmaterial_ = from.bulkmaterial_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OtherSubClass::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OtherSubClass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OtherSubClass::CopyFrom(const OtherSubClass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OtherSubClass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OtherSubClass::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void OtherSubClass::Swap(OtherSubClass* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OtherSubClass::InternalSwap(OtherSubClass* other) {
  using std::swap;
  swap(unknown_, other->unknown_);
  swap(singleobject_, other->singleobject_);
  swap(multipleobjects_, other->multipleobjects_);
  swap(bulkmaterial_, other->bulkmaterial_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OtherSubClass::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PolygonalShape::InitAsDefaultInstance() {
  ::_PolygonalShape_default_instance_._instance.get_mutable()->shapereferencepoint_ = const_cast< ::CartesianPosition3d*>(
      ::CartesianPosition3d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PolygonalShape::kShapeReferencePointFieldNumber;
const int PolygonalShape::kPolygonFieldNumber;
const int PolygonalShape::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PolygonalShape::PolygonalShape()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_PolygonalShape.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PolygonalShape)
}
PolygonalShape::PolygonalShape(const PolygonalShape& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      polygon_(from.polygon_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_shapereferencepoint()) {
    shapereferencepoint_ = new ::CartesianPosition3d(*from.shapereferencepoint_);
  } else {
    shapereferencepoint_ = NULL;
  }
  height_ = from.height_;
  // @@protoc_insertion_point(copy_constructor:PolygonalShape)
}

void PolygonalShape::SharedCtor() {
  ::memset(&shapereferencepoint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&shapereferencepoint_)) + sizeof(height_));
}

PolygonalShape::~PolygonalShape() {
  // @@protoc_insertion_point(destructor:PolygonalShape)
  SharedDtor();
}

void PolygonalShape::SharedDtor() {
  if (this != internal_default_instance()) delete shapereferencepoint_;
}

void PolygonalShape::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PolygonalShape::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PolygonalShape& PolygonalShape::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_PolygonalShape.base);
  return *internal_default_instance();
}


void PolygonalShape::Clear() {
// @@protoc_insertion_point(message_clear_start:PolygonalShape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  polygon_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(shapereferencepoint_ != NULL);
    shapereferencepoint_->Clear();
  }
  height_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PolygonalShape::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PolygonalShape)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CartesianPosition3d shapeReferencePoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shapereferencepoint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CartesianPosition3d polygon = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_polygon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PolygonalShape)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PolygonalShape)
  return false;
#undef DO_
}

void PolygonalShape::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PolygonalShape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CartesianPosition3d shapeReferencePoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_shapereferencepoint(), output);
  }

  // repeated .CartesianPosition3d polygon = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygon_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->polygon(static_cast<int>(i)),
      output);
  }

  // optional uint32 height = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PolygonalShape)
}

::google::protobuf::uint8* PolygonalShape::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PolygonalShape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CartesianPosition3d shapeReferencePoint = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_shapereferencepoint(), deterministic, target);
  }

  // repeated .CartesianPosition3d polygon = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygon_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->polygon(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 height = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PolygonalShape)
  return target;
}

size_t PolygonalShape::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PolygonalShape)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CartesianPosition3d polygon = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->polygon_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->polygon(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .CartesianPosition3d shapeReferencePoint = 1;
    if (has_shapereferencepoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *shapereferencepoint_);
    }

    // optional uint32 height = 3;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PolygonalShape::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PolygonalShape)
  GOOGLE_DCHECK_NE(&from, this);
  const PolygonalShape* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PolygonalShape>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PolygonalShape)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PolygonalShape)
    MergeFrom(*source);
  }
}

void PolygonalShape::MergeFrom(const PolygonalShape& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PolygonalShape)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  polygon_.MergeFrom(from.polygon_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_shapereferencepoint()->::CartesianPosition3d::MergeFrom(from.shapereferencepoint());
    }
    if (cached_has_bits & 0x00000002u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PolygonalShape::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PolygonalShape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PolygonalShape::CopyFrom(const PolygonalShape& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PolygonalShape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PolygonalShape::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->polygon())) return false;
  if (has_shapereferencepoint()) {
    if (!this->shapereferencepoint_->IsInitialized()) return false;
  }
  return true;
}

void PolygonalShape::Swap(PolygonalShape* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PolygonalShape::InternalSwap(PolygonalShape* other) {
  using std::swap;
  CastToBase(&polygon_)->InternalSwap(CastToBase(&other->polygon_));
  swap(shapereferencepoint_, other->shapereferencepoint_);
  swap(height_, other->height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PolygonalShape::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PositionConfidenceEllipse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PositionConfidenceEllipse::kSemiMajorConfidenceFieldNumber;
const int PositionConfidenceEllipse::kSemiMinorConfidenceFieldNumber;
const int PositionConfidenceEllipse::kSemiMajorOrientationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PositionConfidenceEllipse::PositionConfidenceEllipse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_PositionConfidenceEllipse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PositionConfidenceEllipse)
}
PositionConfidenceEllipse::PositionConfidenceEllipse(const PositionConfidenceEllipse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&semi_major_confidence_, &from.semi_major_confidence_,
    static_cast<size_t>(reinterpret_cast<char*>(&semi_major_orientation_) -
    reinterpret_cast<char*>(&semi_major_confidence_)) + sizeof(semi_major_orientation_));
  // @@protoc_insertion_point(copy_constructor:PositionConfidenceEllipse)
}

void PositionConfidenceEllipse::SharedCtor() {
  ::memset(&semi_major_confidence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&semi_major_orientation_) -
      reinterpret_cast<char*>(&semi_major_confidence_)) + sizeof(semi_major_orientation_));
}

PositionConfidenceEllipse::~PositionConfidenceEllipse() {
  // @@protoc_insertion_point(destructor:PositionConfidenceEllipse)
  SharedDtor();
}

void PositionConfidenceEllipse::SharedDtor() {
}

void PositionConfidenceEllipse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PositionConfidenceEllipse::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PositionConfidenceEllipse& PositionConfidenceEllipse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_PositionConfidenceEllipse.base);
  return *internal_default_instance();
}


void PositionConfidenceEllipse::Clear() {
// @@protoc_insertion_point(message_clear_start:PositionConfidenceEllipse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&semi_major_confidence_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&semi_major_orientation_) -
        reinterpret_cast<char*>(&semi_major_confidence_)) + sizeof(semi_major_orientation_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PositionConfidenceEllipse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PositionConfidenceEllipse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 semi_major_confidence = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_semi_major_confidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &semi_major_confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 semi_minor_confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_semi_minor_confidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &semi_minor_confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 semi_major_orientation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_semi_major_orientation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &semi_major_orientation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PositionConfidenceEllipse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PositionConfidenceEllipse)
  return false;
#undef DO_
}

void PositionConfidenceEllipse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PositionConfidenceEllipse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 semi_major_confidence = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->semi_major_confidence(), output);
  }

  // required uint32 semi_minor_confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->semi_minor_confidence(), output);
  }

  // required uint32 semi_major_orientation = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->semi_major_orientation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PositionConfidenceEllipse)
}

::google::protobuf::uint8* PositionConfidenceEllipse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PositionConfidenceEllipse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 semi_major_confidence = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->semi_major_confidence(), target);
  }

  // required uint32 semi_minor_confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->semi_minor_confidence(), target);
  }

  // required uint32 semi_major_orientation = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->semi_major_orientation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PositionConfidenceEllipse)
  return target;
}

size_t PositionConfidenceEllipse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PositionConfidenceEllipse)
  size_t total_size = 0;

  if (has_semi_major_confidence()) {
    // required uint32 semi_major_confidence = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->semi_major_confidence());
  }

  if (has_semi_minor_confidence()) {
    // required uint32 semi_minor_confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->semi_minor_confidence());
  }

  if (has_semi_major_orientation()) {
    // required uint32 semi_major_orientation = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->semi_major_orientation());
  }

  return total_size;
}
size_t PositionConfidenceEllipse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PositionConfidenceEllipse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 semi_major_confidence = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->semi_major_confidence());

    // required uint32 semi_minor_confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->semi_minor_confidence());

    // required uint32 semi_major_orientation = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->semi_major_orientation());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PositionConfidenceEllipse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PositionConfidenceEllipse)
  GOOGLE_DCHECK_NE(&from, this);
  const PositionConfidenceEllipse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PositionConfidenceEllipse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PositionConfidenceEllipse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PositionConfidenceEllipse)
    MergeFrom(*source);
  }
}

void PositionConfidenceEllipse::MergeFrom(const PositionConfidenceEllipse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PositionConfidenceEllipse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      semi_major_confidence_ = from.semi_major_confidence_;
    }
    if (cached_has_bits & 0x00000002u) {
      semi_minor_confidence_ = from.semi_minor_confidence_;
    }
    if (cached_has_bits & 0x00000004u) {
      semi_major_orientation_ = from.semi_major_orientation_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PositionConfidenceEllipse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PositionConfidenceEllipse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PositionConfidenceEllipse::CopyFrom(const PositionConfidenceEllipse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PositionConfidenceEllipse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PositionConfidenceEllipse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void PositionConfidenceEllipse::Swap(PositionConfidenceEllipse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PositionConfidenceEllipse::InternalSwap(PositionConfidenceEllipse* other) {
  using std::swap;
  swap(semi_major_confidence_, other->semi_major_confidence_);
  swap(semi_minor_confidence_, other->semi_minor_confidence_);
  swap(semi_major_orientation_, other->semi_major_orientation_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PositionConfidenceEllipse::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RadialShape::InitAsDefaultInstance() {
  ::_RadialShape_default_instance_._instance.get_mutable()->sharedrefpoint_ = const_cast< ::CartesianPosition3d*>(
      ::CartesianPosition3d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadialShape::kSharedRefPointFieldNumber;
const int RadialShape::kRangeFieldNumber;
const int RadialShape::kStationaryHorizontalOpeningAngleStartFieldNumber;
const int RadialShape::kStationaryHorizontalOpeningAngleEndFieldNumber;
const int RadialShape::kVerticalOpeningAngleStartFieldNumber;
const int RadialShape::kVerticalOpeningAngleEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadialShape::RadialShape()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_RadialShape.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RadialShape)
}
RadialShape::RadialShape(const RadialShape& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sharedrefpoint()) {
    sharedrefpoint_ = new ::CartesianPosition3d(*from.sharedrefpoint_);
  } else {
    sharedrefpoint_ = NULL;
  }
  ::memcpy(&range_, &from.range_,
    static_cast<size_t>(reinterpret_cast<char*>(&verticalopeningangleend_) -
    reinterpret_cast<char*>(&range_)) + sizeof(verticalopeningangleend_));
  // @@protoc_insertion_point(copy_constructor:RadialShape)
}

void RadialShape::SharedCtor() {
  ::memset(&sharedrefpoint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&verticalopeningangleend_) -
      reinterpret_cast<char*>(&sharedrefpoint_)) + sizeof(verticalopeningangleend_));
}

RadialShape::~RadialShape() {
  // @@protoc_insertion_point(destructor:RadialShape)
  SharedDtor();
}

void RadialShape::SharedDtor() {
  if (this != internal_default_instance()) delete sharedrefpoint_;
}

void RadialShape::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RadialShape::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RadialShape& RadialShape::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_RadialShape.base);
  return *internal_default_instance();
}


void RadialShape::Clear() {
// @@protoc_insertion_point(message_clear_start:RadialShape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(sharedrefpoint_ != NULL);
    sharedrefpoint_->Clear();
  }
  if (cached_has_bits & 62u) {
    ::memset(&range_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&verticalopeningangleend_) -
        reinterpret_cast<char*>(&range_)) + sizeof(verticalopeningangleend_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RadialShape::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RadialShape)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CartesianPosition3d sharedRefPoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sharedrefpoint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 range = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_range();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 stationaryHorizontalOpeningAngleStart = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_stationaryhorizontalopeninganglestart();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stationaryhorizontalopeninganglestart_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 stationaryHorizontalOpeningAngleEnd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_stationaryhorizontalopeningangleend();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stationaryhorizontalopeningangleend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 verticalOpeningAngleStart = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_verticalopeninganglestart();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &verticalopeninganglestart_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 verticalOpeningAngleEnd = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_verticalopeningangleend();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &verticalopeningangleend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RadialShape)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RadialShape)
  return false;
#undef DO_
}

void RadialShape::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RadialShape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CartesianPosition3d sharedRefPoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_sharedrefpoint(), output);
  }

  // required uint32 range = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->range(), output);
  }

  // required uint32 stationaryHorizontalOpeningAngleStart = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->stationaryhorizontalopeninganglestart(), output);
  }

  // required uint32 stationaryHorizontalOpeningAngleEnd = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->stationaryhorizontalopeningangleend(), output);
  }

  // optional uint32 verticalOpeningAngleStart = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->verticalopeninganglestart(), output);
  }

  // optional uint32 verticalOpeningAngleEnd = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->verticalopeningangleend(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RadialShape)
}

::google::protobuf::uint8* RadialShape::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RadialShape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CartesianPosition3d sharedRefPoint = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_sharedrefpoint(), deterministic, target);
  }

  // required uint32 range = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->range(), target);
  }

  // required uint32 stationaryHorizontalOpeningAngleStart = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->stationaryhorizontalopeninganglestart(), target);
  }

  // required uint32 stationaryHorizontalOpeningAngleEnd = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->stationaryhorizontalopeningangleend(), target);
  }

  // optional uint32 verticalOpeningAngleStart = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->verticalopeninganglestart(), target);
  }

  // optional uint32 verticalOpeningAngleEnd = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->verticalopeningangleend(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RadialShape)
  return target;
}

size_t RadialShape::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:RadialShape)
  size_t total_size = 0;

  if (has_range()) {
    // required uint32 range = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->range());
  }

  if (has_stationaryhorizontalopeninganglestart()) {
    // required uint32 stationaryHorizontalOpeningAngleStart = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->stationaryhorizontalopeninganglestart());
  }

  if (has_stationaryhorizontalopeningangleend()) {
    // required uint32 stationaryHorizontalOpeningAngleEnd = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->stationaryhorizontalopeningangleend());
  }

  return total_size;
}
size_t RadialShape::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RadialShape)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required uint32 range = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->range());

    // required uint32 stationaryHorizontalOpeningAngleStart = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->stationaryhorizontalopeninganglestart());

    // required uint32 stationaryHorizontalOpeningAngleEnd = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->stationaryhorizontalopeningangleend());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .CartesianPosition3d sharedRefPoint = 1;
  if (has_sharedrefpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sharedrefpoint_);
  }

  if (_has_bits_[0 / 32] & 48u) {
    // optional uint32 verticalOpeningAngleStart = 5;
    if (has_verticalopeninganglestart()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->verticalopeninganglestart());
    }

    // optional uint32 verticalOpeningAngleEnd = 6;
    if (has_verticalopeningangleend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->verticalopeningangleend());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RadialShape::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RadialShape)
  GOOGLE_DCHECK_NE(&from, this);
  const RadialShape* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadialShape>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RadialShape)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RadialShape)
    MergeFrom(*source);
  }
}

void RadialShape::MergeFrom(const RadialShape& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RadialShape)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_sharedrefpoint()->::CartesianPosition3d::MergeFrom(from.sharedrefpoint());
    }
    if (cached_has_bits & 0x00000002u) {
      range_ = from.range_;
    }
    if (cached_has_bits & 0x00000004u) {
      stationaryhorizontalopeninganglestart_ = from.stationaryhorizontalopeninganglestart_;
    }
    if (cached_has_bits & 0x00000008u) {
      stationaryhorizontalopeningangleend_ = from.stationaryhorizontalopeningangleend_;
    }
    if (cached_has_bits & 0x00000010u) {
      verticalopeninganglestart_ = from.verticalopeninganglestart_;
    }
    if (cached_has_bits & 0x00000020u) {
      verticalopeningangleend_ = from.verticalopeningangleend_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RadialShape::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RadialShape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadialShape::CopyFrom(const RadialShape& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RadialShape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadialShape::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  if (has_sharedrefpoint()) {
    if (!this->sharedrefpoint_->IsInitialized()) return false;
  }
  return true;
}

void RadialShape::Swap(RadialShape* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadialShape::InternalSwap(RadialShape* other) {
  using std::swap;
  swap(sharedrefpoint_, other->sharedrefpoint_);
  swap(range_, other->range_);
  swap(stationaryhorizontalopeninganglestart_, other->stationaryhorizontalopeninganglestart_);
  swap(stationaryhorizontalopeningangleend_, other->stationaryhorizontalopeningangleend_);
  swap(verticalopeninganglestart_, other->verticalopeninganglestart_);
  swap(verticalopeningangleend_, other->verticalopeningangleend_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RadialShape::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RadialShapes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadialShapes::kRefPointIDFieldNumber;
const int RadialShapes::kXCordFieldNumber;
const int RadialShapes::kYCordFieldNumber;
const int RadialShapes::kZCordFieldNumber;
const int RadialShapes::kRadialShapesListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadialShapes::RadialShapes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_RadialShapes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RadialShapes)
}
RadialShapes::RadialShapes(const RadialShapes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      radialshapeslist_(from.radialshapeslist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&refpointid_, &from.refpointid_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_cord_) -
    reinterpret_cast<char*>(&refpointid_)) + sizeof(z_cord_));
  // @@protoc_insertion_point(copy_constructor:RadialShapes)
}

void RadialShapes::SharedCtor() {
  ::memset(&refpointid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_cord_) -
      reinterpret_cast<char*>(&refpointid_)) + sizeof(z_cord_));
}

RadialShapes::~RadialShapes() {
  // @@protoc_insertion_point(destructor:RadialShapes)
  SharedDtor();
}

void RadialShapes::SharedDtor() {
}

void RadialShapes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RadialShapes::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RadialShapes& RadialShapes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_RadialShapes.base);
  return *internal_default_instance();
}


void RadialShapes::Clear() {
// @@protoc_insertion_point(message_clear_start:RadialShapes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  radialshapeslist_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&refpointid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&z_cord_) -
        reinterpret_cast<char*>(&refpointid_)) + sizeof(z_cord_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RadialShapes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RadialShapes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 refPointID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_refpointid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &refpointid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 x_cord = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x_cord();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_cord_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y_cord = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_y_cord();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_cord_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 z_cord = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_z_cord();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_cord_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .RadialShapeDetails radialShapesList = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_radialshapeslist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RadialShapes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RadialShapes)
  return false;
#undef DO_
}

void RadialShapes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RadialShapes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 refPointID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->refpointid(), output);
  }

  // required int32 x_cord = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x_cord(), output);
  }

  // required int32 y_cord = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y_cord(), output);
  }

  // optional int32 z_cord = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->z_cord(), output);
  }

  // repeated .RadialShapeDetails radialShapesList = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->radialshapeslist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->radialshapeslist(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RadialShapes)
}

::google::protobuf::uint8* RadialShapes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RadialShapes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 refPointID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->refpointid(), target);
  }

  // required int32 x_cord = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x_cord(), target);
  }

  // required int32 y_cord = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y_cord(), target);
  }

  // optional int32 z_cord = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->z_cord(), target);
  }

  // repeated .RadialShapeDetails radialShapesList = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->radialshapeslist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->radialshapeslist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RadialShapes)
  return target;
}

size_t RadialShapes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:RadialShapes)
  size_t total_size = 0;

  if (has_refpointid()) {
    // required uint32 refPointID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->refpointid());
  }

  if (has_x_cord()) {
    // required int32 x_cord = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x_cord());
  }

  if (has_y_cord()) {
    // required int32 y_cord = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y_cord());
  }

  return total_size;
}
size_t RadialShapes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RadialShapes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 refPointID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->refpointid());

    // required int32 x_cord = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x_cord());

    // required int32 y_cord = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y_cord());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .RadialShapeDetails radialShapesList = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->radialshapeslist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->radialshapeslist(static_cast<int>(i)));
    }
  }

  // optional int32 z_cord = 4;
  if (has_z_cord()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->z_cord());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RadialShapes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RadialShapes)
  GOOGLE_DCHECK_NE(&from, this);
  const RadialShapes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadialShapes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RadialShapes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RadialShapes)
    MergeFrom(*source);
  }
}

void RadialShapes::MergeFrom(const RadialShapes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RadialShapes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  radialshapeslist_.MergeFrom(from.radialshapeslist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      refpointid_ = from.refpointid_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_cord_ = from.x_cord_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_cord_ = from.y_cord_;
    }
    if (cached_has_bits & 0x00000008u) {
      z_cord_ = from.z_cord_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RadialShapes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RadialShapes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadialShapes::CopyFrom(const RadialShapes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RadialShapes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadialShapes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->radialshapeslist())) return false;
  return true;
}

void RadialShapes::Swap(RadialShapes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadialShapes::InternalSwap(RadialShapes* other) {
  using std::swap;
  CastToBase(&radialshapeslist_)->InternalSwap(CastToBase(&other->radialshapeslist_));
  swap(refpointid_, other->refpointid_);
  swap(x_cord_, other->x_cord_);
  swap(y_cord_, other->y_cord_);
  swap(z_cord_, other->z_cord_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RadialShapes::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RadialShapeDetails::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadialShapeDetails::kRangeFieldNumber;
const int RadialShapeDetails::kHorizontalOpeningAngleStartFieldNumber;
const int RadialShapeDetails::kHorizontalOpeningAngleEndFieldNumber;
const int RadialShapeDetails::kVerticalOpeningAngleStartFieldNumber;
const int RadialShapeDetails::kVerticalOpeningAngleEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadialShapeDetails::RadialShapeDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_RadialShapeDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RadialShapeDetails)
}
RadialShapeDetails::RadialShapeDetails(const RadialShapeDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&range_, &from.range_,
    static_cast<size_t>(reinterpret_cast<char*>(&verticalopeningangleend_) -
    reinterpret_cast<char*>(&range_)) + sizeof(verticalopeningangleend_));
  // @@protoc_insertion_point(copy_constructor:RadialShapeDetails)
}

void RadialShapeDetails::SharedCtor() {
  ::memset(&range_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&verticalopeningangleend_) -
      reinterpret_cast<char*>(&range_)) + sizeof(verticalopeningangleend_));
}

RadialShapeDetails::~RadialShapeDetails() {
  // @@protoc_insertion_point(destructor:RadialShapeDetails)
  SharedDtor();
}

void RadialShapeDetails::SharedDtor() {
}

void RadialShapeDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RadialShapeDetails::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RadialShapeDetails& RadialShapeDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_RadialShapeDetails.base);
  return *internal_default_instance();
}


void RadialShapeDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:RadialShapeDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&range_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&verticalopeningangleend_) -
        reinterpret_cast<char*>(&range_)) + sizeof(verticalopeningangleend_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RadialShapeDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RadialShapeDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 range = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_range();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 horizontalOpeningAngleStart = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_horizontalopeninganglestart();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &horizontalopeninganglestart_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 horizontalOpeningAngleEnd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_horizontalopeningangleend();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &horizontalopeningangleend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 verticalOpeningAngleStart = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_verticalopeninganglestart();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &verticalopeninganglestart_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 verticalOpeningAngleEnd = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_verticalopeningangleend();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &verticalopeningangleend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RadialShapeDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RadialShapeDetails)
  return false;
#undef DO_
}

void RadialShapeDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RadialShapeDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 range = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->range(), output);
  }

  // required uint32 horizontalOpeningAngleStart = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->horizontalopeninganglestart(), output);
  }

  // required uint32 horizontalOpeningAngleEnd = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->horizontalopeningangleend(), output);
  }

  // optional uint32 verticalOpeningAngleStart = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->verticalopeninganglestart(), output);
  }

  // optional uint32 verticalOpeningAngleEnd = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->verticalopeningangleend(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RadialShapeDetails)
}

::google::protobuf::uint8* RadialShapeDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RadialShapeDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 range = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->range(), target);
  }

  // required uint32 horizontalOpeningAngleStart = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->horizontalopeninganglestart(), target);
  }

  // required uint32 horizontalOpeningAngleEnd = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->horizontalopeningangleend(), target);
  }

  // optional uint32 verticalOpeningAngleStart = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->verticalopeninganglestart(), target);
  }

  // optional uint32 verticalOpeningAngleEnd = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->verticalopeningangleend(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RadialShapeDetails)
  return target;
}

size_t RadialShapeDetails::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:RadialShapeDetails)
  size_t total_size = 0;

  if (has_range()) {
    // required int32 range = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->range());
  }

  if (has_horizontalopeninganglestart()) {
    // required uint32 horizontalOpeningAngleStart = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->horizontalopeninganglestart());
  }

  if (has_horizontalopeningangleend()) {
    // required uint32 horizontalOpeningAngleEnd = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->horizontalopeningangleend());
  }

  return total_size;
}
size_t RadialShapeDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RadialShapeDetails)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 range = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->range());

    // required uint32 horizontalOpeningAngleStart = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->horizontalopeninganglestart());

    // required uint32 horizontalOpeningAngleEnd = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->horizontalopeningangleend());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 24u) {
    // optional uint32 verticalOpeningAngleStart = 4;
    if (has_verticalopeninganglestart()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->verticalopeninganglestart());
    }

    // optional uint32 verticalOpeningAngleEnd = 5;
    if (has_verticalopeningangleend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->verticalopeningangleend());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RadialShapeDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RadialShapeDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const RadialShapeDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadialShapeDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RadialShapeDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RadialShapeDetails)
    MergeFrom(*source);
  }
}

void RadialShapeDetails::MergeFrom(const RadialShapeDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RadialShapeDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      range_ = from.range_;
    }
    if (cached_has_bits & 0x00000002u) {
      horizontalopeninganglestart_ = from.horizontalopeninganglestart_;
    }
    if (cached_has_bits & 0x00000004u) {
      horizontalopeningangleend_ = from.horizontalopeningangleend_;
    }
    if (cached_has_bits & 0x00000008u) {
      verticalopeninganglestart_ = from.verticalopeninganglestart_;
    }
    if (cached_has_bits & 0x00000010u) {
      verticalopeningangleend_ = from.verticalopeningangleend_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RadialShapeDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RadialShapeDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadialShapeDetails::CopyFrom(const RadialShapeDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RadialShapeDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadialShapeDetails::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void RadialShapeDetails::Swap(RadialShapeDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadialShapeDetails::InternalSwap(RadialShapeDetails* other) {
  using std::swap;
  swap(range_, other->range_);
  swap(horizontalopeninganglestart_, other->horizontalopeninganglestart_);
  swap(horizontalopeningangleend_, other->horizontalopeningangleend_);
  swap(verticalopeninganglestart_, other->verticalopeninganglestart_);
  swap(verticalopeningangleend_, other->verticalopeningangleend_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RadialShapeDetails::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RectangularShape::InitAsDefaultInstance() {
  ::_RectangularShape_default_instance_._instance.get_mutable()->center_point_ = const_cast< ::CartesianPosition3d*>(
      ::CartesianPosition3d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RectangularShape::kCenterPointFieldNumber;
const int RectangularShape::kSemiLengthFieldNumber;
const int RectangularShape::kSemiBreadthFieldNumber;
const int RectangularShape::kOrientationFieldNumber;
const int RectangularShape::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RectangularShape::RectangularShape()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_RectangularShape.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RectangularShape)
}
RectangularShape::RectangularShape(const RectangularShape& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_center_point()) {
    center_point_ = new ::CartesianPosition3d(*from.center_point_);
  } else {
    center_point_ = NULL;
  }
  ::memcpy(&semilength_, &from.semilength_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&semilength_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:RectangularShape)
}

void RectangularShape::SharedCtor() {
  ::memset(&center_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&center_point_)) + sizeof(height_));
}

RectangularShape::~RectangularShape() {
  // @@protoc_insertion_point(destructor:RectangularShape)
  SharedDtor();
}

void RectangularShape::SharedDtor() {
  if (this != internal_default_instance()) delete center_point_;
}

void RectangularShape::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RectangularShape::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RectangularShape& RectangularShape::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_RectangularShape.base);
  return *internal_default_instance();
}


void RectangularShape::Clear() {
// @@protoc_insertion_point(message_clear_start:RectangularShape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(center_point_ != NULL);
    center_point_->Clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&semilength_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&height_) -
        reinterpret_cast<char*>(&semilength_)) + sizeof(height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RectangularShape::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RectangularShape)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CartesianPosition3d center_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_center_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 semiLength = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_semilength();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &semilength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 semiBreadth = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_semibreadth();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &semibreadth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 orientation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_orientation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &orientation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 height = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RectangularShape)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RectangularShape)
  return false;
#undef DO_
}

void RectangularShape::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RectangularShape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CartesianPosition3d center_point = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_center_point(), output);
  }

  // required uint32 semiLength = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->semilength(), output);
  }

  // required uint32 semiBreadth = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->semibreadth(), output);
  }

  // optional uint32 orientation = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->orientation(), output);
  }

  // optional uint32 height = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RectangularShape)
}

::google::protobuf::uint8* RectangularShape::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RectangularShape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CartesianPosition3d center_point = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_center_point(), deterministic, target);
  }

  // required uint32 semiLength = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->semilength(), target);
  }

  // required uint32 semiBreadth = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->semibreadth(), target);
  }

  // optional uint32 orientation = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->orientation(), target);
  }

  // optional uint32 height = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RectangularShape)
  return target;
}

size_t RectangularShape::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:RectangularShape)
  size_t total_size = 0;

  if (has_semilength()) {
    // required uint32 semiLength = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->semilength());
  }

  if (has_semibreadth()) {
    // required uint32 semiBreadth = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->semibreadth());
  }

  return total_size;
}
size_t RectangularShape::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RectangularShape)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 semiLength = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->semilength());

    // required uint32 semiBreadth = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->semibreadth());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .CartesianPosition3d center_point = 1;
  if (has_center_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *center_point_);
  }

  if (_has_bits_[0 / 32] & 24u) {
    // optional uint32 orientation = 4;
    if (has_orientation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->orientation());
    }

    // optional uint32 height = 5;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RectangularShape::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RectangularShape)
  GOOGLE_DCHECK_NE(&from, this);
  const RectangularShape* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RectangularShape>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RectangularShape)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RectangularShape)
    MergeFrom(*source);
  }
}

void RectangularShape::MergeFrom(const RectangularShape& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RectangularShape)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_center_point()->::CartesianPosition3d::MergeFrom(from.center_point());
    }
    if (cached_has_bits & 0x00000002u) {
      semilength_ = from.semilength_;
    }
    if (cached_has_bits & 0x00000004u) {
      semibreadth_ = from.semibreadth_;
    }
    if (cached_has_bits & 0x00000008u) {
      orientation_ = from.orientation_;
    }
    if (cached_has_bits & 0x00000010u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RectangularShape::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RectangularShape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RectangularShape::CopyFrom(const RectangularShape& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RectangularShape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RectangularShape::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (has_center_point()) {
    if (!this->center_point_->IsInitialized()) return false;
  }
  return true;
}

void RectangularShape::Swap(RectangularShape* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RectangularShape::InternalSwap(RectangularShape* other) {
  using std::swap;
  swap(center_point_, other->center_point_);
  swap(semilength_, other->semilength_);
  swap(semibreadth_, other->semibreadth_);
  swap(orientation_, other->orientation_);
  swap(height_, other->height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RectangularShape::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReferenceDenms::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReferenceDenms::kActionIDsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReferenceDenms::ReferenceDenms()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ReferenceDenms.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReferenceDenms)
}
ReferenceDenms::ReferenceDenms(const ReferenceDenms& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      action_ids_(from.action_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ReferenceDenms)
}

void ReferenceDenms::SharedCtor() {
}

ReferenceDenms::~ReferenceDenms() {
  // @@protoc_insertion_point(destructor:ReferenceDenms)
  SharedDtor();
}

void ReferenceDenms::SharedDtor() {
}

void ReferenceDenms::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReferenceDenms::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReferenceDenms& ReferenceDenms::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ReferenceDenms.base);
  return *internal_default_instance();
}


void ReferenceDenms::Clear() {
// @@protoc_insertion_point(message_clear_start:ReferenceDenms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_ids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ReferenceDenms::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReferenceDenms)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ActionID action_IDs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_action_ids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReferenceDenms)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReferenceDenms)
  return false;
#undef DO_
}

void ReferenceDenms::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReferenceDenms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ActionID action_IDs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->action_ids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->action_ids(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReferenceDenms)
}

::google::protobuf::uint8* ReferenceDenms::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReferenceDenms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ActionID action_IDs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->action_ids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->action_ids(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReferenceDenms)
  return target;
}

size_t ReferenceDenms::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReferenceDenms)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ActionID action_IDs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->action_ids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->action_ids(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReferenceDenms::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReferenceDenms)
  GOOGLE_DCHECK_NE(&from, this);
  const ReferenceDenms* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReferenceDenms>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReferenceDenms)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReferenceDenms)
    MergeFrom(*source);
  }
}

void ReferenceDenms::MergeFrom(const ReferenceDenms& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReferenceDenms)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  action_ids_.MergeFrom(from.action_ids_);
}

void ReferenceDenms::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReferenceDenms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReferenceDenms::CopyFrom(const ReferenceDenms& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReferenceDenms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReferenceDenms::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->action_ids())) return false;
  return true;
}

void ReferenceDenms::Swap(ReferenceDenms* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReferenceDenms::InternalSwap(ReferenceDenms* other) {
  using std::swap;
  CastToBase(&action_ids_)->InternalSwap(CastToBase(&other->action_ids_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReferenceDenms::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReferencePosition::InitAsDefaultInstance() {
  ::_ReferencePosition_default_instance_._instance.get_mutable()->position_confidence_ = const_cast< ::PositionConfidenceEllipse*>(
      ::PositionConfidenceEllipse::internal_default_instance());
  ::_ReferencePosition_default_instance_._instance.get_mutable()->altitude_ = const_cast< ::Altitude*>(
      ::Altitude::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReferencePosition::kLatitudeFieldNumber;
const int ReferencePosition::kLongitudeFieldNumber;
const int ReferencePosition::kPositionConfidenceFieldNumber;
const int ReferencePosition::kAltitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReferencePosition::ReferencePosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ReferencePosition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReferencePosition)
}
ReferencePosition::ReferencePosition(const ReferencePosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position_confidence()) {
    position_confidence_ = new ::PositionConfidenceEllipse(*from.position_confidence_);
  } else {
    position_confidence_ = NULL;
  }
  if (from.has_altitude()) {
    altitude_ = new ::Altitude(*from.altitude_);
  } else {
    altitude_ = NULL;
  }
  ::memcpy(&latitude_, &from.latitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&longitude_) -
    reinterpret_cast<char*>(&latitude_)) + sizeof(longitude_));
  // @@protoc_insertion_point(copy_constructor:ReferencePosition)
}

void ReferencePosition::SharedCtor() {
  ::memset(&position_confidence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&longitude_) -
      reinterpret_cast<char*>(&position_confidence_)) + sizeof(longitude_));
}

ReferencePosition::~ReferencePosition() {
  // @@protoc_insertion_point(destructor:ReferencePosition)
  SharedDtor();
}

void ReferencePosition::SharedDtor() {
  if (this != internal_default_instance()) delete position_confidence_;
  if (this != internal_default_instance()) delete altitude_;
}

void ReferencePosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReferencePosition::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReferencePosition& ReferencePosition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_ReferencePosition.base);
  return *internal_default_instance();
}


void ReferencePosition::Clear() {
// @@protoc_insertion_point(message_clear_start:ReferencePosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(position_confidence_ != NULL);
      position_confidence_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(altitude_ != NULL);
      altitude_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&latitude_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&longitude_) -
        reinterpret_cast<char*>(&latitude_)) + sizeof(longitude_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ReferencePosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReferencePosition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 latitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 longitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PositionConfidenceEllipse position_confidence = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position_confidence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Altitude altitude = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_altitude()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReferencePosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReferencePosition)
  return false;
#undef DO_
}

void ReferencePosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReferencePosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 latitude = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->latitude(), output);
  }

  // required int64 longitude = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->longitude(), output);
  }

  // required .PositionConfidenceEllipse position_confidence = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_position_confidence(), output);
  }

  // required .Altitude altitude = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_altitude(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReferencePosition)
}

::google::protobuf::uint8* ReferencePosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReferencePosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 latitude = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->latitude(), target);
  }

  // required int64 longitude = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->longitude(), target);
  }

  // required .PositionConfidenceEllipse position_confidence = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_position_confidence(), deterministic, target);
  }

  // required .Altitude altitude = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_altitude(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReferencePosition)
  return target;
}

size_t ReferencePosition::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ReferencePosition)
  size_t total_size = 0;

  if (has_position_confidence()) {
    // required .PositionConfidenceEllipse position_confidence = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_confidence_);
  }

  if (has_altitude()) {
    // required .Altitude altitude = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *altitude_);
  }

  if (has_latitude()) {
    // required int64 latitude = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->latitude());
  }

  if (has_longitude()) {
    // required int64 longitude = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->longitude());
  }

  return total_size;
}
size_t ReferencePosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReferencePosition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required .PositionConfidenceEllipse position_confidence = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_confidence_);

    // required .Altitude altitude = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *altitude_);

    // required int64 latitude = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->latitude());

    // required int64 longitude = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->longitude());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReferencePosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReferencePosition)
  GOOGLE_DCHECK_NE(&from, this);
  const ReferencePosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReferencePosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReferencePosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReferencePosition)
    MergeFrom(*source);
  }
}

void ReferencePosition::MergeFrom(const ReferencePosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReferencePosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_position_confidence()->::PositionConfidenceEllipse::MergeFrom(from.position_confidence());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_altitude()->::Altitude::MergeFrom(from.altitude());
    }
    if (cached_has_bits & 0x00000004u) {
      latitude_ = from.latitude_;
    }
    if (cached_has_bits & 0x00000008u) {
      longitude_ = from.longitude_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReferencePosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReferencePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReferencePosition::CopyFrom(const ReferencePosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReferencePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReferencePosition::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_position_confidence()) {
    if (!this->position_confidence_->IsInitialized()) return false;
  }
  if (has_altitude()) {
    if (!this->altitude_->IsInitialized()) return false;
  }
  return true;
}

void ReferencePosition::Swap(ReferencePosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReferencePosition::InternalSwap(ReferencePosition* other) {
  using std::swap;
  swap(position_confidence_, other->position_confidence_);
  swap(altitude_, other->altitude_);
  swap(latitude_, other->latitude_);
  swap(longitude_, other->longitude_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReferencePosition::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RestrictedTypes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RestrictedTypes::kRestrictedVehiclesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RestrictedTypes::RestrictedTypes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_RestrictedTypes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RestrictedTypes)
}
RestrictedTypes::RestrictedTypes(const RestrictedTypes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      restricted_vehicles_(from.restricted_vehicles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:RestrictedTypes)
}

void RestrictedTypes::SharedCtor() {
}

RestrictedTypes::~RestrictedTypes() {
  // @@protoc_insertion_point(destructor:RestrictedTypes)
  SharedDtor();
}

void RestrictedTypes::SharedDtor() {
}

void RestrictedTypes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RestrictedTypes::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RestrictedTypes& RestrictedTypes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_RestrictedTypes.base);
  return *internal_default_instance();
}


void RestrictedTypes::Clear() {
// @@protoc_insertion_point(message_clear_start:RestrictedTypes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  restricted_vehicles_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RestrictedTypes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RestrictedTypes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .StationType restricted_vehicles = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::StationType_IsValid(value)) {
            add_restricted_vehicles(static_cast< ::StationType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 1,
                 ::StationType_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_restricted_vehicles())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RestrictedTypes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RestrictedTypes)
  return false;
#undef DO_
}

void RestrictedTypes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RestrictedTypes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .StationType restricted_vehicles = 1;
  for (int i = 0, n = this->restricted_vehicles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->restricted_vehicles(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RestrictedTypes)
}

::google::protobuf::uint8* RestrictedTypes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RestrictedTypes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .StationType restricted_vehicles = 1;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    1, this->restricted_vehicles_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RestrictedTypes)
  return target;
}

size_t RestrictedTypes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RestrictedTypes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .StationType restricted_vehicles = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->restricted_vehicles_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->restricted_vehicles(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RestrictedTypes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RestrictedTypes)
  GOOGLE_DCHECK_NE(&from, this);
  const RestrictedTypes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RestrictedTypes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RestrictedTypes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RestrictedTypes)
    MergeFrom(*source);
  }
}

void RestrictedTypes::MergeFrom(const RestrictedTypes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RestrictedTypes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  restricted_vehicles_.MergeFrom(from.restricted_vehicles_);
}

void RestrictedTypes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RestrictedTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RestrictedTypes::CopyFrom(const RestrictedTypes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RestrictedTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RestrictedTypes::IsInitialized() const {
  return true;
}

void RestrictedTypes::Swap(RestrictedTypes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RestrictedTypes::InternalSwap(RestrictedTypes* other) {
  using std::swap;
  restricted_vehicles_.InternalSwap(&other->restricted_vehicles_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RestrictedTypes::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoadSegmentReferenceID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoadSegmentReferenceID::kRegionFieldNumber;
const int RoadSegmentReferenceID::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoadSegmentReferenceID::RoadSegmentReferenceID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_RoadSegmentReferenceID.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoadSegmentReferenceID)
}
RoadSegmentReferenceID::RoadSegmentReferenceID(const RoadSegmentReferenceID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&region_, &from.region_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&region_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:RoadSegmentReferenceID)
}

void RoadSegmentReferenceID::SharedCtor() {
  ::memset(&region_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&region_)) + sizeof(id_));
}

RoadSegmentReferenceID::~RoadSegmentReferenceID() {
  // @@protoc_insertion_point(destructor:RoadSegmentReferenceID)
  SharedDtor();
}

void RoadSegmentReferenceID::SharedDtor() {
}

void RoadSegmentReferenceID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RoadSegmentReferenceID::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoadSegmentReferenceID& RoadSegmentReferenceID::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_RoadSegmentReferenceID.base);
  return *internal_default_instance();
}


void RoadSegmentReferenceID::Clear() {
// @@protoc_insertion_point(message_clear_start:RoadSegmentReferenceID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&region_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&region_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RoadSegmentReferenceID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoadSegmentReferenceID)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 region = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_region();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &region_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoadSegmentReferenceID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoadSegmentReferenceID)
  return false;
#undef DO_
}

void RoadSegmentReferenceID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoadSegmentReferenceID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 region = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->region(), output);
  }

  // required int64 id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RoadSegmentReferenceID)
}

::google::protobuf::uint8* RoadSegmentReferenceID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoadSegmentReferenceID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 region = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->region(), target);
  }

  // required int64 id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoadSegmentReferenceID)
  return target;
}

size_t RoadSegmentReferenceID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoadSegmentReferenceID)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 id = 2;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }
  // optional int64 region = 1;
  if (has_region()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->region());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoadSegmentReferenceID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoadSegmentReferenceID)
  GOOGLE_DCHECK_NE(&from, this);
  const RoadSegmentReferenceID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoadSegmentReferenceID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoadSegmentReferenceID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoadSegmentReferenceID)
    MergeFrom(*source);
  }
}

void RoadSegmentReferenceID::MergeFrom(const RoadSegmentReferenceID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoadSegmentReferenceID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      region_ = from.region_;
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RoadSegmentReferenceID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoadSegmentReferenceID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoadSegmentReferenceID::CopyFrom(const RoadSegmentReferenceID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoadSegmentReferenceID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoadSegmentReferenceID::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void RoadSegmentReferenceID::Swap(RoadSegmentReferenceID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoadSegmentReferenceID::InternalSwap(RoadSegmentReferenceID* other) {
  using std::swap;
  swap(region_, other->region_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RoadSegmentReferenceID::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Shape::InitAsDefaultInstance() {
  ::_Shape_default_instance_.rectangular_ = const_cast< ::RectangularShape*>(
      ::RectangularShape::internal_default_instance());
  ::_Shape_default_instance_.circular_ = const_cast< ::CircularShape*>(
      ::CircularShape::internal_default_instance());
  ::_Shape_default_instance_.polygonal_ = const_cast< ::PolygonalShape*>(
      ::PolygonalShape::internal_default_instance());
  ::_Shape_default_instance_.elliptical_ = const_cast< ::EllipticalShape*>(
      ::EllipticalShape::internal_default_instance());
  ::_Shape_default_instance_.radial_ = const_cast< ::RadialShape*>(
      ::RadialShape::internal_default_instance());
  ::_Shape_default_instance_.radialshapes_ = const_cast< ::RadialShapes*>(
      ::RadialShapes::internal_default_instance());
}
void Shape::set_allocated_rectangular(::RectangularShape* rectangular) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_shape();
  if (rectangular) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rectangular = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rectangular, submessage_arena);
    }
    set_has_rectangular();
    shape_.rectangular_ = rectangular;
  }
  // @@protoc_insertion_point(field_set_allocated:Shape.rectangular)
}
void Shape::set_allocated_circular(::CircularShape* circular) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_shape();
  if (circular) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      circular = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, circular, submessage_arena);
    }
    set_has_circular();
    shape_.circular_ = circular;
  }
  // @@protoc_insertion_point(field_set_allocated:Shape.circular)
}
void Shape::set_allocated_polygonal(::PolygonalShape* polygonal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_shape();
  if (polygonal) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      polygonal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, polygonal, submessage_arena);
    }
    set_has_polygonal();
    shape_.polygonal_ = polygonal;
  }
  // @@protoc_insertion_point(field_set_allocated:Shape.polygonal)
}
void Shape::set_allocated_elliptical(::EllipticalShape* elliptical) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_shape();
  if (elliptical) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      elliptical = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, elliptical, submessage_arena);
    }
    set_has_elliptical();
    shape_.elliptical_ = elliptical;
  }
  // @@protoc_insertion_point(field_set_allocated:Shape.elliptical)
}
void Shape::set_allocated_radial(::RadialShape* radial) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_shape();
  if (radial) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      radial = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, radial, submessage_arena);
    }
    set_has_radial();
    shape_.radial_ = radial;
  }
  // @@protoc_insertion_point(field_set_allocated:Shape.radial)
}
void Shape::set_allocated_radialshapes(::RadialShapes* radialshapes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_shape();
  if (radialshapes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      radialshapes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, radialshapes, submessage_arena);
    }
    set_has_radialshapes();
    shape_.radialshapes_ = radialshapes;
  }
  // @@protoc_insertion_point(field_set_allocated:Shape.radialShapes)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shape::kRectangularFieldNumber;
const int Shape::kCircularFieldNumber;
const int Shape::kPolygonalFieldNumber;
const int Shape::kEllipticalFieldNumber;
const int Shape::kRadialFieldNumber;
const int Shape::kRadialShapesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shape::Shape()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_Shape.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Shape)
}
Shape::Shape(const Shape& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_shape();
  switch (from.shape_case()) {
    case kRectangular: {
      mutable_rectangular()->::RectangularShape::MergeFrom(from.rectangular());
      break;
    }
    case kCircular: {
      mutable_circular()->::CircularShape::MergeFrom(from.circular());
      break;
    }
    case kPolygonal: {
      mutable_polygonal()->::PolygonalShape::MergeFrom(from.polygonal());
      break;
    }
    case kElliptical: {
      mutable_elliptical()->::EllipticalShape::MergeFrom(from.elliptical());
      break;
    }
    case kRadial: {
      mutable_radial()->::RadialShape::MergeFrom(from.radial());
      break;
    }
    case kRadialShapes: {
      mutable_radialshapes()->::RadialShapes::MergeFrom(from.radialshapes());
      break;
    }
    case SHAPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Shape)
}

void Shape::SharedCtor() {
  clear_has_shape();
}

Shape::~Shape() {
  // @@protoc_insertion_point(destructor:Shape)
  SharedDtor();
}

void Shape::SharedDtor() {
  if (has_shape()) {
    clear_shape();
  }
}

void Shape::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Shape::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Shape& Shape::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_Shape.base);
  return *internal_default_instance();
}


void Shape::clear_shape() {
// @@protoc_insertion_point(one_of_clear_start:Shape)
  switch (shape_case()) {
    case kRectangular: {
      delete shape_.rectangular_;
      break;
    }
    case kCircular: {
      delete shape_.circular_;
      break;
    }
    case kPolygonal: {
      delete shape_.polygonal_;
      break;
    }
    case kElliptical: {
      delete shape_.elliptical_;
      break;
    }
    case kRadial: {
      delete shape_.radial_;
      break;
    }
    case kRadialShapes: {
      delete shape_.radialshapes_;
      break;
    }
    case SHAPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SHAPE_NOT_SET;
}


void Shape::Clear() {
// @@protoc_insertion_point(message_clear_start:Shape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_shape();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Shape::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Shape)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .RectangularShape rectangular = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rectangular()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CircularShape circular = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_circular()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PolygonalShape polygonal = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_polygonal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .EllipticalShape elliptical = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_elliptical()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .RadialShape radial = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_radial()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .RadialShapes radialShapes = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_radialshapes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Shape)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Shape)
  return false;
#undef DO_
}

void Shape::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Shape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (shape_case()) {
    case kRectangular:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_rectangular(), output);
      break;
    case kCircular:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_circular(), output);
      break;
    case kPolygonal:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_polygonal(), output);
      break;
    case kElliptical:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_elliptical(), output);
      break;
    case kRadial:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        5, this->_internal_radial(), output);
      break;
    case kRadialShapes:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        6, this->_internal_radialshapes(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Shape)
}

::google::protobuf::uint8* Shape::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Shape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (shape_case()) {
    case kRectangular:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          1, this->_internal_rectangular(), deterministic, target);
      break;
    case kCircular:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_circular(), deterministic, target);
      break;
    case kPolygonal:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, this->_internal_polygonal(), deterministic, target);
      break;
    case kElliptical:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_elliptical(), deterministic, target);
      break;
    case kRadial:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          5, this->_internal_radial(), deterministic, target);
      break;
    case kRadialShapes:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          6, this->_internal_radialshapes(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Shape)
  return target;
}

size_t Shape::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Shape)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (shape_case()) {
    // optional .RectangularShape rectangular = 1;
    case kRectangular: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *shape_.rectangular_);
      break;
    }
    // optional .CircularShape circular = 2;
    case kCircular: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *shape_.circular_);
      break;
    }
    // optional .PolygonalShape polygonal = 3;
    case kPolygonal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *shape_.polygonal_);
      break;
    }
    // optional .EllipticalShape elliptical = 4;
    case kElliptical: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *shape_.elliptical_);
      break;
    }
    // optional .RadialShape radial = 5;
    case kRadial: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *shape_.radial_);
      break;
    }
    // optional .RadialShapes radialShapes = 6;
    case kRadialShapes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *shape_.radialshapes_);
      break;
    }
    case SHAPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Shape::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Shape)
  GOOGLE_DCHECK_NE(&from, this);
  const Shape* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shape>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Shape)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Shape)
    MergeFrom(*source);
  }
}

void Shape::MergeFrom(const Shape& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Shape)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.shape_case()) {
    case kRectangular: {
      mutable_rectangular()->::RectangularShape::MergeFrom(from.rectangular());
      break;
    }
    case kCircular: {
      mutable_circular()->::CircularShape::MergeFrom(from.circular());
      break;
    }
    case kPolygonal: {
      mutable_polygonal()->::PolygonalShape::MergeFrom(from.polygonal());
      break;
    }
    case kElliptical: {
      mutable_elliptical()->::EllipticalShape::MergeFrom(from.elliptical());
      break;
    }
    case kRadial: {
      mutable_radial()->::RadialShape::MergeFrom(from.radial());
      break;
    }
    case kRadialShapes: {
      mutable_radialshapes()->::RadialShapes::MergeFrom(from.radialshapes());
      break;
    }
    case SHAPE_NOT_SET: {
      break;
    }
  }
}

void Shape::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Shape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shape::CopyFrom(const Shape& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Shape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Shape::IsInitialized() const {
  switch (shape_case()) {
    case kRectangular: {
      if (has_rectangular()) {
        if (!this->rectangular().IsInitialized()) return false;
      }
      break;
    }
    case kCircular: {
      if (has_circular()) {
        if (!this->circular().IsInitialized()) return false;
      }
      break;
    }
    case kPolygonal: {
      if (has_polygonal()) {
        if (!this->polygonal().IsInitialized()) return false;
      }
      break;
    }
    case kElliptical: {
      if (has_elliptical()) {
        if (!this->elliptical().IsInitialized()) return false;
      }
      break;
    }
    case kRadial: {
      if (has_radial()) {
        if (!this->radial().IsInitialized()) return false;
      }
      break;
    }
    case kRadialShapes: {
      if (has_radialshapes()) {
        if (!this->radialshapes().IsInitialized()) return false;
      }
      break;
    }
    case SHAPE_NOT_SET: {
      break;
    }
  }
  return true;
}

void Shape::Swap(Shape* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shape::InternalSwap(Shape* other) {
  using std::swap;
  swap(shape_, other->shape_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Shape::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Speed::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Speed::kValueFieldNumber;
const int Speed::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Speed::Speed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_Speed.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Speed)
}
Speed::Speed(const Speed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&confidence_) -
    reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
  // @@protoc_insertion_point(copy_constructor:Speed)
}

void Speed::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confidence_) -
      reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
}

Speed::~Speed() {
  // @@protoc_insertion_point(destructor:Speed)
  SharedDtor();
}

void Speed::SharedDtor() {
}

void Speed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Speed::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Speed& Speed::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_Speed.base);
  return *internal_default_instance();
}


void Speed::Clear() {
// @@protoc_insertion_point(message_clear_start:Speed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&confidence_) -
        reinterpret_cast<char*>(&value_)) + sizeof(confidence_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Speed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Speed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_confidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Speed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Speed)
  return false;
#undef DO_
}

void Speed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Speed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  // required uint32 confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->confidence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Speed)
}

::google::protobuf::uint8* Speed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Speed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  // required uint32 confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->confidence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Speed)
  return target;
}

size_t Speed::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Speed)
  size_t total_size = 0;

  if (has_value()) {
    // required int32 value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  if (has_confidence()) {
    // required uint32 confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->confidence());
  }

  return total_size;
}
size_t Speed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Speed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());

    // required uint32 confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->confidence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Speed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Speed)
  GOOGLE_DCHECK_NE(&from, this);
  const Speed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Speed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Speed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Speed)
    MergeFrom(*source);
  }
}

void Speed::MergeFrom(const Speed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Speed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000002u) {
      confidence_ = from.confidence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Speed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Speed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Speed::CopyFrom(const Speed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Speed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Speed::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Speed::Swap(Speed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Speed::InternalSwap(Speed* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(confidence_, other->confidence_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Speed::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleIdentification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleIdentification::kWMInumberFieldNumber;
const int VehicleIdentification::kVDSFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleIdentification::VehicleIdentification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VehicleIdentification.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:VehicleIdentification)
}
VehicleIdentification::VehicleIdentification(const VehicleIdentification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  wminumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_wminumber()) {
    wminumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wminumber_);
  }
  vds_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vds()) {
    vds_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vds_);
  }
  // @@protoc_insertion_point(copy_constructor:VehicleIdentification)
}

void VehicleIdentification::SharedCtor() {
  wminumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vds_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VehicleIdentification::~VehicleIdentification() {
  // @@protoc_insertion_point(destructor:VehicleIdentification)
  SharedDtor();
}

void VehicleIdentification::SharedDtor() {
  wminumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vds_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VehicleIdentification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleIdentification::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleIdentification& VehicleIdentification::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VehicleIdentification.base);
  return *internal_default_instance();
}


void VehicleIdentification::Clear() {
// @@protoc_insertion_point(message_clear_start:VehicleIdentification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      wminumber_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      vds_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VehicleIdentification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VehicleIdentification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string WMInumber = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wminumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->wminumber().data(), static_cast<int>(this->wminumber().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "VehicleIdentification.WMInumber");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string VDS = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vds()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vds().data(), static_cast<int>(this->vds().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "VehicleIdentification.VDS");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VehicleIdentification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VehicleIdentification)
  return false;
#undef DO_
}

void VehicleIdentification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VehicleIdentification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string WMInumber = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wminumber().data(), static_cast<int>(this->wminumber().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "VehicleIdentification.WMInumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->wminumber(), output);
  }

  // optional string VDS = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vds().data(), static_cast<int>(this->vds().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "VehicleIdentification.VDS");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->vds(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VehicleIdentification)
}

::google::protobuf::uint8* VehicleIdentification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VehicleIdentification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string WMInumber = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wminumber().data(), static_cast<int>(this->wminumber().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "VehicleIdentification.WMInumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->wminumber(), target);
  }

  // optional string VDS = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vds().data(), static_cast<int>(this->vds().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "VehicleIdentification.VDS");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->vds(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VehicleIdentification)
  return target;
}

size_t VehicleIdentification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VehicleIdentification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string WMInumber = 1;
    if (has_wminumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->wminumber());
    }

    // optional string VDS = 2;
    if (has_vds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vds());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleIdentification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VehicleIdentification)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleIdentification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleIdentification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VehicleIdentification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VehicleIdentification)
    MergeFrom(*source);
  }
}

void VehicleIdentification::MergeFrom(const VehicleIdentification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VehicleIdentification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_wminumber();
      wminumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wminumber_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_vds();
      vds_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vds_);
    }
  }
}

void VehicleIdentification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VehicleIdentification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleIdentification::CopyFrom(const VehicleIdentification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VehicleIdentification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleIdentification::IsInitialized() const {
  return true;
}

void VehicleIdentification::Swap(VehicleIdentification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleIdentification::InternalSwap(VehicleIdentification* other) {
  using std::swap;
  wminumber_.Swap(&other->wminumber_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  vds_.Swap(&other->vds_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleIdentification::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleLength::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleLength::kValueFieldNumber;
const int VehicleLength::kVehLenConfIndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleLength::VehicleLength()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VehicleLength.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:VehicleLength)
}
VehicleLength::VehicleLength(const VehicleLength& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&veh_len_conf_ind_) -
    reinterpret_cast<char*>(&value_)) + sizeof(veh_len_conf_ind_));
  // @@protoc_insertion_point(copy_constructor:VehicleLength)
}

void VehicleLength::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&veh_len_conf_ind_) -
      reinterpret_cast<char*>(&value_)) + sizeof(veh_len_conf_ind_));
}

VehicleLength::~VehicleLength() {
  // @@protoc_insertion_point(destructor:VehicleLength)
  SharedDtor();
}

void VehicleLength::SharedDtor() {
}

void VehicleLength::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleLength::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleLength& VehicleLength::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VehicleLength.base);
  return *internal_default_instance();
}


void VehicleLength::Clear() {
// @@protoc_insertion_point(message_clear_start:VehicleLength)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&veh_len_conf_ind_) -
        reinterpret_cast<char*>(&value_)) + sizeof(veh_len_conf_ind_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VehicleLength::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VehicleLength)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .VehicleLengthConfidenceIndication veh_len_conf_ind = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::VehicleLengthConfidenceIndication_IsValid(value)) {
            set_veh_len_conf_ind(static_cast< ::VehicleLengthConfidenceIndication >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VehicleLength)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VehicleLength)
  return false;
#undef DO_
}

void VehicleLength::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VehicleLength)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  // optional .VehicleLengthConfidenceIndication veh_len_conf_ind = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->veh_len_conf_ind(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VehicleLength)
}

::google::protobuf::uint8* VehicleLength::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VehicleLength)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  // optional .VehicleLengthConfidenceIndication veh_len_conf_ind = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->veh_len_conf_ind(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VehicleLength)
  return target;
}

size_t VehicleLength::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VehicleLength)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 value = 1;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }
  // optional .VehicleLengthConfidenceIndication veh_len_conf_ind = 2;
  if (has_veh_len_conf_ind()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->veh_len_conf_ind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleLength::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VehicleLength)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleLength* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleLength>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VehicleLength)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VehicleLength)
    MergeFrom(*source);
  }
}

void VehicleLength::MergeFrom(const VehicleLength& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VehicleLength)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000002u) {
      veh_len_conf_ind_ = from.veh_len_conf_ind_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VehicleLength::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VehicleLength)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleLength::CopyFrom(const VehicleLength& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VehicleLength)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleLength::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void VehicleLength::Swap(VehicleLength* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleLength::InternalSwap(VehicleLength* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(veh_len_conf_ind_, other->veh_len_conf_ind_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleLength::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleWidth::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleWidth::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleWidth::VehicleWidth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VehicleWidth.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:VehicleWidth)
}
VehicleWidth::VehicleWidth(const VehicleWidth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:VehicleWidth)
}

void VehicleWidth::SharedCtor() {
  value_ = 0;
}

VehicleWidth::~VehicleWidth() {
  // @@protoc_insertion_point(destructor:VehicleWidth)
  SharedDtor();
}

void VehicleWidth::SharedDtor() {
}

void VehicleWidth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleWidth::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleWidth& VehicleWidth::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VehicleWidth.base);
  return *internal_default_instance();
}


void VehicleWidth::Clear() {
// @@protoc_insertion_point(message_clear_start:VehicleWidth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VehicleWidth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VehicleWidth)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VehicleWidth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VehicleWidth)
  return false;
#undef DO_
}

void VehicleWidth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VehicleWidth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VehicleWidth)
}

::google::protobuf::uint8* VehicleWidth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VehicleWidth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VehicleWidth)
  return target;
}

size_t VehicleWidth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VehicleWidth)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 value = 1;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleWidth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VehicleWidth)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleWidth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleWidth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VehicleWidth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VehicleWidth)
    MergeFrom(*source);
  }
}

void VehicleWidth::MergeFrom(const VehicleWidth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VehicleWidth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    set_value(from.value());
  }
}

void VehicleWidth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VehicleWidth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleWidth::CopyFrom(const VehicleWidth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VehicleWidth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleWidth::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void VehicleWidth::Swap(VehicleWidth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleWidth::InternalSwap(VehicleWidth* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleWidth::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VelocityCartesian::InitAsDefaultInstance() {
  ::_VelocityCartesian_default_instance_._instance.get_mutable()->xvelocity_ = const_cast< ::VelocityComponent*>(
      ::VelocityComponent::internal_default_instance());
  ::_VelocityCartesian_default_instance_._instance.get_mutable()->yvelocity_ = const_cast< ::VelocityComponent*>(
      ::VelocityComponent::internal_default_instance());
  ::_VelocityCartesian_default_instance_._instance.get_mutable()->zvelocity_ = const_cast< ::VelocityComponent*>(
      ::VelocityComponent::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VelocityCartesian::kXVelocityFieldNumber;
const int VelocityCartesian::kYVelocityFieldNumber;
const int VelocityCartesian::kZVelocityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VelocityCartesian::VelocityCartesian()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VelocityCartesian.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:VelocityCartesian)
}
VelocityCartesian::VelocityCartesian(const VelocityCartesian& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_xvelocity()) {
    xvelocity_ = new ::VelocityComponent(*from.xvelocity_);
  } else {
    xvelocity_ = NULL;
  }
  if (from.has_yvelocity()) {
    yvelocity_ = new ::VelocityComponent(*from.yvelocity_);
  } else {
    yvelocity_ = NULL;
  }
  if (from.has_zvelocity()) {
    zvelocity_ = new ::VelocityComponent(*from.zvelocity_);
  } else {
    zvelocity_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:VelocityCartesian)
}

void VelocityCartesian::SharedCtor() {
  ::memset(&xvelocity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zvelocity_) -
      reinterpret_cast<char*>(&xvelocity_)) + sizeof(zvelocity_));
}

VelocityCartesian::~VelocityCartesian() {
  // @@protoc_insertion_point(destructor:VelocityCartesian)
  SharedDtor();
}

void VelocityCartesian::SharedDtor() {
  if (this != internal_default_instance()) delete xvelocity_;
  if (this != internal_default_instance()) delete yvelocity_;
  if (this != internal_default_instance()) delete zvelocity_;
}

void VelocityCartesian::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VelocityCartesian::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VelocityCartesian& VelocityCartesian::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VelocityCartesian.base);
  return *internal_default_instance();
}


void VelocityCartesian::Clear() {
// @@protoc_insertion_point(message_clear_start:VelocityCartesian)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(xvelocity_ != NULL);
      xvelocity_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(yvelocity_ != NULL);
      yvelocity_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(zvelocity_ != NULL);
      zvelocity_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VelocityCartesian::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VelocityCartesian)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .VelocityComponent xVelocity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_xvelocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .VelocityComponent yVelocity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_yvelocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .VelocityComponent zVelocity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_zvelocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VelocityCartesian)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VelocityCartesian)
  return false;
#undef DO_
}

void VelocityCartesian::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VelocityCartesian)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .VelocityComponent xVelocity = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_xvelocity(), output);
  }

  // required .VelocityComponent yVelocity = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_yvelocity(), output);
  }

  // optional .VelocityComponent zVelocity = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_zvelocity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VelocityCartesian)
}

::google::protobuf::uint8* VelocityCartesian::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VelocityCartesian)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .VelocityComponent xVelocity = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_xvelocity(), deterministic, target);
  }

  // required .VelocityComponent yVelocity = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_yvelocity(), deterministic, target);
  }

  // optional .VelocityComponent zVelocity = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_zvelocity(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VelocityCartesian)
  return target;
}

size_t VelocityCartesian::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:VelocityCartesian)
  size_t total_size = 0;

  if (has_xvelocity()) {
    // required .VelocityComponent xVelocity = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *xvelocity_);
  }

  if (has_yvelocity()) {
    // required .VelocityComponent yVelocity = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *yvelocity_);
  }

  return total_size;
}
size_t VelocityCartesian::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VelocityCartesian)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .VelocityComponent xVelocity = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *xvelocity_);

    // required .VelocityComponent yVelocity = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *yvelocity_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .VelocityComponent zVelocity = 3;
  if (has_zvelocity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *zvelocity_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VelocityCartesian::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VelocityCartesian)
  GOOGLE_DCHECK_NE(&from, this);
  const VelocityCartesian* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VelocityCartesian>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VelocityCartesian)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VelocityCartesian)
    MergeFrom(*source);
  }
}

void VelocityCartesian::MergeFrom(const VelocityCartesian& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VelocityCartesian)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_xvelocity()->::VelocityComponent::MergeFrom(from.xvelocity());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_yvelocity()->::VelocityComponent::MergeFrom(from.yvelocity());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_zvelocity()->::VelocityComponent::MergeFrom(from.zvelocity());
    }
  }
}

void VelocityCartesian::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VelocityCartesian)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VelocityCartesian::CopyFrom(const VelocityCartesian& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VelocityCartesian)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VelocityCartesian::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_xvelocity()) {
    if (!this->xvelocity_->IsInitialized()) return false;
  }
  if (has_yvelocity()) {
    if (!this->yvelocity_->IsInitialized()) return false;
  }
  if (has_zvelocity()) {
    if (!this->zvelocity_->IsInitialized()) return false;
  }
  return true;
}

void VelocityCartesian::Swap(VelocityCartesian* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VelocityCartesian::InternalSwap(VelocityCartesian* other) {
  using std::swap;
  swap(xvelocity_, other->xvelocity_);
  swap(yvelocity_, other->yvelocity_);
  swap(zvelocity_, other->zvelocity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VelocityCartesian::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VelocityComponent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VelocityComponent::kVelCompValueFieldNumber;
const int VelocityComponent::kSpeedConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VelocityComponent::VelocityComponent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VelocityComponent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:VelocityComponent)
}
VelocityComponent::VelocityComponent(const VelocityComponent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vel_comp_value_, &from.vel_comp_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&speed_confidence_) -
    reinterpret_cast<char*>(&vel_comp_value_)) + sizeof(speed_confidence_));
  // @@protoc_insertion_point(copy_constructor:VelocityComponent)
}

void VelocityComponent::SharedCtor() {
  ::memset(&vel_comp_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_confidence_) -
      reinterpret_cast<char*>(&vel_comp_value_)) + sizeof(speed_confidence_));
}

VelocityComponent::~VelocityComponent() {
  // @@protoc_insertion_point(destructor:VelocityComponent)
  SharedDtor();
}

void VelocityComponent::SharedDtor() {
}

void VelocityComponent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VelocityComponent::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VelocityComponent& VelocityComponent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VelocityComponent.base);
  return *internal_default_instance();
}


void VelocityComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:VelocityComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&vel_comp_value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&speed_confidence_) -
        reinterpret_cast<char*>(&vel_comp_value_)) + sizeof(speed_confidence_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VelocityComponent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VelocityComponent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 vel_comp_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_vel_comp_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vel_comp_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 speed_confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_speed_confidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &speed_confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VelocityComponent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VelocityComponent)
  return false;
#undef DO_
}

void VelocityComponent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VelocityComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 vel_comp_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->vel_comp_value(), output);
  }

  // required uint32 speed_confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->speed_confidence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VelocityComponent)
}

::google::protobuf::uint8* VelocityComponent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VelocityComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 vel_comp_value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->vel_comp_value(), target);
  }

  // required uint32 speed_confidence = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->speed_confidence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VelocityComponent)
  return target;
}

size_t VelocityComponent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:VelocityComponent)
  size_t total_size = 0;

  if (has_vel_comp_value()) {
    // required int32 vel_comp_value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vel_comp_value());
  }

  if (has_speed_confidence()) {
    // required uint32 speed_confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->speed_confidence());
  }

  return total_size;
}
size_t VelocityComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VelocityComponent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 vel_comp_value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vel_comp_value());

    // required uint32 speed_confidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->speed_confidence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VelocityComponent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VelocityComponent)
  GOOGLE_DCHECK_NE(&from, this);
  const VelocityComponent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VelocityComponent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VelocityComponent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VelocityComponent)
    MergeFrom(*source);
  }
}

void VelocityComponent::MergeFrom(const VelocityComponent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VelocityComponent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      vel_comp_value_ = from.vel_comp_value_;
    }
    if (cached_has_bits & 0x00000002u) {
      speed_confidence_ = from.speed_confidence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VelocityComponent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VelocityComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VelocityComponent::CopyFrom(const VelocityComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VelocityComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VelocityComponent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void VelocityComponent::Swap(VelocityComponent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VelocityComponent::InternalSwap(VelocityComponent* other) {
  using std::swap;
  swap(vel_comp_value_, other->vel_comp_value_);
  swap(speed_confidence_, other->speed_confidence_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VelocityComponent::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VelocityPolarWithZ::InitAsDefaultInstance() {
  ::_VelocityPolarWithZ_default_instance_._instance.get_mutable()->velocitymagnitude_ = const_cast< ::Speed*>(
      ::Speed::internal_default_instance());
  ::_VelocityPolarWithZ_default_instance_._instance.get_mutable()->velocitydirection_ = const_cast< ::CartesianAngle*>(
      ::CartesianAngle::internal_default_instance());
  ::_VelocityPolarWithZ_default_instance_._instance.get_mutable()->zvelocity_ = const_cast< ::VelocityComponent*>(
      ::VelocityComponent::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VelocityPolarWithZ::kVelocityMagnitudeFieldNumber;
const int VelocityPolarWithZ::kVelocityDirectionFieldNumber;
const int VelocityPolarWithZ::kZVelocityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VelocityPolarWithZ::VelocityPolarWithZ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VelocityPolarWithZ.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:VelocityPolarWithZ)
}
VelocityPolarWithZ::VelocityPolarWithZ(const VelocityPolarWithZ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_velocitymagnitude()) {
    velocitymagnitude_ = new ::Speed(*from.velocitymagnitude_);
  } else {
    velocitymagnitude_ = NULL;
  }
  if (from.has_velocitydirection()) {
    velocitydirection_ = new ::CartesianAngle(*from.velocitydirection_);
  } else {
    velocitydirection_ = NULL;
  }
  if (from.has_zvelocity()) {
    zvelocity_ = new ::VelocityComponent(*from.zvelocity_);
  } else {
    zvelocity_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:VelocityPolarWithZ)
}

void VelocityPolarWithZ::SharedCtor() {
  ::memset(&velocitymagnitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zvelocity_) -
      reinterpret_cast<char*>(&velocitymagnitude_)) + sizeof(zvelocity_));
}

VelocityPolarWithZ::~VelocityPolarWithZ() {
  // @@protoc_insertion_point(destructor:VelocityPolarWithZ)
  SharedDtor();
}

void VelocityPolarWithZ::SharedDtor() {
  if (this != internal_default_instance()) delete velocitymagnitude_;
  if (this != internal_default_instance()) delete velocitydirection_;
  if (this != internal_default_instance()) delete zvelocity_;
}

void VelocityPolarWithZ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VelocityPolarWithZ::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VelocityPolarWithZ& VelocityPolarWithZ::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VelocityPolarWithZ.base);
  return *internal_default_instance();
}


void VelocityPolarWithZ::Clear() {
// @@protoc_insertion_point(message_clear_start:VelocityPolarWithZ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(velocitymagnitude_ != NULL);
      velocitymagnitude_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(velocitydirection_ != NULL);
      velocitydirection_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(zvelocity_ != NULL);
      zvelocity_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VelocityPolarWithZ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VelocityPolarWithZ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Speed velocityMagnitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_velocitymagnitude()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .CartesianAngle velocityDirection = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_velocitydirection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .VelocityComponent zVelocity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_zvelocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VelocityPolarWithZ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VelocityPolarWithZ)
  return false;
#undef DO_
}

void VelocityPolarWithZ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VelocityPolarWithZ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Speed velocityMagnitude = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_velocitymagnitude(), output);
  }

  // required .CartesianAngle velocityDirection = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_velocitydirection(), output);
  }

  // optional .VelocityComponent zVelocity = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_zvelocity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VelocityPolarWithZ)
}

::google::protobuf::uint8* VelocityPolarWithZ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VelocityPolarWithZ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Speed velocityMagnitude = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_velocitymagnitude(), deterministic, target);
  }

  // required .CartesianAngle velocityDirection = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_velocitydirection(), deterministic, target);
  }

  // optional .VelocityComponent zVelocity = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_zvelocity(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VelocityPolarWithZ)
  return target;
}

size_t VelocityPolarWithZ::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:VelocityPolarWithZ)
  size_t total_size = 0;

  if (has_velocitymagnitude()) {
    // required .Speed velocityMagnitude = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *velocitymagnitude_);
  }

  if (has_velocitydirection()) {
    // required .CartesianAngle velocityDirection = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *velocitydirection_);
  }

  return total_size;
}
size_t VelocityPolarWithZ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VelocityPolarWithZ)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .Speed velocityMagnitude = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *velocitymagnitude_);

    // required .CartesianAngle velocityDirection = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *velocitydirection_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .VelocityComponent zVelocity = 3;
  if (has_zvelocity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *zvelocity_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VelocityPolarWithZ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VelocityPolarWithZ)
  GOOGLE_DCHECK_NE(&from, this);
  const VelocityPolarWithZ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VelocityPolarWithZ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VelocityPolarWithZ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VelocityPolarWithZ)
    MergeFrom(*source);
  }
}

void VelocityPolarWithZ::MergeFrom(const VelocityPolarWithZ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VelocityPolarWithZ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_velocitymagnitude()->::Speed::MergeFrom(from.velocitymagnitude());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_velocitydirection()->::CartesianAngle::MergeFrom(from.velocitydirection());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_zvelocity()->::VelocityComponent::MergeFrom(from.zvelocity());
    }
  }
}

void VelocityPolarWithZ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VelocityPolarWithZ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VelocityPolarWithZ::CopyFrom(const VelocityPolarWithZ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VelocityPolarWithZ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VelocityPolarWithZ::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_velocitymagnitude()) {
    if (!this->velocitymagnitude_->IsInitialized()) return false;
  }
  if (has_velocitydirection()) {
    if (!this->velocitydirection_->IsInitialized()) return false;
  }
  if (has_zvelocity()) {
    if (!this->zvelocity_->IsInitialized()) return false;
  }
  return true;
}

void VelocityPolarWithZ::Swap(VelocityPolarWithZ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VelocityPolarWithZ::InternalSwap(VelocityPolarWithZ* other) {
  using std::swap;
  swap(velocitymagnitude_, other->velocitymagnitude_);
  swap(velocitydirection_, other->velocitydirection_);
  swap(zvelocity_, other->zvelocity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VelocityPolarWithZ::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Velocity3dWithConfidence::InitAsDefaultInstance() {
  ::_Velocity3dWithConfidence_default_instance_.polarvelocity_ = const_cast< ::VelocityPolarWithZ*>(
      ::VelocityPolarWithZ::internal_default_instance());
  ::_Velocity3dWithConfidence_default_instance_.cartesianvelocity_ = const_cast< ::VelocityCartesian*>(
      ::VelocityCartesian::internal_default_instance());
}
void Velocity3dWithConfidence::set_allocated_polarvelocity(::VelocityPolarWithZ* polarvelocity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_velocity();
  if (polarvelocity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      polarvelocity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, polarvelocity, submessage_arena);
    }
    set_has_polarvelocity();
    velocity_.polarvelocity_ = polarvelocity;
  }
  // @@protoc_insertion_point(field_set_allocated:Velocity3dWithConfidence.polarVelocity)
}
void Velocity3dWithConfidence::set_allocated_cartesianvelocity(::VelocityCartesian* cartesianvelocity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_velocity();
  if (cartesianvelocity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cartesianvelocity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cartesianvelocity, submessage_arena);
    }
    set_has_cartesianvelocity();
    velocity_.cartesianvelocity_ = cartesianvelocity;
  }
  // @@protoc_insertion_point(field_set_allocated:Velocity3dWithConfidence.cartesianVelocity)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Velocity3dWithConfidence::kPolarVelocityFieldNumber;
const int Velocity3dWithConfidence::kCartesianVelocityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Velocity3dWithConfidence::Velocity3dWithConfidence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_Velocity3dWithConfidence.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Velocity3dWithConfidence)
}
Velocity3dWithConfidence::Velocity3dWithConfidence(const Velocity3dWithConfidence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_velocity();
  switch (from.velocity_case()) {
    case kPolarVelocity: {
      mutable_polarvelocity()->::VelocityPolarWithZ::MergeFrom(from.polarvelocity());
      break;
    }
    case kCartesianVelocity: {
      mutable_cartesianvelocity()->::VelocityCartesian::MergeFrom(from.cartesianvelocity());
      break;
    }
    case VELOCITY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Velocity3dWithConfidence)
}

void Velocity3dWithConfidence::SharedCtor() {
  clear_has_velocity();
}

Velocity3dWithConfidence::~Velocity3dWithConfidence() {
  // @@protoc_insertion_point(destructor:Velocity3dWithConfidence)
  SharedDtor();
}

void Velocity3dWithConfidence::SharedDtor() {
  if (has_velocity()) {
    clear_velocity();
  }
}

void Velocity3dWithConfidence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Velocity3dWithConfidence::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Velocity3dWithConfidence& Velocity3dWithConfidence::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_Velocity3dWithConfidence.base);
  return *internal_default_instance();
}


void Velocity3dWithConfidence::clear_velocity() {
// @@protoc_insertion_point(one_of_clear_start:Velocity3dWithConfidence)
  switch (velocity_case()) {
    case kPolarVelocity: {
      delete velocity_.polarvelocity_;
      break;
    }
    case kCartesianVelocity: {
      delete velocity_.cartesianvelocity_;
      break;
    }
    case VELOCITY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VELOCITY_NOT_SET;
}


void Velocity3dWithConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:Velocity3dWithConfidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_velocity();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Velocity3dWithConfidence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Velocity3dWithConfidence)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .VelocityPolarWithZ polarVelocity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_polarvelocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .VelocityCartesian cartesianVelocity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cartesianvelocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Velocity3dWithConfidence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Velocity3dWithConfidence)
  return false;
#undef DO_
}

void Velocity3dWithConfidence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Velocity3dWithConfidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (velocity_case()) {
    case kPolarVelocity:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_polarvelocity(), output);
      break;
    case kCartesianVelocity:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_cartesianvelocity(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Velocity3dWithConfidence)
}

::google::protobuf::uint8* Velocity3dWithConfidence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Velocity3dWithConfidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (velocity_case()) {
    case kPolarVelocity:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          1, this->_internal_polarvelocity(), deterministic, target);
      break;
    case kCartesianVelocity:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_cartesianvelocity(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Velocity3dWithConfidence)
  return target;
}

size_t Velocity3dWithConfidence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Velocity3dWithConfidence)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (velocity_case()) {
    // optional .VelocityPolarWithZ polarVelocity = 1;
    case kPolarVelocity: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *velocity_.polarvelocity_);
      break;
    }
    // optional .VelocityCartesian cartesianVelocity = 2;
    case kCartesianVelocity: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *velocity_.cartesianvelocity_);
      break;
    }
    case VELOCITY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Velocity3dWithConfidence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Velocity3dWithConfidence)
  GOOGLE_DCHECK_NE(&from, this);
  const Velocity3dWithConfidence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Velocity3dWithConfidence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Velocity3dWithConfidence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Velocity3dWithConfidence)
    MergeFrom(*source);
  }
}

void Velocity3dWithConfidence::MergeFrom(const Velocity3dWithConfidence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Velocity3dWithConfidence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.velocity_case()) {
    case kPolarVelocity: {
      mutable_polarvelocity()->::VelocityPolarWithZ::MergeFrom(from.polarvelocity());
      break;
    }
    case kCartesianVelocity: {
      mutable_cartesianvelocity()->::VelocityCartesian::MergeFrom(from.cartesianvelocity());
      break;
    }
    case VELOCITY_NOT_SET: {
      break;
    }
  }
}

void Velocity3dWithConfidence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Velocity3dWithConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Velocity3dWithConfidence::CopyFrom(const Velocity3dWithConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Velocity3dWithConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Velocity3dWithConfidence::IsInitialized() const {
  switch (velocity_case()) {
    case kPolarVelocity: {
      if (has_polarvelocity()) {
        if (!this->polarvelocity().IsInitialized()) return false;
      }
      break;
    }
    case kCartesianVelocity: {
      if (has_cartesianvelocity()) {
        if (!this->cartesianvelocity().IsInitialized()) return false;
      }
      break;
    }
    case VELOCITY_NOT_SET: {
      break;
    }
  }
  return true;
}

void Velocity3dWithConfidence::Swap(Velocity3dWithConfidence* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Velocity3dWithConfidence::InternalSwap(Velocity3dWithConfidence* other) {
  using std::swap;
  swap(velocity_, other->velocity_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Velocity3dWithConfidence::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VruClusterInformation::InitAsDefaultInstance() {
  ::_VruClusterInformation_default_instance_._instance.get_mutable()->clusterboundingboxshape_ = const_cast< ::Shape*>(
      ::Shape::internal_default_instance());
  ::_VruClusterInformation_default_instance_._instance.get_mutable()->clusterprofiles_ = const_cast< ::VruClusterProfiles*>(
      ::VruClusterProfiles::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VruClusterInformation::kClusterIdFieldNumber;
const int VruClusterInformation::kClusterBoundingBoxShapeFieldNumber;
const int VruClusterInformation::kClusterCardinalitySizeFieldNumber;
const int VruClusterInformation::kClusterProfilesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VruClusterInformation::VruClusterInformation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VruClusterInformation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:VruClusterInformation)
}
VruClusterInformation::VruClusterInformation(const VruClusterInformation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_clusterboundingboxshape()) {
    clusterboundingboxshape_ = new ::Shape(*from.clusterboundingboxshape_);
  } else {
    clusterboundingboxshape_ = NULL;
  }
  if (from.has_clusterprofiles()) {
    clusterprofiles_ = new ::VruClusterProfiles(*from.clusterprofiles_);
  } else {
    clusterprofiles_ = NULL;
  }
  ::memcpy(&clusterid_, &from.clusterid_,
    static_cast<size_t>(reinterpret_cast<char*>(&clustercardinalitysize_) -
    reinterpret_cast<char*>(&clusterid_)) + sizeof(clustercardinalitysize_));
  // @@protoc_insertion_point(copy_constructor:VruClusterInformation)
}

void VruClusterInformation::SharedCtor() {
  ::memset(&clusterboundingboxshape_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clustercardinalitysize_) -
      reinterpret_cast<char*>(&clusterboundingboxshape_)) + sizeof(clustercardinalitysize_));
}

VruClusterInformation::~VruClusterInformation() {
  // @@protoc_insertion_point(destructor:VruClusterInformation)
  SharedDtor();
}

void VruClusterInformation::SharedDtor() {
  if (this != internal_default_instance()) delete clusterboundingboxshape_;
  if (this != internal_default_instance()) delete clusterprofiles_;
}

void VruClusterInformation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VruClusterInformation::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VruClusterInformation& VruClusterInformation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VruClusterInformation.base);
  return *internal_default_instance();
}


void VruClusterInformation::Clear() {
// @@protoc_insertion_point(message_clear_start:VruClusterInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(clusterboundingboxshape_ != NULL);
      clusterboundingboxshape_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(clusterprofiles_ != NULL);
      clusterprofiles_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&clusterid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&clustercardinalitysize_) -
        reinterpret_cast<char*>(&clusterid_)) + sizeof(clustercardinalitysize_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VruClusterInformation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VruClusterInformation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 clusterId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_clusterid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clusterid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Shape clusterBoundingBoxShape = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_clusterboundingboxshape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 clusterCardinalitySize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_clustercardinalitysize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clustercardinalitysize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .VruClusterProfiles clusterProfiles = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_clusterprofiles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VruClusterInformation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VruClusterInformation)
  return false;
#undef DO_
}

void VruClusterInformation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VruClusterInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 clusterId = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->clusterid(), output);
  }

  // optional .Shape clusterBoundingBoxShape = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_clusterboundingboxshape(), output);
  }

  // required uint32 clusterCardinalitySize = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->clustercardinalitysize(), output);
  }

  // optional .VruClusterProfiles clusterProfiles = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_clusterprofiles(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VruClusterInformation)
}

::google::protobuf::uint8* VruClusterInformation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VruClusterInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 clusterId = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->clusterid(), target);
  }

  // optional .Shape clusterBoundingBoxShape = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_clusterboundingboxshape(), deterministic, target);
  }

  // required uint32 clusterCardinalitySize = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->clustercardinalitysize(), target);
  }

  // optional .VruClusterProfiles clusterProfiles = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_clusterprofiles(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VruClusterInformation)
  return target;
}

size_t VruClusterInformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VruClusterInformation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 clusterCardinalitySize = 3;
  if (has_clustercardinalitysize()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->clustercardinalitysize());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .Shape clusterBoundingBoxShape = 2;
    if (has_clusterboundingboxshape()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *clusterboundingboxshape_);
    }

    // optional .VruClusterProfiles clusterProfiles = 4;
    if (has_clusterprofiles()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *clusterprofiles_);
    }

    // optional uint32 clusterId = 1;
    if (has_clusterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->clusterid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VruClusterInformation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VruClusterInformation)
  GOOGLE_DCHECK_NE(&from, this);
  const VruClusterInformation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VruClusterInformation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VruClusterInformation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VruClusterInformation)
    MergeFrom(*source);
  }
}

void VruClusterInformation::MergeFrom(const VruClusterInformation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VruClusterInformation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_clusterboundingboxshape()->::Shape::MergeFrom(from.clusterboundingboxshape());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_clusterprofiles()->::VruClusterProfiles::MergeFrom(from.clusterprofiles());
    }
    if (cached_has_bits & 0x00000004u) {
      clusterid_ = from.clusterid_;
    }
    if (cached_has_bits & 0x00000008u) {
      clustercardinalitysize_ = from.clustercardinalitysize_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VruClusterInformation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VruClusterInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VruClusterInformation::CopyFrom(const VruClusterInformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VruClusterInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VruClusterInformation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  if (has_clusterboundingboxshape()) {
    if (!this->clusterboundingboxshape_->IsInitialized()) return false;
  }
  if (has_clusterprofiles()) {
    if (!this->clusterprofiles_->IsInitialized()) return false;
  }
  return true;
}

void VruClusterInformation::Swap(VruClusterInformation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VruClusterInformation::InternalSwap(VruClusterInformation* other) {
  using std::swap;
  swap(clusterboundingboxshape_, other->clusterboundingboxshape_);
  swap(clusterprofiles_, other->clusterprofiles_);
  swap(clusterid_, other->clusterid_);
  swap(clustercardinalitysize_, other->clustercardinalitysize_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VruClusterInformation::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VruClusterProfiles::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VruClusterProfiles::kPedestrianFieldNumber;
const int VruClusterProfiles::kBicyclistFieldNumber;
const int VruClusterProfiles::kMotorcyclistFieldNumber;
const int VruClusterProfiles::kAnimalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VruClusterProfiles::VruClusterProfiles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VruClusterProfiles.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:VruClusterProfiles)
}
VruClusterProfiles::VruClusterProfiles(const VruClusterProfiles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pedestrian_, &from.pedestrian_,
    static_cast<size_t>(reinterpret_cast<char*>(&animal_) -
    reinterpret_cast<char*>(&pedestrian_)) + sizeof(animal_));
  // @@protoc_insertion_point(copy_constructor:VruClusterProfiles)
}

void VruClusterProfiles::SharedCtor() {
  ::memset(&pedestrian_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&animal_) -
      reinterpret_cast<char*>(&pedestrian_)) + sizeof(animal_));
}

VruClusterProfiles::~VruClusterProfiles() {
  // @@protoc_insertion_point(destructor:VruClusterProfiles)
  SharedDtor();
}

void VruClusterProfiles::SharedDtor() {
}

void VruClusterProfiles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VruClusterProfiles::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VruClusterProfiles& VruClusterProfiles::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VruClusterProfiles.base);
  return *internal_default_instance();
}


void VruClusterProfiles::Clear() {
// @@protoc_insertion_point(message_clear_start:VruClusterProfiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pedestrian_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&animal_) -
      reinterpret_cast<char*>(&pedestrian_)) + sizeof(animal_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VruClusterProfiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VruClusterProfiles)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool pedestrian = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_pedestrian();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pedestrian_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool bicyclist = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_bicyclist();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bicyclist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool motorcyclist = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_motorcyclist();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &motorcyclist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool animal = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_animal();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &animal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VruClusterProfiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VruClusterProfiles)
  return false;
#undef DO_
}

void VruClusterProfiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VruClusterProfiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool pedestrian = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->pedestrian(), output);
  }

  // required bool bicyclist = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bicyclist(), output);
  }

  // required bool motorcyclist = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->motorcyclist(), output);
  }

  // required bool animal = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->animal(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VruClusterProfiles)
}

::google::protobuf::uint8* VruClusterProfiles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VruClusterProfiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool pedestrian = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->pedestrian(), target);
  }

  // required bool bicyclist = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->bicyclist(), target);
  }

  // required bool motorcyclist = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->motorcyclist(), target);
  }

  // required bool animal = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->animal(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VruClusterProfiles)
  return target;
}

size_t VruClusterProfiles::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:VruClusterProfiles)
  size_t total_size = 0;

  if (has_pedestrian()) {
    // required bool pedestrian = 1;
    total_size += 1 + 1;
  }

  if (has_bicyclist()) {
    // required bool bicyclist = 2;
    total_size += 1 + 1;
  }

  if (has_motorcyclist()) {
    // required bool motorcyclist = 3;
    total_size += 1 + 1;
  }

  if (has_animal()) {
    // required bool animal = 4;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t VruClusterProfiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VruClusterProfiles)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required bool pedestrian = 1;
    total_size += 1 + 1;

    // required bool bicyclist = 2;
    total_size += 1 + 1;

    // required bool motorcyclist = 3;
    total_size += 1 + 1;

    // required bool animal = 4;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VruClusterProfiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VruClusterProfiles)
  GOOGLE_DCHECK_NE(&from, this);
  const VruClusterProfiles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VruClusterProfiles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VruClusterProfiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VruClusterProfiles)
    MergeFrom(*source);
  }
}

void VruClusterProfiles::MergeFrom(const VruClusterProfiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VruClusterProfiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      pedestrian_ = from.pedestrian_;
    }
    if (cached_has_bits & 0x00000002u) {
      bicyclist_ = from.bicyclist_;
    }
    if (cached_has_bits & 0x00000004u) {
      motorcyclist_ = from.motorcyclist_;
    }
    if (cached_has_bits & 0x00000008u) {
      animal_ = from.animal_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VruClusterProfiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VruClusterProfiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VruClusterProfiles::CopyFrom(const VruClusterProfiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VruClusterProfiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VruClusterProfiles::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void VruClusterProfiles::Swap(VruClusterProfiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VruClusterProfiles::InternalSwap(VruClusterProfiles* other) {
  using std::swap;
  swap(pedestrian_, other->pedestrian_);
  swap(bicyclist_, other->bicyclist_);
  swap(motorcyclist_, other->motorcyclist_);
  swap(animal_, other->animal_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VruClusterProfiles::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VruProfileAndSubprofile::InitAsDefaultInstance() {
  ::_VruProfileAndSubprofile_default_instance_.pedestrian_ = 0;
  ::_VruProfileAndSubprofile_default_instance_.bicyclistandlightvruvehicle_ = 0;
  ::_VruProfileAndSubprofile_default_instance_.motorcyclist_ = 0;
  ::_VruProfileAndSubprofile_default_instance_.animal_ = 0;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VruProfileAndSubprofile::kPedestrianFieldNumber;
const int VruProfileAndSubprofile::kBicyclistAndLightVruVehicleFieldNumber;
const int VruProfileAndSubprofile::kMotorcyclistFieldNumber;
const int VruProfileAndSubprofile::kAnimalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VruProfileAndSubprofile::VruProfileAndSubprofile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VruProfileAndSubprofile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:VruProfileAndSubprofile)
}
VruProfileAndSubprofile::VruProfileAndSubprofile(const VruProfileAndSubprofile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_vru();
  switch (from.vru_case()) {
    case kPedestrian: {
      set_pedestrian(from.pedestrian());
      break;
    }
    case kBicyclistAndLightVruVehicle: {
      set_bicyclistandlightvruvehicle(from.bicyclistandlightvruvehicle());
      break;
    }
    case kMotorcyclist: {
      set_motorcyclist(from.motorcyclist());
      break;
    }
    case kAnimal: {
      set_animal(from.animal());
      break;
    }
    case VRU_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:VruProfileAndSubprofile)
}

void VruProfileAndSubprofile::SharedCtor() {
  clear_has_vru();
}

VruProfileAndSubprofile::~VruProfileAndSubprofile() {
  // @@protoc_insertion_point(destructor:VruProfileAndSubprofile)
  SharedDtor();
}

void VruProfileAndSubprofile::SharedDtor() {
  if (has_vru()) {
    clear_vru();
  }
}

void VruProfileAndSubprofile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VruProfileAndSubprofile::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VruProfileAndSubprofile& VruProfileAndSubprofile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_VruProfileAndSubprofile.base);
  return *internal_default_instance();
}


void VruProfileAndSubprofile::clear_vru() {
// @@protoc_insertion_point(one_of_clear_start:VruProfileAndSubprofile)
  switch (vru_case()) {
    case kPedestrian: {
      // No need to clear
      break;
    }
    case kBicyclistAndLightVruVehicle: {
      // No need to clear
      break;
    }
    case kMotorcyclist: {
      // No need to clear
      break;
    }
    case kAnimal: {
      // No need to clear
      break;
    }
    case VRU_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VRU_NOT_SET;
}


void VruProfileAndSubprofile::Clear() {
// @@protoc_insertion_point(message_clear_start:VruProfileAndSubprofile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_vru();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VruProfileAndSubprofile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VruProfileAndSubprofile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .VruSubProfilePedestrian pedestrian = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::VruSubProfilePedestrian_IsValid(value)) {
            set_pedestrian(static_cast< ::VruSubProfilePedestrian >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .VruSubProfileBicyclist bicyclistAndLightVruVehicle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::VruSubProfileBicyclist_IsValid(value)) {
            set_bicyclistandlightvruvehicle(static_cast< ::VruSubProfileBicyclist >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .VruSubProfileMotorcyclist motorcyclist = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::VruSubProfileMotorcyclist_IsValid(value)) {
            set_motorcyclist(static_cast< ::VruSubProfileMotorcyclist >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .VruSubProfileAnimal animal = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::VruSubProfileAnimal_IsValid(value)) {
            set_animal(static_cast< ::VruSubProfileAnimal >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VruProfileAndSubprofile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VruProfileAndSubprofile)
  return false;
#undef DO_
}

void VruProfileAndSubprofile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VruProfileAndSubprofile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (vru_case()) {
    case kPedestrian:
      ::google::protobuf::internal::WireFormatLite::WriteEnum(
        1, this->pedestrian(), output);
      break;
    case kBicyclistAndLightVruVehicle:
      ::google::protobuf::internal::WireFormatLite::WriteEnum(
        2, this->bicyclistandlightvruvehicle(), output);
      break;
    case kMotorcyclist:
      ::google::protobuf::internal::WireFormatLite::WriteEnum(
        3, this->motorcyclist(), output);
      break;
    case kAnimal:
      ::google::protobuf::internal::WireFormatLite::WriteEnum(
        4, this->animal(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VruProfileAndSubprofile)
}

::google::protobuf::uint8* VruProfileAndSubprofile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VruProfileAndSubprofile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (vru_case()) {
    case kPedestrian:
      target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
        1, this->pedestrian(), target);
      break;
    case kBicyclistAndLightVruVehicle:
      target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
        2, this->bicyclistandlightvruvehicle(), target);
      break;
    case kMotorcyclist:
      target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
        3, this->motorcyclist(), target);
      break;
    case kAnimal:
      target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
        4, this->animal(), target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VruProfileAndSubprofile)
  return target;
}

size_t VruProfileAndSubprofile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VruProfileAndSubprofile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (vru_case()) {
    // optional .VruSubProfilePedestrian pedestrian = 1;
    case kPedestrian: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->pedestrian());
      break;
    }
    // optional .VruSubProfileBicyclist bicyclistAndLightVruVehicle = 2;
    case kBicyclistAndLightVruVehicle: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bicyclistandlightvruvehicle());
      break;
    }
    // optional .VruSubProfileMotorcyclist motorcyclist = 3;
    case kMotorcyclist: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->motorcyclist());
      break;
    }
    // optional .VruSubProfileAnimal animal = 4;
    case kAnimal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->animal());
      break;
    }
    case VRU_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VruProfileAndSubprofile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VruProfileAndSubprofile)
  GOOGLE_DCHECK_NE(&from, this);
  const VruProfileAndSubprofile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VruProfileAndSubprofile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VruProfileAndSubprofile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VruProfileAndSubprofile)
    MergeFrom(*source);
  }
}

void VruProfileAndSubprofile::MergeFrom(const VruProfileAndSubprofile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VruProfileAndSubprofile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.vru_case()) {
    case kPedestrian: {
      set_pedestrian(from.pedestrian());
      break;
    }
    case kBicyclistAndLightVruVehicle: {
      set_bicyclistandlightvruvehicle(from.bicyclistandlightvruvehicle());
      break;
    }
    case kMotorcyclist: {
      set_motorcyclist(from.motorcyclist());
      break;
    }
    case kAnimal: {
      set_animal(from.animal());
      break;
    }
    case VRU_NOT_SET: {
      break;
    }
  }
}

void VruProfileAndSubprofile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VruProfileAndSubprofile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VruProfileAndSubprofile::CopyFrom(const VruProfileAndSubprofile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VruProfileAndSubprofile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VruProfileAndSubprofile::IsInitialized() const {
  return true;
}

void VruProfileAndSubprofile::Swap(VruProfileAndSubprofile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VruProfileAndSubprofile::InternalSwap(VruProfileAndSubprofile* other) {
  using std::swap;
  swap(vru_, other->vru_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VruProfileAndSubprofile::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Wgs84Angle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Wgs84Angle::kWgsAngleValueFieldNumber;
const int Wgs84Angle::kWgs84AngleConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Wgs84Angle::Wgs84Angle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_Wgs84Angle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Wgs84Angle)
}
Wgs84Angle::Wgs84Angle(const Wgs84Angle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&wgsanglevalue_, &from.wgsanglevalue_,
    static_cast<size_t>(reinterpret_cast<char*>(&wgs84angleconfidence_) -
    reinterpret_cast<char*>(&wgsanglevalue_)) + sizeof(wgs84angleconfidence_));
  // @@protoc_insertion_point(copy_constructor:Wgs84Angle)
}

void Wgs84Angle::SharedCtor() {
  ::memset(&wgsanglevalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wgs84angleconfidence_) -
      reinterpret_cast<char*>(&wgsanglevalue_)) + sizeof(wgs84angleconfidence_));
}

Wgs84Angle::~Wgs84Angle() {
  // @@protoc_insertion_point(destructor:Wgs84Angle)
  SharedDtor();
}

void Wgs84Angle::SharedDtor() {
}

void Wgs84Angle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Wgs84Angle::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Wgs84Angle& Wgs84Angle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_Wgs84Angle.base);
  return *internal_default_instance();
}


void Wgs84Angle::Clear() {
// @@protoc_insertion_point(message_clear_start:Wgs84Angle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&wgsanglevalue_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&wgs84angleconfidence_) -
        reinterpret_cast<char*>(&wgsanglevalue_)) + sizeof(wgs84angleconfidence_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Wgs84Angle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Wgs84Angle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 wgsAngleValue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_wgsanglevalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wgsanglevalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 wgs84AngleConfidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_wgs84angleconfidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wgs84angleconfidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Wgs84Angle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Wgs84Angle)
  return false;
#undef DO_
}

void Wgs84Angle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Wgs84Angle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 wgsAngleValue = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->wgsanglevalue(), output);
  }

  // required uint32 wgs84AngleConfidence = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->wgs84angleconfidence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Wgs84Angle)
}

::google::protobuf::uint8* Wgs84Angle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Wgs84Angle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 wgsAngleValue = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->wgsanglevalue(), target);
  }

  // required uint32 wgs84AngleConfidence = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->wgs84angleconfidence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Wgs84Angle)
  return target;
}

size_t Wgs84Angle::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Wgs84Angle)
  size_t total_size = 0;

  if (has_wgsanglevalue()) {
    // required uint32 wgsAngleValue = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wgsanglevalue());
  }

  if (has_wgs84angleconfidence()) {
    // required uint32 wgs84AngleConfidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wgs84angleconfidence());
  }

  return total_size;
}
size_t Wgs84Angle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Wgs84Angle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 wgsAngleValue = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wgsanglevalue());

    // required uint32 wgs84AngleConfidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wgs84angleconfidence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Wgs84Angle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Wgs84Angle)
  GOOGLE_DCHECK_NE(&from, this);
  const Wgs84Angle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Wgs84Angle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Wgs84Angle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Wgs84Angle)
    MergeFrom(*source);
  }
}

void Wgs84Angle::MergeFrom(const Wgs84Angle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Wgs84Angle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      wgsanglevalue_ = from.wgsanglevalue_;
    }
    if (cached_has_bits & 0x00000002u) {
      wgs84angleconfidence_ = from.wgs84angleconfidence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Wgs84Angle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Wgs84Angle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Wgs84Angle::CopyFrom(const Wgs84Angle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Wgs84Angle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Wgs84Angle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Wgs84Angle::Swap(Wgs84Angle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Wgs84Angle::InternalSwap(Wgs84Angle* other) {
  using std::swap;
  swap(wgsanglevalue_, other->wgsanglevalue_);
  swap(wgs84angleconfidence_, other->wgs84angleconfidence_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Wgs84Angle::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void YawRate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YawRate::kYawratevalueFieldNumber;
const int YawRate::kYawrateconfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YawRate::YawRate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fits_5fcdd_2eproto::scc_info_YawRate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:YawRate)
}
YawRate::YawRate(const YawRate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&yawratevalue_, &from.yawratevalue_,
    static_cast<size_t>(reinterpret_cast<char*>(&yawrateconfidence_) -
    reinterpret_cast<char*>(&yawratevalue_)) + sizeof(yawrateconfidence_));
  // @@protoc_insertion_point(copy_constructor:YawRate)
}

void YawRate::SharedCtor() {
  ::memset(&yawratevalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yawrateconfidence_) -
      reinterpret_cast<char*>(&yawratevalue_)) + sizeof(yawrateconfidence_));
}

YawRate::~YawRate() {
  // @@protoc_insertion_point(destructor:YawRate)
  SharedDtor();
}

void YawRate::SharedDtor() {
}

void YawRate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* YawRate::descriptor() {
  ::protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const YawRate& YawRate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fits_5fcdd_2eproto::scc_info_YawRate.base);
  return *internal_default_instance();
}


void YawRate::Clear() {
// @@protoc_insertion_point(message_clear_start:YawRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&yawratevalue_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&yawrateconfidence_) -
        reinterpret_cast<char*>(&yawratevalue_)) + sizeof(yawrateconfidence_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool YawRate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YawRate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 yawratevalue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_yawratevalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yawratevalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .YawRateConfidence yawrateconfidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::YawRateConfidence_IsValid(value)) {
            set_yawrateconfidence(static_cast< ::YawRateConfidence >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YawRate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YawRate)
  return false;
#undef DO_
}

void YawRate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YawRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 yawratevalue = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->yawratevalue(), output);
  }

  // required .YawRateConfidence yawrateconfidence = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->yawrateconfidence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YawRate)
}

::google::protobuf::uint8* YawRate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:YawRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 yawratevalue = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->yawratevalue(), target);
  }

  // required .YawRateConfidence yawrateconfidence = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->yawrateconfidence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YawRate)
  return target;
}

size_t YawRate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:YawRate)
  size_t total_size = 0;

  if (has_yawratevalue()) {
    // required int32 yawratevalue = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->yawratevalue());
  }

  if (has_yawrateconfidence()) {
    // required .YawRateConfidence yawrateconfidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->yawrateconfidence());
  }

  return total_size;
}
size_t YawRate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:YawRate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 yawratevalue = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->yawratevalue());

    // required .YawRateConfidence yawrateconfidence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->yawrateconfidence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YawRate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:YawRate)
  GOOGLE_DCHECK_NE(&from, this);
  const YawRate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YawRate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:YawRate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:YawRate)
    MergeFrom(*source);
  }
}

void YawRate::MergeFrom(const YawRate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:YawRate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      yawratevalue_ = from.yawratevalue_;
    }
    if (cached_has_bits & 0x00000002u) {
      yawrateconfidence_ = from.yawrateconfidence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void YawRate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:YawRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YawRate::CopyFrom(const YawRate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:YawRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YawRate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void YawRate::Swap(YawRate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YawRate::InternalSwap(YawRate* other) {
  using std::swap;
  swap(yawratevalue_, other->yawratevalue_);
  swap(yawrateconfidence_, other->yawrateconfidence_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata YawRate::GetMetadata() const {
  protobuf_etsi_5fits_5fcdd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fits_5fcdd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Acceleration3dWithConfidence* Arena::CreateMaybeMessage< ::Acceleration3dWithConfidence >(Arena* arena) {
  return Arena::CreateInternal< ::Acceleration3dWithConfidence >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AccelerationCartesian* Arena::CreateMaybeMessage< ::AccelerationCartesian >(Arena* arena) {
  return Arena::CreateInternal< ::AccelerationCartesian >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AccelerationComponent* Arena::CreateMaybeMessage< ::AccelerationComponent >(Arena* arena) {
  return Arena::CreateInternal< ::AccelerationComponent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AccelerationMagnitude* Arena::CreateMaybeMessage< ::AccelerationMagnitude >(Arena* arena) {
  return Arena::CreateInternal< ::AccelerationMagnitude >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AccelerationPolarWithZ* Arena::CreateMaybeMessage< ::AccelerationPolarWithZ >(Arena* arena) {
  return Arena::CreateInternal< ::AccelerationPolarWithZ >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ActionID* Arena::CreateMaybeMessage< ::ActionID >(Arena* arena) {
  return Arena::CreateInternal< ::ActionID >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Altitude* Arena::CreateMaybeMessage< ::Altitude >(Arena* arena) {
  return Arena::CreateInternal< ::Altitude >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesianAngle* Arena::CreateMaybeMessage< ::CartesianAngle >(Arena* arena) {
  return Arena::CreateInternal< ::CartesianAngle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesianAngularVelocityComponent* Arena::CreateMaybeMessage< ::CartesianAngularVelocityComponent >(Arena* arena) {
  return Arena::CreateInternal< ::CartesianAngularVelocityComponent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesianPosition3d* Arena::CreateMaybeMessage< ::CartesianPosition3d >(Arena* arena) {
  return Arena::CreateInternal< ::CartesianPosition3d >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesianCoordinateWithConfidence* Arena::CreateMaybeMessage< ::CartesianCoordinateWithConfidence >(Arena* arena) {
  return Arena::CreateInternal< ::CartesianCoordinateWithConfidence >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesianPosition3dWithConfidence* Arena::CreateMaybeMessage< ::CartesianPosition3dWithConfidence >(Arena* arena) {
  return Arena::CreateInternal< ::CartesianPosition3dWithConfidence >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CircularShape* Arena::CreateMaybeMessage< ::CircularShape >(Arena* arena) {
  return Arena::CreateInternal< ::CircularShape >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ClosedLanes* Arena::CreateMaybeMessage< ::ClosedLanes >(Arena* arena) {
  return Arena::CreateInternal< ::ClosedLanes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CorrelationColumn* Arena::CreateMaybeMessage< ::CorrelationColumn >(Arena* arena) {
  return Arena::CreateInternal< ::CorrelationColumn >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Curvature* Arena::CreateMaybeMessage< ::Curvature >(Arena* arena) {
  return Arena::CreateInternal< ::Curvature >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CauseCode* Arena::CreateMaybeMessage< ::CauseCode >(Arena* arena) {
  return Arena::CreateInternal< ::CauseCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DangerousGoodsExtended* Arena::CreateMaybeMessage< ::DangerousGoodsExtended >(Arena* arena) {
  return Arena::CreateInternal< ::DangerousGoodsExtended >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DeltaReferencePosition* Arena::CreateMaybeMessage< ::DeltaReferencePosition >(Arena* arena) {
  return Arena::CreateInternal< ::DeltaReferencePosition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::EnergyStorageType* Arena::CreateMaybeMessage< ::EnergyStorageType >(Arena* arena) {
  return Arena::CreateInternal< ::EnergyStorageType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::EllipticalShape* Arena::CreateMaybeMessage< ::EllipticalShape >(Arena* arena) {
  return Arena::CreateInternal< ::EllipticalShape >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::EulerAnglesWithConfidence* Arena::CreateMaybeMessage< ::EulerAnglesWithConfidence >(Arena* arena) {
  return Arena::CreateInternal< ::EulerAnglesWithConfidence >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::EventHistory* Arena::CreateMaybeMessage< ::EventHistory >(Arena* arena) {
  return Arena::CreateInternal< ::EventHistory >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::EventPoint* Arena::CreateMaybeMessage< ::EventPoint >(Arena* arena) {
  return Arena::CreateInternal< ::EventPoint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Heading* Arena::CreateMaybeMessage< ::Heading >(Arena* arena) {
  return Arena::CreateInternal< ::Heading >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IntersectionReferenceID* Arena::CreateMaybeMessage< ::IntersectionReferenceID >(Arena* arena) {
  return Arena::CreateInternal< ::IntersectionReferenceID >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ItineraryPath* Arena::CreateMaybeMessage< ::ItineraryPath >(Arena* arena) {
  return Arena::CreateInternal< ::ItineraryPath >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LongitudinalAcceleration* Arena::CreateMaybeMessage< ::LongitudinalAcceleration >(Arena* arena) {
  return Arena::CreateInternal< ::LongitudinalAcceleration >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LongitudinalLanePosition* Arena::CreateMaybeMessage< ::LongitudinalLanePosition >(Arena* arena) {
  return Arena::CreateInternal< ::LongitudinalLanePosition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LowerTriangularPositiveSemidefiniteMatrix* Arena::CreateMaybeMessage< ::LowerTriangularPositiveSemidefiniteMatrix >(Arena* arena) {
  return Arena::CreateInternal< ::LowerTriangularPositiveSemidefiniteMatrix >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LowerTriangularPositiveSemidefiniteMatrixColumns* Arena::CreateMaybeMessage< ::LowerTriangularPositiveSemidefiniteMatrixColumns >(Arena* arena) {
  return Arena::CreateInternal< ::LowerTriangularPositiveSemidefiniteMatrixColumns >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MapPosition* Arena::CreateMaybeMessage< ::MapPosition >(Arena* arena) {
  return Arena::CreateInternal< ::MapPosition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MapReference* Arena::CreateMaybeMessage< ::MapReference >(Arena* arena) {
  return Arena::CreateInternal< ::MapReference >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MatrixIncludedComponents* Arena::CreateMaybeMessage< ::MatrixIncludedComponents >(Arena* arena) {
  return Arena::CreateInternal< ::MatrixIncludedComponents >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MessageRateHz* Arena::CreateMaybeMessage< ::MessageRateHz >(Arena* arena) {
  return Arena::CreateInternal< ::MessageRateHz >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MessageSegmentationInfo* Arena::CreateMaybeMessage< ::MessageSegmentationInfo >(Arena* arena) {
  return Arena::CreateInternal< ::MessageSegmentationInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ObjectClass* Arena::CreateMaybeMessage< ::ObjectClass >(Arena* arena) {
  return Arena::CreateInternal< ::ObjectClass >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ObjectClassWithConfidence* Arena::CreateMaybeMessage< ::ObjectClassWithConfidence >(Arena* arena) {
  return Arena::CreateInternal< ::ObjectClassWithConfidence >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ObjectDimension* Arena::CreateMaybeMessage< ::ObjectDimension >(Arena* arena) {
  return Arena::CreateInternal< ::ObjectDimension >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::OtherSubClass* Arena::CreateMaybeMessage< ::OtherSubClass >(Arena* arena) {
  return Arena::CreateInternal< ::OtherSubClass >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PolygonalShape* Arena::CreateMaybeMessage< ::PolygonalShape >(Arena* arena) {
  return Arena::CreateInternal< ::PolygonalShape >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PositionConfidenceEllipse* Arena::CreateMaybeMessage< ::PositionConfidenceEllipse >(Arena* arena) {
  return Arena::CreateInternal< ::PositionConfidenceEllipse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RadialShape* Arena::CreateMaybeMessage< ::RadialShape >(Arena* arena) {
  return Arena::CreateInternal< ::RadialShape >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RadialShapes* Arena::CreateMaybeMessage< ::RadialShapes >(Arena* arena) {
  return Arena::CreateInternal< ::RadialShapes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RadialShapeDetails* Arena::CreateMaybeMessage< ::RadialShapeDetails >(Arena* arena) {
  return Arena::CreateInternal< ::RadialShapeDetails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RectangularShape* Arena::CreateMaybeMessage< ::RectangularShape >(Arena* arena) {
  return Arena::CreateInternal< ::RectangularShape >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReferenceDenms* Arena::CreateMaybeMessage< ::ReferenceDenms >(Arena* arena) {
  return Arena::CreateInternal< ::ReferenceDenms >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReferencePosition* Arena::CreateMaybeMessage< ::ReferencePosition >(Arena* arena) {
  return Arena::CreateInternal< ::ReferencePosition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RestrictedTypes* Arena::CreateMaybeMessage< ::RestrictedTypes >(Arena* arena) {
  return Arena::CreateInternal< ::RestrictedTypes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RoadSegmentReferenceID* Arena::CreateMaybeMessage< ::RoadSegmentReferenceID >(Arena* arena) {
  return Arena::CreateInternal< ::RoadSegmentReferenceID >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Shape* Arena::CreateMaybeMessage< ::Shape >(Arena* arena) {
  return Arena::CreateInternal< ::Shape >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Speed* Arena::CreateMaybeMessage< ::Speed >(Arena* arena) {
  return Arena::CreateInternal< ::Speed >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::VehicleIdentification* Arena::CreateMaybeMessage< ::VehicleIdentification >(Arena* arena) {
  return Arena::CreateInternal< ::VehicleIdentification >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::VehicleLength* Arena::CreateMaybeMessage< ::VehicleLength >(Arena* arena) {
  return Arena::CreateInternal< ::VehicleLength >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::VehicleWidth* Arena::CreateMaybeMessage< ::VehicleWidth >(Arena* arena) {
  return Arena::CreateInternal< ::VehicleWidth >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::VelocityCartesian* Arena::CreateMaybeMessage< ::VelocityCartesian >(Arena* arena) {
  return Arena::CreateInternal< ::VelocityCartesian >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::VelocityComponent* Arena::CreateMaybeMessage< ::VelocityComponent >(Arena* arena) {
  return Arena::CreateInternal< ::VelocityComponent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::VelocityPolarWithZ* Arena::CreateMaybeMessage< ::VelocityPolarWithZ >(Arena* arena) {
  return Arena::CreateInternal< ::VelocityPolarWithZ >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Velocity3dWithConfidence* Arena::CreateMaybeMessage< ::Velocity3dWithConfidence >(Arena* arena) {
  return Arena::CreateInternal< ::Velocity3dWithConfidence >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::VruClusterInformation* Arena::CreateMaybeMessage< ::VruClusterInformation >(Arena* arena) {
  return Arena::CreateInternal< ::VruClusterInformation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::VruClusterProfiles* Arena::CreateMaybeMessage< ::VruClusterProfiles >(Arena* arena) {
  return Arena::CreateInternal< ::VruClusterProfiles >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::VruProfileAndSubprofile* Arena::CreateMaybeMessage< ::VruProfileAndSubprofile >(Arena* arena) {
  return Arena::CreateInternal< ::VruProfileAndSubprofile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Wgs84Angle* Arena::CreateMaybeMessage< ::Wgs84Angle >(Arena* arena) {
  return Arena::CreateInternal< ::Wgs84Angle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::YawRate* Arena::CreateMaybeMessage< ::YawRate >(Arena* arena) {
  return Arena::CreateInternal< ::YawRate >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
