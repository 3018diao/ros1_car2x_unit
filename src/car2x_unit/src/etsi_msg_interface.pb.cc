// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: etsi_msg_interface.proto

#include "etsi_msg_interface.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_cam_5finterface_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cam_5finterface_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_CAMessage;
}  // namespace protobuf_cam_5finterface_2eproto
namespace protobuf_cpm_5finterface_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cpm_5finterface_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_CPMessage;
}  // namespace protobuf_cpm_5finterface_2eproto
namespace protobuf_etsi_5fmsg_5finterface_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fmsg_5finterface_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ChannelBusyRatio;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fmsg_5finterface_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LinkLayerReception;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fmsg_5finterface_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LinkLayerTransmission;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fmsg_5finterface_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RadioConfiguration;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fmsg_5finterface_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CommandResponseData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fmsg_5finterface_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FacilityLayerReception;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fmsg_5finterface_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FacilityLayerTransmission;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fmsg_5finterface_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_FacilityLayerMessage;
}  // namespace protobuf_etsi_5fmsg_5finterface_2eproto
class CommandRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommandRequest>
      _instance;
  int lifecycle_;
  const ::LinkLayerTransmission* linklayer_tx_;
  const ::RadioConfiguration* radio_cfg_;
  const ::FacilityLayerTransmission* facilitieslayer_tx_;
} _CommandRequest_default_instance_;
class CommandResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommandResponse>
      _instance;
} _CommandResponse_default_instance_;
class CommandResponseDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommandResponseData>
      _instance;
  const ::RadioConfiguration* radio_cfg_;
} _CommandResponseData_default_instance_;
class RadioConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RadioConfiguration>
      _instance;
} _RadioConfiguration_default_instance_;
class LinkLayerTransmissionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinkLayerTransmission>
      _instance;
} _LinkLayerTransmission_default_instance_;
class LinkLayerReceptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinkLayerReception>
      _instance;
} _LinkLayerReception_default_instance_;
class FacilityLayerTransmissionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FacilityLayerTransmission>
      _instance;
} _FacilityLayerTransmission_default_instance_;
class FacilityLayerReceptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FacilityLayerReception>
      _instance;
} _FacilityLayerReception_default_instance_;
class FacilityLayerMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FacilityLayerMessage>
      _instance;
  const ::CAMessage* cam_msg_;
  const ::CPMessage* cpm_msg_;
} _FacilityLayerMessage_default_instance_;
class ChannelBusyRatioDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChannelBusyRatio>
      _instance;
} _ChannelBusyRatio_default_instance_;
class GossipMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GossipMessage>
      _instance;
  const ::ChannelBusyRatio* cbr_;
  const ::LinkLayerReception* linklayer_rx_;
  const ::FacilityLayerReception* facilitylayer_rx_;
} _GossipMessage_default_instance_;
namespace protobuf_etsi_5fmsg_5finterface_2eproto {
static void InitDefaultsCommandRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CommandRequest_default_instance_;
    new (ptr) ::CommandRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CommandRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_CommandRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsCommandRequest}, {
      &protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_LinkLayerTransmission.base,
      &protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_RadioConfiguration.base,
      &protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_FacilityLayerTransmission.base,}};

static void InitDefaultsCommandResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CommandResponse_default_instance_;
    new (ptr) ::CommandResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CommandResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CommandResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCommandResponse}, {
      &protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_CommandResponseData.base,}};

static void InitDefaultsCommandResponseData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CommandResponseData_default_instance_;
    new (ptr) ::CommandResponseData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CommandResponseData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CommandResponseData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCommandResponseData}, {
      &protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_RadioConfiguration.base,}};

static void InitDefaultsRadioConfiguration() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RadioConfiguration_default_instance_;
    new (ptr) ::RadioConfiguration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RadioConfiguration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RadioConfiguration =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRadioConfiguration}, {}};

static void InitDefaultsLinkLayerTransmission() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_LinkLayerTransmission_default_instance_;
    new (ptr) ::LinkLayerTransmission();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LinkLayerTransmission::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LinkLayerTransmission =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLinkLayerTransmission}, {}};

static void InitDefaultsLinkLayerReception() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_LinkLayerReception_default_instance_;
    new (ptr) ::LinkLayerReception();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LinkLayerReception::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LinkLayerReception =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLinkLayerReception}, {}};

static void InitDefaultsFacilityLayerTransmission() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_FacilityLayerTransmission_default_instance_;
    new (ptr) ::FacilityLayerTransmission();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FacilityLayerTransmission::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FacilityLayerTransmission =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFacilityLayerTransmission}, {
      &protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_FacilityLayerMessage.base,}};

static void InitDefaultsFacilityLayerReception() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_FacilityLayerReception_default_instance_;
    new (ptr) ::FacilityLayerReception();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FacilityLayerReception::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FacilityLayerReception =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFacilityLayerReception}, {
      &protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_FacilityLayerMessage.base,}};

static void InitDefaultsFacilityLayerMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_FacilityLayerMessage_default_instance_;
    new (ptr) ::FacilityLayerMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FacilityLayerMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_FacilityLayerMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsFacilityLayerMessage}, {
      &protobuf_cam_5finterface_2eproto::scc_info_CAMessage.base,
      &protobuf_cpm_5finterface_2eproto::scc_info_CPMessage.base,}};

static void InitDefaultsChannelBusyRatio() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ChannelBusyRatio_default_instance_;
    new (ptr) ::ChannelBusyRatio();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChannelBusyRatio::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChannelBusyRatio =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChannelBusyRatio}, {}};

static void InitDefaultsGossipMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GossipMessage_default_instance_;
    new (ptr) ::GossipMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GossipMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_GossipMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsGossipMessage}, {
      &protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_ChannelBusyRatio.base,
      &protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_LinkLayerReception.base,
      &protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_FacilityLayerReception.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CommandRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommandResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommandResponseData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RadioConfiguration.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinkLayerTransmission.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinkLayerReception.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FacilityLayerTransmission.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FacilityLayerReception.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FacilityLayerMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChannelBusyRatio.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GossipMessage.base);
}

::google::protobuf::Metadata file_level_metadata[11];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CommandRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CommandRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CommandRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::CommandRequestDefaultTypeInternal, lifecycle_),
  offsetof(::CommandRequestDefaultTypeInternal, linklayer_tx_),
  offsetof(::CommandRequestDefaultTypeInternal, radio_cfg_),
  offsetof(::CommandRequestDefaultTypeInternal, facilitieslayer_tx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CommandRequest, kind_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CommandResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CommandResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CommandResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CommandResponse, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CommandResponse, data_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CommandResponseData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CommandResponseData, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CommandResponseData, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::CommandResponseDataDefaultTypeInternal, radio_cfg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CommandResponseData, kind_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadioConfiguration, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadioConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadioConfiguration, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadioConfiguration, channel_frequency_mhz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadioConfiguration, filter_unicast_destination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadioConfiguration, default_tx_power_cbm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RadioConfiguration, default_tx_datarate_500kbps_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinkLayerTransmission, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinkLayerTransmission, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinkLayerTransmission, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinkLayerTransmission, destination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinkLayerTransmission, priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinkLayerTransmission, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinkLayerTransmission, datarate_500kbps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinkLayerTransmission, power_cbm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinkLayerTransmission, payload_),
  0,
  1,
  3,
  4,
  5,
  6,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinkLayerReception, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinkLayerReception, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinkLayerReception, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinkLayerReception, destination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinkLayerReception, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinkLayerReception, power_cbm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinkLayerReception, payload_),
  0,
  1,
  3,
  4,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FacilityLayerTransmission, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FacilityLayerTransmission, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FacilityLayerTransmission, msg_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FacilityLayerReception, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FacilityLayerReception, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FacilityLayerReception, msg_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FacilityLayerMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FacilityLayerMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FacilityLayerMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::FacilityLayerMessageDefaultTypeInternal, cam_msg_),
  offsetof(::FacilityLayerMessageDefaultTypeInternal, cpm_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FacilityLayerMessage, kind_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChannelBusyRatio, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChannelBusyRatio, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChannelBusyRatio, busy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChannelBusyRatio, total_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GossipMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GossipMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GossipMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::GossipMessageDefaultTypeInternal, cbr_),
  offsetof(::GossipMessageDefaultTypeInternal, linklayer_rx_),
  offsetof(::GossipMessageDefaultTypeInternal, facilitylayer_rx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GossipMessage, kind_),
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::CommandRequest)},
  { 14, 22, sizeof(::CommandResponse)},
  { 25, 32, sizeof(::CommandResponseData)},
  { 33, 43, sizeof(::RadioConfiguration)},
  { 48, 60, sizeof(::LinkLayerTransmission)},
  { 67, 77, sizeof(::LinkLayerReception)},
  { 82, 88, sizeof(::FacilityLayerTransmission)},
  { 89, 95, sizeof(::FacilityLayerReception)},
  { 96, 104, sizeof(::FacilityLayerMessage)},
  { 106, 113, sizeof(::ChannelBusyRatio)},
  { 115, 124, sizeof(::GossipMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CommandRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CommandResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CommandResponseData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RadioConfiguration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LinkLayerTransmission_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LinkLayerReception_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FacilityLayerTransmission_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FacilityLayerReception_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FacilityLayerMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ChannelBusyRatio_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GossipMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "etsi_msg_interface.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030etsi_msg_interface.proto\032\023cam_interfac"
      "e.proto\032\023cpm_interface.proto\"\323\001\n\016Command"
      "Request\022%\n\tlifecycle\030\001 \001(\0162\020.LifecycleAc"
      "tionH\000\022.\n\014linklayer_tx\030\002 \001(\0132\026.LinkLayer"
      "TransmissionH\000\022(\n\tradio_cfg\030\003 \001(\0132\023.Radi"
      "oConfigurationH\000\0228\n\022facilitieslayer_tx\030\004"
      " \001(\0132\032.FacilityLayerTransmissionH\000B\006\n\004ki"
      "nd\"\265\001\n\017CommandResponse\022\'\n\006status\030\001 \002(\0162\027"
      ".CommandResponse.Status\022\017\n\007message\030\002 \001(\t"
      "\022\"\n\004data\030\003 \001(\0132\024.CommandResponseData\"D\n\006"
      "Status\022\013\n\007SUCCESS\020\000\022\013\n\007FAILURE\020\001\022\013\n\007UNKN"
      "OWN\020\002\022\023\n\017NOT_IMPLEMENTED\020\003\"G\n\023CommandRes"
      "ponseData\022(\n\tradio_cfg\030\001 \001(\0132\023.RadioConf"
      "igurationH\000B\006\n\004kind\"\253\001\n\022RadioConfigurati"
      "on\022\017\n\007address\030\001 \001(\014\022\035\n\025channel_frequency"
      "_mhz\030\002 \001(\r\022\"\n\032filter_unicast_destination"
      "\030\003 \001(\010\022\034\n\024default_tx_power_cbm\030\004 \001(\021\022#\n\033"
      "default_tx_datarate_500kbps\030\005 \001(\r\"\261\001\n\025Li"
      "nkLayerTransmission\022\016\n\006source\030\001 \001(\014\022\023\n\013d"
      "estination\030\002 \002(\014\022$\n\010priority\030\003 \002(\0162\022.Lin"
      "kLayerPriority\022\017\n\007channel\030\004 \001(\r\022\030\n\020datar"
      "ate_500kbps\030\005 \001(\r\022\021\n\tpower_cbm\030\006 \001(\021\022\017\n\007"
      "payload\030\n \002(\014\"n\n\022LinkLayerReception\022\016\n\006s"
      "ource\030\001 \002(\014\022\023\n\013destination\030\002 \002(\014\022\017\n\007chan"
      "nel\030\004 \001(\r\022\021\n\tpower_cbm\030\006 \001(\021\022\017\n\007payload\030"
      "\n \002(\014\"\?\n\031FacilityLayerTransmission\022\"\n\003ms"
      "g\030\001 \002(\0132\025.FacilityLayerMessage\"<\n\026Facili"
      "tyLayerReception\022\"\n\003msg\030\001 \002(\0132\025.Facility"
      "LayerMessage\"\\\n\024FacilityLayerMessage\022\035\n\007"
      "cam_msg\030\001 \001(\0132\n.CAMessageH\000\022\035\n\007cpm_msg\030\002"
      " \001(\0132\n.CPMessageH\000B\006\n\004kind\"/\n\020ChannelBus"
      "yRatio\022\014\n\004busy\030\001 \002(\r\022\r\n\005total\030\002 \002(\r\"\233\001\n\r"
      "GossipMessage\022 \n\003cbr\030\001 \001(\0132\021.ChannelBusy"
      "RatioH\000\022+\n\014linklayer_rx\030\002 \001(\0132\023.LinkLaye"
      "rReceptionH\000\0223\n\020facilitylayer_rx\030\003 \001(\0132\027"
      ".FacilityLayerReceptionH\000B\006\n\004kind*1\n\017Lif"
      "ecycleAction\022\016\n\nSOFT_RESET\020\000\022\016\n\nHARD_RES"
      "ET\020\001*J\n\021LinkLayerPriority\022\016\n\nBACKGROUND\020"
      "\000\022\017\n\013BEST_EFFORT\020\001\022\t\n\005VIDEO\020\002\022\t\n\005VOICE\020\003"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1560);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "etsi_msg_interface.proto", &protobuf_RegisterTypes);
  ::protobuf_cam_5finterface_2eproto::AddDescriptors();
  ::protobuf_cpm_5finterface_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_etsi_5fmsg_5finterface_2eproto
const ::google::protobuf::EnumDescriptor* CommandResponse_Status_descriptor() {
  protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fmsg_5finterface_2eproto::file_level_enum_descriptors[0];
}
bool CommandResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CommandResponse_Status CommandResponse::SUCCESS;
const CommandResponse_Status CommandResponse::FAILURE;
const CommandResponse_Status CommandResponse::UNKNOWN;
const CommandResponse_Status CommandResponse::NOT_IMPLEMENTED;
const CommandResponse_Status CommandResponse::Status_MIN;
const CommandResponse_Status CommandResponse::Status_MAX;
const int CommandResponse::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LifecycleAction_descriptor() {
  protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fmsg_5finterface_2eproto::file_level_enum_descriptors[1];
}
bool LifecycleAction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LinkLayerPriority_descriptor() {
  protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etsi_5fmsg_5finterface_2eproto::file_level_enum_descriptors[2];
}
bool LinkLayerPriority_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CommandRequest::InitAsDefaultInstance() {
  ::_CommandRequest_default_instance_.lifecycle_ = 0;
  ::_CommandRequest_default_instance_.linklayer_tx_ = const_cast< ::LinkLayerTransmission*>(
      ::LinkLayerTransmission::internal_default_instance());
  ::_CommandRequest_default_instance_.radio_cfg_ = const_cast< ::RadioConfiguration*>(
      ::RadioConfiguration::internal_default_instance());
  ::_CommandRequest_default_instance_.facilitieslayer_tx_ = const_cast< ::FacilityLayerTransmission*>(
      ::FacilityLayerTransmission::internal_default_instance());
}
void CommandRequest::set_allocated_linklayer_tx(::LinkLayerTransmission* linklayer_tx) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (linklayer_tx) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      linklayer_tx = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, linklayer_tx, submessage_arena);
    }
    set_has_linklayer_tx();
    kind_.linklayer_tx_ = linklayer_tx;
  }
  // @@protoc_insertion_point(field_set_allocated:CommandRequest.linklayer_tx)
}
void CommandRequest::set_allocated_radio_cfg(::RadioConfiguration* radio_cfg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (radio_cfg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      radio_cfg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, radio_cfg, submessage_arena);
    }
    set_has_radio_cfg();
    kind_.radio_cfg_ = radio_cfg;
  }
  // @@protoc_insertion_point(field_set_allocated:CommandRequest.radio_cfg)
}
void CommandRequest::set_allocated_facilitieslayer_tx(::FacilityLayerTransmission* facilitieslayer_tx) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (facilitieslayer_tx) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      facilitieslayer_tx = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, facilitieslayer_tx, submessage_arena);
    }
    set_has_facilitieslayer_tx();
    kind_.facilitieslayer_tx_ = facilitieslayer_tx;
  }
  // @@protoc_insertion_point(field_set_allocated:CommandRequest.facilitieslayer_tx)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommandRequest::kLifecycleFieldNumber;
const int CommandRequest::kLinklayerTxFieldNumber;
const int CommandRequest::kRadioCfgFieldNumber;
const int CommandRequest::kFacilitieslayerTxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommandRequest::CommandRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_CommandRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CommandRequest)
}
CommandRequest::CommandRequest(const CommandRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_kind();
  switch (from.kind_case()) {
    case kLifecycle: {
      set_lifecycle(from.lifecycle());
      break;
    }
    case kLinklayerTx: {
      mutable_linklayer_tx()->::LinkLayerTransmission::MergeFrom(from.linklayer_tx());
      break;
    }
    case kRadioCfg: {
      mutable_radio_cfg()->::RadioConfiguration::MergeFrom(from.radio_cfg());
      break;
    }
    case kFacilitieslayerTx: {
      mutable_facilitieslayer_tx()->::FacilityLayerTransmission::MergeFrom(from.facilitieslayer_tx());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CommandRequest)
}

void CommandRequest::SharedCtor() {
  clear_has_kind();
}

CommandRequest::~CommandRequest() {
  // @@protoc_insertion_point(destructor:CommandRequest)
  SharedDtor();
}

void CommandRequest::SharedDtor() {
  if (has_kind()) {
    clear_kind();
  }
}

void CommandRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CommandRequest::descriptor() {
  ::protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommandRequest& CommandRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_CommandRequest.base);
  return *internal_default_instance();
}


void CommandRequest::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:CommandRequest)
  switch (kind_case()) {
    case kLifecycle: {
      // No need to clear
      break;
    }
    case kLinklayerTx: {
      delete kind_.linklayer_tx_;
      break;
    }
    case kRadioCfg: {
      delete kind_.radio_cfg_;
      break;
    }
    case kFacilitieslayerTx: {
      delete kind_.facilitieslayer_tx_;
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KIND_NOT_SET;
}


void CommandRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CommandRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_kind();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CommandRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CommandRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .LifecycleAction lifecycle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::LifecycleAction_IsValid(value)) {
            set_lifecycle(static_cast< ::LifecycleAction >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .LinkLayerTransmission linklayer_tx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linklayer_tx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .RadioConfiguration radio_cfg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_radio_cfg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .FacilityLayerTransmission facilitieslayer_tx = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_facilitieslayer_tx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CommandRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CommandRequest)
  return false;
#undef DO_
}

void CommandRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CommandRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (kind_case()) {
    case kLifecycle:
      ::google::protobuf::internal::WireFormatLite::WriteEnum(
        1, this->lifecycle(), output);
      break;
    case kLinklayerTx:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_linklayer_tx(), output);
      break;
    case kRadioCfg:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_radio_cfg(), output);
      break;
    case kFacilitieslayerTx:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_facilitieslayer_tx(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CommandRequest)
}

::google::protobuf::uint8* CommandRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CommandRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (kind_case()) {
    case kLifecycle:
      target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
        1, this->lifecycle(), target);
      break;
    case kLinklayerTx:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_linklayer_tx(), deterministic, target);
      break;
    case kRadioCfg:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, this->_internal_radio_cfg(), deterministic, target);
      break;
    case kFacilitieslayerTx:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_facilitieslayer_tx(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CommandRequest)
  return target;
}

size_t CommandRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CommandRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (kind_case()) {
    // optional .LifecycleAction lifecycle = 1;
    case kLifecycle: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->lifecycle());
      break;
    }
    // optional .LinkLayerTransmission linklayer_tx = 2;
    case kLinklayerTx: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.linklayer_tx_);
      break;
    }
    // optional .RadioConfiguration radio_cfg = 3;
    case kRadioCfg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.radio_cfg_);
      break;
    }
    // optional .FacilityLayerTransmission facilitieslayer_tx = 4;
    case kFacilitieslayerTx: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.facilitieslayer_tx_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommandRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CommandRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CommandRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommandRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CommandRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CommandRequest)
    MergeFrom(*source);
  }
}

void CommandRequest::MergeFrom(const CommandRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CommandRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.kind_case()) {
    case kLifecycle: {
      set_lifecycle(from.lifecycle());
      break;
    }
    case kLinklayerTx: {
      mutable_linklayer_tx()->::LinkLayerTransmission::MergeFrom(from.linklayer_tx());
      break;
    }
    case kRadioCfg: {
      mutable_radio_cfg()->::RadioConfiguration::MergeFrom(from.radio_cfg());
      break;
    }
    case kFacilitieslayerTx: {
      mutable_facilitieslayer_tx()->::FacilityLayerTransmission::MergeFrom(from.facilitieslayer_tx());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
}

void CommandRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CommandRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommandRequest::CopyFrom(const CommandRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CommandRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandRequest::IsInitialized() const {
  switch (kind_case()) {
    case kLifecycle: {
      break;
    }
    case kLinklayerTx: {
      if (has_linklayer_tx()) {
        if (!this->linklayer_tx().IsInitialized()) return false;
      }
      break;
    }
    case kRadioCfg: {
      break;
    }
    case kFacilitieslayerTx: {
      if (has_facilitieslayer_tx()) {
        if (!this->facilitieslayer_tx().IsInitialized()) return false;
      }
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  return true;
}

void CommandRequest::Swap(CommandRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommandRequest::InternalSwap(CommandRequest* other) {
  using std::swap;
  swap(kind_, other->kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CommandRequest::GetMetadata() const {
  protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommandResponse::InitAsDefaultInstance() {
  ::_CommandResponse_default_instance_._instance.get_mutable()->data_ = const_cast< ::CommandResponseData*>(
      ::CommandResponseData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommandResponse::kStatusFieldNumber;
const int CommandResponse::kMessageFieldNumber;
const int CommandResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommandResponse::CommandResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_CommandResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CommandResponse)
}
CommandResponse::CommandResponse(const CommandResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_data()) {
    data_ = new ::CommandResponseData(*from.data_);
  } else {
    data_ = NULL;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:CommandResponse)
}

void CommandResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&data_)) + sizeof(status_));
}

CommandResponse::~CommandResponse() {
  // @@protoc_insertion_point(destructor:CommandResponse)
  SharedDtor();
}

void CommandResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void CommandResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CommandResponse::descriptor() {
  ::protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommandResponse& CommandResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_CommandResponse.base);
  return *internal_default_instance();
}


void CommandResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CommandResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      message_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(data_ != NULL);
      data_->Clear();
    }
  }
  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CommandResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CommandResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .CommandResponse.Status status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CommandResponse_Status_IsValid(value)) {
            set_status(static_cast< ::CommandResponse_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CommandResponse.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CommandResponseData data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CommandResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CommandResponse)
  return false;
#undef DO_
}

void CommandResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CommandResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .CommandResponse.Status status = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional string message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CommandResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // optional .CommandResponseData data = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CommandResponse)
}

::google::protobuf::uint8* CommandResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CommandResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .CommandResponse.Status status = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional string message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CommandResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // optional .CommandResponseData data = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_data(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CommandResponse)
  return target;
}

size_t CommandResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CommandResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .CommandResponse.Status status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional .CommandResponseData data = 3;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommandResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CommandResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CommandResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommandResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CommandResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CommandResponse)
    MergeFrom(*source);
  }
}

void CommandResponse::MergeFrom(const CommandResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CommandResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_data()->::CommandResponseData::MergeFrom(from.data());
    }
    if (cached_has_bits & 0x00000004u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CommandResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CommandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommandResponse::CopyFrom(const CommandResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CommandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void CommandResponse::Swap(CommandResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommandResponse::InternalSwap(CommandResponse* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_, other->data_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CommandResponse::GetMetadata() const {
  protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommandResponseData::InitAsDefaultInstance() {
  ::_CommandResponseData_default_instance_.radio_cfg_ = const_cast< ::RadioConfiguration*>(
      ::RadioConfiguration::internal_default_instance());
}
void CommandResponseData::set_allocated_radio_cfg(::RadioConfiguration* radio_cfg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (radio_cfg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      radio_cfg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, radio_cfg, submessage_arena);
    }
    set_has_radio_cfg();
    kind_.radio_cfg_ = radio_cfg;
  }
  // @@protoc_insertion_point(field_set_allocated:CommandResponseData.radio_cfg)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommandResponseData::kRadioCfgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommandResponseData::CommandResponseData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_CommandResponseData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CommandResponseData)
}
CommandResponseData::CommandResponseData(const CommandResponseData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_kind();
  switch (from.kind_case()) {
    case kRadioCfg: {
      mutable_radio_cfg()->::RadioConfiguration::MergeFrom(from.radio_cfg());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CommandResponseData)
}

void CommandResponseData::SharedCtor() {
  clear_has_kind();
}

CommandResponseData::~CommandResponseData() {
  // @@protoc_insertion_point(destructor:CommandResponseData)
  SharedDtor();
}

void CommandResponseData::SharedDtor() {
  if (has_kind()) {
    clear_kind();
  }
}

void CommandResponseData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CommandResponseData::descriptor() {
  ::protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommandResponseData& CommandResponseData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_CommandResponseData.base);
  return *internal_default_instance();
}


void CommandResponseData::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:CommandResponseData)
  switch (kind_case()) {
    case kRadioCfg: {
      delete kind_.radio_cfg_;
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KIND_NOT_SET;
}


void CommandResponseData::Clear() {
// @@protoc_insertion_point(message_clear_start:CommandResponseData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_kind();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CommandResponseData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CommandResponseData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .RadioConfiguration radio_cfg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_radio_cfg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CommandResponseData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CommandResponseData)
  return false;
#undef DO_
}

void CommandResponseData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CommandResponseData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .RadioConfiguration radio_cfg = 1;
  if (has_radio_cfg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_radio_cfg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CommandResponseData)
}

::google::protobuf::uint8* CommandResponseData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CommandResponseData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .RadioConfiguration radio_cfg = 1;
  if (has_radio_cfg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_radio_cfg(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CommandResponseData)
  return target;
}

size_t CommandResponseData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CommandResponseData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (kind_case()) {
    // optional .RadioConfiguration radio_cfg = 1;
    case kRadioCfg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.radio_cfg_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommandResponseData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CommandResponseData)
  GOOGLE_DCHECK_NE(&from, this);
  const CommandResponseData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommandResponseData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CommandResponseData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CommandResponseData)
    MergeFrom(*source);
  }
}

void CommandResponseData::MergeFrom(const CommandResponseData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CommandResponseData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.kind_case()) {
    case kRadioCfg: {
      mutable_radio_cfg()->::RadioConfiguration::MergeFrom(from.radio_cfg());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
}

void CommandResponseData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CommandResponseData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommandResponseData::CopyFrom(const CommandResponseData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CommandResponseData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandResponseData::IsInitialized() const {
  return true;
}

void CommandResponseData::Swap(CommandResponseData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommandResponseData::InternalSwap(CommandResponseData* other) {
  using std::swap;
  swap(kind_, other->kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CommandResponseData::GetMetadata() const {
  protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RadioConfiguration::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadioConfiguration::kAddressFieldNumber;
const int RadioConfiguration::kChannelFrequencyMhzFieldNumber;
const int RadioConfiguration::kFilterUnicastDestinationFieldNumber;
const int RadioConfiguration::kDefaultTxPowerCbmFieldNumber;
const int RadioConfiguration::kDefaultTxDatarate500KbpsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadioConfiguration::RadioConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_RadioConfiguration.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RadioConfiguration)
}
RadioConfiguration::RadioConfiguration(const RadioConfiguration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address()) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  ::memcpy(&channel_frequency_mhz_, &from.channel_frequency_mhz_,
    static_cast<size_t>(reinterpret_cast<char*>(&default_tx_datarate_500kbps_) -
    reinterpret_cast<char*>(&channel_frequency_mhz_)) + sizeof(default_tx_datarate_500kbps_));
  // @@protoc_insertion_point(copy_constructor:RadioConfiguration)
}

void RadioConfiguration::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&channel_frequency_mhz_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&default_tx_datarate_500kbps_) -
      reinterpret_cast<char*>(&channel_frequency_mhz_)) + sizeof(default_tx_datarate_500kbps_));
}

RadioConfiguration::~RadioConfiguration() {
  // @@protoc_insertion_point(destructor:RadioConfiguration)
  SharedDtor();
}

void RadioConfiguration::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RadioConfiguration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RadioConfiguration::descriptor() {
  ::protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RadioConfiguration& RadioConfiguration::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_RadioConfiguration.base);
  return *internal_default_instance();
}


void RadioConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:RadioConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    address_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&channel_frequency_mhz_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_tx_datarate_500kbps_) -
        reinterpret_cast<char*>(&channel_frequency_mhz_)) + sizeof(default_tx_datarate_500kbps_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RadioConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RadioConfiguration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 channel_frequency_mhz = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_channel_frequency_mhz();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_frequency_mhz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool filter_unicast_destination = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_filter_unicast_destination();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &filter_unicast_destination_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 default_tx_power_cbm = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_default_tx_power_cbm();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &default_tx_power_cbm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 default_tx_datarate_500kbps = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_default_tx_datarate_500kbps();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &default_tx_datarate_500kbps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RadioConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RadioConfiguration)
  return false;
#undef DO_
}

void RadioConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RadioConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->address(), output);
  }

  // optional uint32 channel_frequency_mhz = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->channel_frequency_mhz(), output);
  }

  // optional bool filter_unicast_destination = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->filter_unicast_destination(), output);
  }

  // optional sint32 default_tx_power_cbm = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->default_tx_power_cbm(), output);
  }

  // optional uint32 default_tx_datarate_500kbps = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->default_tx_datarate_500kbps(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RadioConfiguration)
}

::google::protobuf::uint8* RadioConfiguration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RadioConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes address = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->address(), target);
  }

  // optional uint32 channel_frequency_mhz = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->channel_frequency_mhz(), target);
  }

  // optional bool filter_unicast_destination = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->filter_unicast_destination(), target);
  }

  // optional sint32 default_tx_power_cbm = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->default_tx_power_cbm(), target);
  }

  // optional uint32 default_tx_datarate_500kbps = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->default_tx_datarate_500kbps(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RadioConfiguration)
  return target;
}

size_t RadioConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RadioConfiguration)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes address = 1;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->address());
    }

    // optional uint32 channel_frequency_mhz = 2;
    if (has_channel_frequency_mhz()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->channel_frequency_mhz());
    }

    // optional bool filter_unicast_destination = 3;
    if (has_filter_unicast_destination()) {
      total_size += 1 + 1;
    }

    // optional sint32 default_tx_power_cbm = 4;
    if (has_default_tx_power_cbm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->default_tx_power_cbm());
    }

    // optional uint32 default_tx_datarate_500kbps = 5;
    if (has_default_tx_datarate_500kbps()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->default_tx_datarate_500kbps());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RadioConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RadioConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const RadioConfiguration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadioConfiguration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RadioConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RadioConfiguration)
    MergeFrom(*source);
  }
}

void RadioConfiguration::MergeFrom(const RadioConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RadioConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_address();
      address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
    }
    if (cached_has_bits & 0x00000002u) {
      channel_frequency_mhz_ = from.channel_frequency_mhz_;
    }
    if (cached_has_bits & 0x00000004u) {
      filter_unicast_destination_ = from.filter_unicast_destination_;
    }
    if (cached_has_bits & 0x00000008u) {
      default_tx_power_cbm_ = from.default_tx_power_cbm_;
    }
    if (cached_has_bits & 0x00000010u) {
      default_tx_datarate_500kbps_ = from.default_tx_datarate_500kbps_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RadioConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RadioConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadioConfiguration::CopyFrom(const RadioConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RadioConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadioConfiguration::IsInitialized() const {
  return true;
}

void RadioConfiguration::Swap(RadioConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadioConfiguration::InternalSwap(RadioConfiguration* other) {
  using std::swap;
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(channel_frequency_mhz_, other->channel_frequency_mhz_);
  swap(filter_unicast_destination_, other->filter_unicast_destination_);
  swap(default_tx_power_cbm_, other->default_tx_power_cbm_);
  swap(default_tx_datarate_500kbps_, other->default_tx_datarate_500kbps_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RadioConfiguration::GetMetadata() const {
  protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LinkLayerTransmission::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinkLayerTransmission::kSourceFieldNumber;
const int LinkLayerTransmission::kDestinationFieldNumber;
const int LinkLayerTransmission::kPriorityFieldNumber;
const int LinkLayerTransmission::kChannelFieldNumber;
const int LinkLayerTransmission::kDatarate500KbpsFieldNumber;
const int LinkLayerTransmission::kPowerCbmFieldNumber;
const int LinkLayerTransmission::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinkLayerTransmission::LinkLayerTransmission()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_LinkLayerTransmission.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LinkLayerTransmission)
}
LinkLayerTransmission::LinkLayerTransmission(const LinkLayerTransmission& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source()) {
    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  destination_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_destination()) {
    destination_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_);
  }
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_payload()) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  ::memcpy(&priority_, &from.priority_,
    static_cast<size_t>(reinterpret_cast<char*>(&power_cbm_) -
    reinterpret_cast<char*>(&priority_)) + sizeof(power_cbm_));
  // @@protoc_insertion_point(copy_constructor:LinkLayerTransmission)
}

void LinkLayerTransmission::SharedCtor() {
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&priority_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&power_cbm_) -
      reinterpret_cast<char*>(&priority_)) + sizeof(power_cbm_));
}

LinkLayerTransmission::~LinkLayerTransmission() {
  // @@protoc_insertion_point(destructor:LinkLayerTransmission)
  SharedDtor();
}

void LinkLayerTransmission::SharedDtor() {
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LinkLayerTransmission::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LinkLayerTransmission::descriptor() {
  ::protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinkLayerTransmission& LinkLayerTransmission::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_LinkLayerTransmission.base);
  return *internal_default_instance();
}


void LinkLayerTransmission::Clear() {
// @@protoc_insertion_point(message_clear_start:LinkLayerTransmission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      source_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      destination_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      payload_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 120u) {
    ::memset(&priority_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&power_cbm_) -
        reinterpret_cast<char*>(&priority_)) + sizeof(power_cbm_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LinkLayerTransmission::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LinkLayerTransmission)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes destination = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_destination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .LinkLayerPriority priority = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::LinkLayerPriority_IsValid(value)) {
            set_priority(static_cast< ::LinkLayerPriority >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 channel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_channel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 datarate_500kbps = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_datarate_500kbps();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &datarate_500kbps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 power_cbm = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_power_cbm();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &power_cbm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes payload = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LinkLayerTransmission)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LinkLayerTransmission)
  return false;
#undef DO_
}

void LinkLayerTransmission::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LinkLayerTransmission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes source = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->source(), output);
  }

  // required bytes destination = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->destination(), output);
  }

  // required .LinkLayerPriority priority = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->priority(), output);
  }

  // optional uint32 channel = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->channel(), output);
  }

  // optional uint32 datarate_500kbps = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->datarate_500kbps(), output);
  }

  // optional sint32 power_cbm = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->power_cbm(), output);
  }

  // required bytes payload = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->payload(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LinkLayerTransmission)
}

::google::protobuf::uint8* LinkLayerTransmission::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LinkLayerTransmission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes source = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->source(), target);
  }

  // required bytes destination = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->destination(), target);
  }

  // required .LinkLayerPriority priority = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->priority(), target);
  }

  // optional uint32 channel = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->channel(), target);
  }

  // optional uint32 datarate_500kbps = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->datarate_500kbps(), target);
  }

  // optional sint32 power_cbm = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->power_cbm(), target);
  }

  // required bytes payload = 10;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->payload(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LinkLayerTransmission)
  return target;
}

size_t LinkLayerTransmission::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:LinkLayerTransmission)
  size_t total_size = 0;

  if (has_destination()) {
    // required bytes destination = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->destination());
  }

  if (has_payload()) {
    // required bytes payload = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  if (has_priority()) {
    // required .LinkLayerPriority priority = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->priority());
  }

  return total_size;
}
size_t LinkLayerTransmission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LinkLayerTransmission)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required bytes destination = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->destination());

    // required bytes payload = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());

    // required .LinkLayerPriority priority = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->priority());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bytes source = 1;
  if (has_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->source());
  }

  if (_has_bits_[0 / 32] & 112u) {
    // optional uint32 channel = 4;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->channel());
    }

    // optional uint32 datarate_500kbps = 5;
    if (has_datarate_500kbps()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->datarate_500kbps());
    }

    // optional sint32 power_cbm = 6;
    if (has_power_cbm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->power_cbm());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinkLayerTransmission::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LinkLayerTransmission)
  GOOGLE_DCHECK_NE(&from, this);
  const LinkLayerTransmission* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinkLayerTransmission>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LinkLayerTransmission)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LinkLayerTransmission)
    MergeFrom(*source);
  }
}

void LinkLayerTransmission::MergeFrom(const LinkLayerTransmission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LinkLayerTransmission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_source();
      source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_destination();
      destination_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_payload();
      payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
    }
    if (cached_has_bits & 0x00000008u) {
      priority_ = from.priority_;
    }
    if (cached_has_bits & 0x00000010u) {
      channel_ = from.channel_;
    }
    if (cached_has_bits & 0x00000020u) {
      datarate_500kbps_ = from.datarate_500kbps_;
    }
    if (cached_has_bits & 0x00000040u) {
      power_cbm_ = from.power_cbm_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LinkLayerTransmission::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LinkLayerTransmission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinkLayerTransmission::CopyFrom(const LinkLayerTransmission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LinkLayerTransmission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkLayerTransmission::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  return true;
}

void LinkLayerTransmission::Swap(LinkLayerTransmission* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinkLayerTransmission::InternalSwap(LinkLayerTransmission* other) {
  using std::swap;
  source_.Swap(&other->source_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  destination_.Swap(&other->destination_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(priority_, other->priority_);
  swap(channel_, other->channel_);
  swap(datarate_500kbps_, other->datarate_500kbps_);
  swap(power_cbm_, other->power_cbm_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LinkLayerTransmission::GetMetadata() const {
  protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LinkLayerReception::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinkLayerReception::kSourceFieldNumber;
const int LinkLayerReception::kDestinationFieldNumber;
const int LinkLayerReception::kChannelFieldNumber;
const int LinkLayerReception::kPowerCbmFieldNumber;
const int LinkLayerReception::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinkLayerReception::LinkLayerReception()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_LinkLayerReception.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LinkLayerReception)
}
LinkLayerReception::LinkLayerReception(const LinkLayerReception& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source()) {
    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  destination_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_destination()) {
    destination_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_);
  }
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_payload()) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  ::memcpy(&channel_, &from.channel_,
    static_cast<size_t>(reinterpret_cast<char*>(&power_cbm_) -
    reinterpret_cast<char*>(&channel_)) + sizeof(power_cbm_));
  // @@protoc_insertion_point(copy_constructor:LinkLayerReception)
}

void LinkLayerReception::SharedCtor() {
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&power_cbm_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(power_cbm_));
}

LinkLayerReception::~LinkLayerReception() {
  // @@protoc_insertion_point(destructor:LinkLayerReception)
  SharedDtor();
}

void LinkLayerReception::SharedDtor() {
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LinkLayerReception::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LinkLayerReception::descriptor() {
  ::protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinkLayerReception& LinkLayerReception::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_LinkLayerReception.base);
  return *internal_default_instance();
}


void LinkLayerReception::Clear() {
// @@protoc_insertion_point(message_clear_start:LinkLayerReception)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      source_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      destination_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      payload_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&channel_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&power_cbm_) -
        reinterpret_cast<char*>(&channel_)) + sizeof(power_cbm_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LinkLayerReception::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LinkLayerReception)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes destination = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_destination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 channel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_channel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 power_cbm = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_power_cbm();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &power_cbm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes payload = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LinkLayerReception)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LinkLayerReception)
  return false;
#undef DO_
}

void LinkLayerReception::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LinkLayerReception)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes source = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->source(), output);
  }

  // required bytes destination = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->destination(), output);
  }

  // optional uint32 channel = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->channel(), output);
  }

  // optional sint32 power_cbm = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->power_cbm(), output);
  }

  // required bytes payload = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->payload(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LinkLayerReception)
}

::google::protobuf::uint8* LinkLayerReception::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LinkLayerReception)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes source = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->source(), target);
  }

  // required bytes destination = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->destination(), target);
  }

  // optional uint32 channel = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->channel(), target);
  }

  // optional sint32 power_cbm = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->power_cbm(), target);
  }

  // required bytes payload = 10;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->payload(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LinkLayerReception)
  return target;
}

size_t LinkLayerReception::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:LinkLayerReception)
  size_t total_size = 0;

  if (has_source()) {
    // required bytes source = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->source());
  }

  if (has_destination()) {
    // required bytes destination = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->destination());
  }

  if (has_payload()) {
    // required bytes payload = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  return total_size;
}
size_t LinkLayerReception::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LinkLayerReception)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required bytes source = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->source());

    // required bytes destination = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->destination());

    // required bytes payload = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 24u) {
    // optional uint32 channel = 4;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->channel());
    }

    // optional sint32 power_cbm = 6;
    if (has_power_cbm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->power_cbm());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinkLayerReception::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LinkLayerReception)
  GOOGLE_DCHECK_NE(&from, this);
  const LinkLayerReception* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinkLayerReception>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LinkLayerReception)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LinkLayerReception)
    MergeFrom(*source);
  }
}

void LinkLayerReception::MergeFrom(const LinkLayerReception& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LinkLayerReception)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_source();
      source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_destination();
      destination_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_payload();
      payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
    }
    if (cached_has_bits & 0x00000008u) {
      channel_ = from.channel_;
    }
    if (cached_has_bits & 0x00000010u) {
      power_cbm_ = from.power_cbm_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LinkLayerReception::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LinkLayerReception)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinkLayerReception::CopyFrom(const LinkLayerReception& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LinkLayerReception)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkLayerReception::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void LinkLayerReception::Swap(LinkLayerReception* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinkLayerReception::InternalSwap(LinkLayerReception* other) {
  using std::swap;
  source_.Swap(&other->source_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  destination_.Swap(&other->destination_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(channel_, other->channel_);
  swap(power_cbm_, other->power_cbm_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LinkLayerReception::GetMetadata() const {
  protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FacilityLayerTransmission::InitAsDefaultInstance() {
  ::_FacilityLayerTransmission_default_instance_._instance.get_mutable()->msg_ = const_cast< ::FacilityLayerMessage*>(
      ::FacilityLayerMessage::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FacilityLayerTransmission::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FacilityLayerTransmission::FacilityLayerTransmission()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_FacilityLayerTransmission.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:FacilityLayerTransmission)
}
FacilityLayerTransmission::FacilityLayerTransmission(const FacilityLayerTransmission& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg()) {
    msg_ = new ::FacilityLayerMessage(*from.msg_);
  } else {
    msg_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:FacilityLayerTransmission)
}

void FacilityLayerTransmission::SharedCtor() {
  msg_ = NULL;
}

FacilityLayerTransmission::~FacilityLayerTransmission() {
  // @@protoc_insertion_point(destructor:FacilityLayerTransmission)
  SharedDtor();
}

void FacilityLayerTransmission::SharedDtor() {
  if (this != internal_default_instance()) delete msg_;
}

void FacilityLayerTransmission::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FacilityLayerTransmission::descriptor() {
  ::protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FacilityLayerTransmission& FacilityLayerTransmission::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_FacilityLayerTransmission.base);
  return *internal_default_instance();
}


void FacilityLayerTransmission::Clear() {
// @@protoc_insertion_point(message_clear_start:FacilityLayerTransmission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(msg_ != NULL);
    msg_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FacilityLayerTransmission::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FacilityLayerTransmission)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .FacilityLayerMessage msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FacilityLayerTransmission)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FacilityLayerTransmission)
  return false;
#undef DO_
}

void FacilityLayerTransmission::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FacilityLayerTransmission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .FacilityLayerMessage msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FacilityLayerTransmission)
}

::google::protobuf::uint8* FacilityLayerTransmission::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FacilityLayerTransmission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .FacilityLayerMessage msg = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_msg(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FacilityLayerTransmission)
  return target;
}

size_t FacilityLayerTransmission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FacilityLayerTransmission)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .FacilityLayerMessage msg = 1;
  if (has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *msg_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FacilityLayerTransmission::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FacilityLayerTransmission)
  GOOGLE_DCHECK_NE(&from, this);
  const FacilityLayerTransmission* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FacilityLayerTransmission>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FacilityLayerTransmission)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FacilityLayerTransmission)
    MergeFrom(*source);
  }
}

void FacilityLayerTransmission::MergeFrom(const FacilityLayerTransmission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FacilityLayerTransmission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg()) {
    mutable_msg()->::FacilityLayerMessage::MergeFrom(from.msg());
  }
}

void FacilityLayerTransmission::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FacilityLayerTransmission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FacilityLayerTransmission::CopyFrom(const FacilityLayerTransmission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FacilityLayerTransmission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FacilityLayerTransmission::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_msg()) {
    if (!this->msg_->IsInitialized()) return false;
  }
  return true;
}

void FacilityLayerTransmission::Swap(FacilityLayerTransmission* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FacilityLayerTransmission::InternalSwap(FacilityLayerTransmission* other) {
  using std::swap;
  swap(msg_, other->msg_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FacilityLayerTransmission::GetMetadata() const {
  protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FacilityLayerReception::InitAsDefaultInstance() {
  ::_FacilityLayerReception_default_instance_._instance.get_mutable()->msg_ = const_cast< ::FacilityLayerMessage*>(
      ::FacilityLayerMessage::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FacilityLayerReception::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FacilityLayerReception::FacilityLayerReception()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_FacilityLayerReception.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:FacilityLayerReception)
}
FacilityLayerReception::FacilityLayerReception(const FacilityLayerReception& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg()) {
    msg_ = new ::FacilityLayerMessage(*from.msg_);
  } else {
    msg_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:FacilityLayerReception)
}

void FacilityLayerReception::SharedCtor() {
  msg_ = NULL;
}

FacilityLayerReception::~FacilityLayerReception() {
  // @@protoc_insertion_point(destructor:FacilityLayerReception)
  SharedDtor();
}

void FacilityLayerReception::SharedDtor() {
  if (this != internal_default_instance()) delete msg_;
}

void FacilityLayerReception::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FacilityLayerReception::descriptor() {
  ::protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FacilityLayerReception& FacilityLayerReception::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_FacilityLayerReception.base);
  return *internal_default_instance();
}


void FacilityLayerReception::Clear() {
// @@protoc_insertion_point(message_clear_start:FacilityLayerReception)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(msg_ != NULL);
    msg_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FacilityLayerReception::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FacilityLayerReception)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .FacilityLayerMessage msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FacilityLayerReception)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FacilityLayerReception)
  return false;
#undef DO_
}

void FacilityLayerReception::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FacilityLayerReception)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .FacilityLayerMessage msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FacilityLayerReception)
}

::google::protobuf::uint8* FacilityLayerReception::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FacilityLayerReception)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .FacilityLayerMessage msg = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_msg(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FacilityLayerReception)
  return target;
}

size_t FacilityLayerReception::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FacilityLayerReception)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .FacilityLayerMessage msg = 1;
  if (has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *msg_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FacilityLayerReception::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FacilityLayerReception)
  GOOGLE_DCHECK_NE(&from, this);
  const FacilityLayerReception* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FacilityLayerReception>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FacilityLayerReception)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FacilityLayerReception)
    MergeFrom(*source);
  }
}

void FacilityLayerReception::MergeFrom(const FacilityLayerReception& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FacilityLayerReception)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg()) {
    mutable_msg()->::FacilityLayerMessage::MergeFrom(from.msg());
  }
}

void FacilityLayerReception::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FacilityLayerReception)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FacilityLayerReception::CopyFrom(const FacilityLayerReception& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FacilityLayerReception)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FacilityLayerReception::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_msg()) {
    if (!this->msg_->IsInitialized()) return false;
  }
  return true;
}

void FacilityLayerReception::Swap(FacilityLayerReception* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FacilityLayerReception::InternalSwap(FacilityLayerReception* other) {
  using std::swap;
  swap(msg_, other->msg_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FacilityLayerReception::GetMetadata() const {
  protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FacilityLayerMessage::InitAsDefaultInstance() {
  ::_FacilityLayerMessage_default_instance_.cam_msg_ = const_cast< ::CAMessage*>(
      ::CAMessage::internal_default_instance());
  ::_FacilityLayerMessage_default_instance_.cpm_msg_ = const_cast< ::CPMessage*>(
      ::CPMessage::internal_default_instance());
}
void FacilityLayerMessage::set_allocated_cam_msg(::CAMessage* cam_msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (cam_msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cam_msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cam_msg, submessage_arena);
    }
    set_has_cam_msg();
    kind_.cam_msg_ = cam_msg;
  }
  // @@protoc_insertion_point(field_set_allocated:FacilityLayerMessage.cam_msg)
}
void FacilityLayerMessage::clear_cam_msg() {
  if (has_cam_msg()) {
    delete kind_.cam_msg_;
    clear_has_kind();
  }
}
void FacilityLayerMessage::set_allocated_cpm_msg(::CPMessage* cpm_msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (cpm_msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cpm_msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpm_msg, submessage_arena);
    }
    set_has_cpm_msg();
    kind_.cpm_msg_ = cpm_msg;
  }
  // @@protoc_insertion_point(field_set_allocated:FacilityLayerMessage.cpm_msg)
}
void FacilityLayerMessage::clear_cpm_msg() {
  if (has_cpm_msg()) {
    delete kind_.cpm_msg_;
    clear_has_kind();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FacilityLayerMessage::kCamMsgFieldNumber;
const int FacilityLayerMessage::kCpmMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FacilityLayerMessage::FacilityLayerMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_FacilityLayerMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:FacilityLayerMessage)
}
FacilityLayerMessage::FacilityLayerMessage(const FacilityLayerMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_kind();
  switch (from.kind_case()) {
    case kCamMsg: {
      mutable_cam_msg()->::CAMessage::MergeFrom(from.cam_msg());
      break;
    }
    case kCpmMsg: {
      mutable_cpm_msg()->::CPMessage::MergeFrom(from.cpm_msg());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:FacilityLayerMessage)
}

void FacilityLayerMessage::SharedCtor() {
  clear_has_kind();
}

FacilityLayerMessage::~FacilityLayerMessage() {
  // @@protoc_insertion_point(destructor:FacilityLayerMessage)
  SharedDtor();
}

void FacilityLayerMessage::SharedDtor() {
  if (has_kind()) {
    clear_kind();
  }
}

void FacilityLayerMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FacilityLayerMessage::descriptor() {
  ::protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FacilityLayerMessage& FacilityLayerMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_FacilityLayerMessage.base);
  return *internal_default_instance();
}


void FacilityLayerMessage::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:FacilityLayerMessage)
  switch (kind_case()) {
    case kCamMsg: {
      delete kind_.cam_msg_;
      break;
    }
    case kCpmMsg: {
      delete kind_.cpm_msg_;
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KIND_NOT_SET;
}


void FacilityLayerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:FacilityLayerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_kind();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FacilityLayerMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FacilityLayerMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CAMessage cam_msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cam_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CPMessage cpm_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cpm_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FacilityLayerMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FacilityLayerMessage)
  return false;
#undef DO_
}

void FacilityLayerMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FacilityLayerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (kind_case()) {
    case kCamMsg:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_cam_msg(), output);
      break;
    case kCpmMsg:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_cpm_msg(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FacilityLayerMessage)
}

::google::protobuf::uint8* FacilityLayerMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FacilityLayerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (kind_case()) {
    case kCamMsg:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          1, this->_internal_cam_msg(), deterministic, target);
      break;
    case kCpmMsg:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_cpm_msg(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FacilityLayerMessage)
  return target;
}

size_t FacilityLayerMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FacilityLayerMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (kind_case()) {
    // optional .CAMessage cam_msg = 1;
    case kCamMsg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.cam_msg_);
      break;
    }
    // optional .CPMessage cpm_msg = 2;
    case kCpmMsg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.cpm_msg_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FacilityLayerMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FacilityLayerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const FacilityLayerMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FacilityLayerMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FacilityLayerMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FacilityLayerMessage)
    MergeFrom(*source);
  }
}

void FacilityLayerMessage::MergeFrom(const FacilityLayerMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FacilityLayerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.kind_case()) {
    case kCamMsg: {
      mutable_cam_msg()->::CAMessage::MergeFrom(from.cam_msg());
      break;
    }
    case kCpmMsg: {
      mutable_cpm_msg()->::CPMessage::MergeFrom(from.cpm_msg());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
}

void FacilityLayerMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FacilityLayerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FacilityLayerMessage::CopyFrom(const FacilityLayerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FacilityLayerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FacilityLayerMessage::IsInitialized() const {
  switch (kind_case()) {
    case kCamMsg: {
      if (has_cam_msg()) {
        if (!this->cam_msg().IsInitialized()) return false;
      }
      break;
    }
    case kCpmMsg: {
      if (has_cpm_msg()) {
        if (!this->cpm_msg().IsInitialized()) return false;
      }
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  return true;
}

void FacilityLayerMessage::Swap(FacilityLayerMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FacilityLayerMessage::InternalSwap(FacilityLayerMessage* other) {
  using std::swap;
  swap(kind_, other->kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FacilityLayerMessage::GetMetadata() const {
  protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChannelBusyRatio::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChannelBusyRatio::kBusyFieldNumber;
const int ChannelBusyRatio::kTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChannelBusyRatio::ChannelBusyRatio()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_ChannelBusyRatio.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChannelBusyRatio)
}
ChannelBusyRatio::ChannelBusyRatio(const ChannelBusyRatio& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&busy_, &from.busy_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_) -
    reinterpret_cast<char*>(&busy_)) + sizeof(total_));
  // @@protoc_insertion_point(copy_constructor:ChannelBusyRatio)
}

void ChannelBusyRatio::SharedCtor() {
  ::memset(&busy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_) -
      reinterpret_cast<char*>(&busy_)) + sizeof(total_));
}

ChannelBusyRatio::~ChannelBusyRatio() {
  // @@protoc_insertion_point(destructor:ChannelBusyRatio)
  SharedDtor();
}

void ChannelBusyRatio::SharedDtor() {
}

void ChannelBusyRatio::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChannelBusyRatio::descriptor() {
  ::protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChannelBusyRatio& ChannelBusyRatio::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_ChannelBusyRatio.base);
  return *internal_default_instance();
}


void ChannelBusyRatio::Clear() {
// @@protoc_insertion_point(message_clear_start:ChannelBusyRatio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&busy_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&total_) -
        reinterpret_cast<char*>(&busy_)) + sizeof(total_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChannelBusyRatio::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChannelBusyRatio)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 busy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_busy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &busy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 total = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_total();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChannelBusyRatio)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChannelBusyRatio)
  return false;
#undef DO_
}

void ChannelBusyRatio::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChannelBusyRatio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 busy = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->busy(), output);
  }

  // required uint32 total = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->total(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ChannelBusyRatio)
}

::google::protobuf::uint8* ChannelBusyRatio::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChannelBusyRatio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 busy = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->busy(), target);
  }

  // required uint32 total = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->total(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChannelBusyRatio)
  return target;
}

size_t ChannelBusyRatio::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ChannelBusyRatio)
  size_t total_size = 0;

  if (has_busy()) {
    // required uint32 busy = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->busy());
  }

  if (has_total()) {
    // required uint32 total = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total());
  }

  return total_size;
}
size_t ChannelBusyRatio::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChannelBusyRatio)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 busy = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->busy());

    // required uint32 total = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChannelBusyRatio::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChannelBusyRatio)
  GOOGLE_DCHECK_NE(&from, this);
  const ChannelBusyRatio* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChannelBusyRatio>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChannelBusyRatio)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChannelBusyRatio)
    MergeFrom(*source);
  }
}

void ChannelBusyRatio::MergeFrom(const ChannelBusyRatio& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChannelBusyRatio)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      busy_ = from.busy_;
    }
    if (cached_has_bits & 0x00000002u) {
      total_ = from.total_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChannelBusyRatio::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChannelBusyRatio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChannelBusyRatio::CopyFrom(const ChannelBusyRatio& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChannelBusyRatio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChannelBusyRatio::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ChannelBusyRatio::Swap(ChannelBusyRatio* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChannelBusyRatio::InternalSwap(ChannelBusyRatio* other) {
  using std::swap;
  swap(busy_, other->busy_);
  swap(total_, other->total_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChannelBusyRatio::GetMetadata() const {
  protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GossipMessage::InitAsDefaultInstance() {
  ::_GossipMessage_default_instance_.cbr_ = const_cast< ::ChannelBusyRatio*>(
      ::ChannelBusyRatio::internal_default_instance());
  ::_GossipMessage_default_instance_.linklayer_rx_ = const_cast< ::LinkLayerReception*>(
      ::LinkLayerReception::internal_default_instance());
  ::_GossipMessage_default_instance_.facilitylayer_rx_ = const_cast< ::FacilityLayerReception*>(
      ::FacilityLayerReception::internal_default_instance());
}
void GossipMessage::set_allocated_cbr(::ChannelBusyRatio* cbr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (cbr) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cbr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cbr, submessage_arena);
    }
    set_has_cbr();
    kind_.cbr_ = cbr;
  }
  // @@protoc_insertion_point(field_set_allocated:GossipMessage.cbr)
}
void GossipMessage::set_allocated_linklayer_rx(::LinkLayerReception* linklayer_rx) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (linklayer_rx) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      linklayer_rx = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, linklayer_rx, submessage_arena);
    }
    set_has_linklayer_rx();
    kind_.linklayer_rx_ = linklayer_rx;
  }
  // @@protoc_insertion_point(field_set_allocated:GossipMessage.linklayer_rx)
}
void GossipMessage::set_allocated_facilitylayer_rx(::FacilityLayerReception* facilitylayer_rx) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (facilitylayer_rx) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      facilitylayer_rx = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, facilitylayer_rx, submessage_arena);
    }
    set_has_facilitylayer_rx();
    kind_.facilitylayer_rx_ = facilitylayer_rx;
  }
  // @@protoc_insertion_point(field_set_allocated:GossipMessage.facilitylayer_rx)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GossipMessage::kCbrFieldNumber;
const int GossipMessage::kLinklayerRxFieldNumber;
const int GossipMessage::kFacilitylayerRxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GossipMessage::GossipMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_GossipMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GossipMessage)
}
GossipMessage::GossipMessage(const GossipMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_kind();
  switch (from.kind_case()) {
    case kCbr: {
      mutable_cbr()->::ChannelBusyRatio::MergeFrom(from.cbr());
      break;
    }
    case kLinklayerRx: {
      mutable_linklayer_rx()->::LinkLayerReception::MergeFrom(from.linklayer_rx());
      break;
    }
    case kFacilitylayerRx: {
      mutable_facilitylayer_rx()->::FacilityLayerReception::MergeFrom(from.facilitylayer_rx());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:GossipMessage)
}

void GossipMessage::SharedCtor() {
  clear_has_kind();
}

GossipMessage::~GossipMessage() {
  // @@protoc_insertion_point(destructor:GossipMessage)
  SharedDtor();
}

void GossipMessage::SharedDtor() {
  if (has_kind()) {
    clear_kind();
  }
}

void GossipMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GossipMessage::descriptor() {
  ::protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GossipMessage& GossipMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_etsi_5fmsg_5finterface_2eproto::scc_info_GossipMessage.base);
  return *internal_default_instance();
}


void GossipMessage::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:GossipMessage)
  switch (kind_case()) {
    case kCbr: {
      delete kind_.cbr_;
      break;
    }
    case kLinklayerRx: {
      delete kind_.linklayer_rx_;
      break;
    }
    case kFacilitylayerRx: {
      delete kind_.facilitylayer_rx_;
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KIND_NOT_SET;
}


void GossipMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:GossipMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_kind();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GossipMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GossipMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ChannelBusyRatio cbr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cbr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .LinkLayerReception linklayer_rx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linklayer_rx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .FacilityLayerReception facilitylayer_rx = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_facilitylayer_rx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GossipMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GossipMessage)
  return false;
#undef DO_
}

void GossipMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GossipMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (kind_case()) {
    case kCbr:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_cbr(), output);
      break;
    case kLinklayerRx:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_linklayer_rx(), output);
      break;
    case kFacilitylayerRx:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_facilitylayer_rx(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GossipMessage)
}

::google::protobuf::uint8* GossipMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GossipMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (kind_case()) {
    case kCbr:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          1, this->_internal_cbr(), deterministic, target);
      break;
    case kLinklayerRx:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_linklayer_rx(), deterministic, target);
      break;
    case kFacilitylayerRx:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, this->_internal_facilitylayer_rx(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GossipMessage)
  return target;
}

size_t GossipMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GossipMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (kind_case()) {
    // optional .ChannelBusyRatio cbr = 1;
    case kCbr: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.cbr_);
      break;
    }
    // optional .LinkLayerReception linklayer_rx = 2;
    case kLinklayerRx: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.linklayer_rx_);
      break;
    }
    // optional .FacilityLayerReception facilitylayer_rx = 3;
    case kFacilitylayerRx: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.facilitylayer_rx_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GossipMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GossipMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const GossipMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GossipMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GossipMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GossipMessage)
    MergeFrom(*source);
  }
}

void GossipMessage::MergeFrom(const GossipMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GossipMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.kind_case()) {
    case kCbr: {
      mutable_cbr()->::ChannelBusyRatio::MergeFrom(from.cbr());
      break;
    }
    case kLinklayerRx: {
      mutable_linklayer_rx()->::LinkLayerReception::MergeFrom(from.linklayer_rx());
      break;
    }
    case kFacilitylayerRx: {
      mutable_facilitylayer_rx()->::FacilityLayerReception::MergeFrom(from.facilitylayer_rx());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
}

void GossipMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GossipMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GossipMessage::CopyFrom(const GossipMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GossipMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GossipMessage::IsInitialized() const {
  switch (kind_case()) {
    case kCbr: {
      if (has_cbr()) {
        if (!this->cbr().IsInitialized()) return false;
      }
      break;
    }
    case kLinklayerRx: {
      if (has_linklayer_rx()) {
        if (!this->linklayer_rx().IsInitialized()) return false;
      }
      break;
    }
    case kFacilitylayerRx: {
      if (has_facilitylayer_rx()) {
        if (!this->facilitylayer_rx().IsInitialized()) return false;
      }
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  return true;
}

void GossipMessage::Swap(GossipMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GossipMessage::InternalSwap(GossipMessage* other) {
  using std::swap;
  swap(kind_, other->kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GossipMessage::GetMetadata() const {
  protobuf_etsi_5fmsg_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_etsi_5fmsg_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CommandRequest* Arena::CreateMaybeMessage< ::CommandRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CommandRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CommandResponse* Arena::CreateMaybeMessage< ::CommandResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CommandResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CommandResponseData* Arena::CreateMaybeMessage< ::CommandResponseData >(Arena* arena) {
  return Arena::CreateInternal< ::CommandResponseData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RadioConfiguration* Arena::CreateMaybeMessage< ::RadioConfiguration >(Arena* arena) {
  return Arena::CreateInternal< ::RadioConfiguration >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LinkLayerTransmission* Arena::CreateMaybeMessage< ::LinkLayerTransmission >(Arena* arena) {
  return Arena::CreateInternal< ::LinkLayerTransmission >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LinkLayerReception* Arena::CreateMaybeMessage< ::LinkLayerReception >(Arena* arena) {
  return Arena::CreateInternal< ::LinkLayerReception >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FacilityLayerTransmission* Arena::CreateMaybeMessage< ::FacilityLayerTransmission >(Arena* arena) {
  return Arena::CreateInternal< ::FacilityLayerTransmission >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FacilityLayerReception* Arena::CreateMaybeMessage< ::FacilityLayerReception >(Arena* arena) {
  return Arena::CreateInternal< ::FacilityLayerReception >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FacilityLayerMessage* Arena::CreateMaybeMessage< ::FacilityLayerMessage >(Arena* arena) {
  return Arena::CreateInternal< ::FacilityLayerMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChannelBusyRatio* Arena::CreateMaybeMessage< ::ChannelBusyRatio >(Arena* arena) {
  return Arena::CreateInternal< ::ChannelBusyRatio >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GossipMessage* Arena::CreateMaybeMessage< ::GossipMessage >(Arena* arena) {
  return Arena::CreateInternal< ::GossipMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
