// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: etsi_msg_interface.proto

#ifndef PROTOBUF_INCLUDED_etsi_5fmsg_5finterface_2eproto
#define PROTOBUF_INCLUDED_etsi_5fmsg_5finterface_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "cam_interface.pb.h"
#include "cpm_interface.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_etsi_5fmsg_5finterface_2eproto 

namespace protobuf_etsi_5fmsg_5finterface_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[11];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_etsi_5fmsg_5finterface_2eproto
class ChannelBusyRatio;
class ChannelBusyRatioDefaultTypeInternal;
extern ChannelBusyRatioDefaultTypeInternal _ChannelBusyRatio_default_instance_;
class CommandRequest;
class CommandRequestDefaultTypeInternal;
extern CommandRequestDefaultTypeInternal _CommandRequest_default_instance_;
class CommandResponse;
class CommandResponseDefaultTypeInternal;
extern CommandResponseDefaultTypeInternal _CommandResponse_default_instance_;
class CommandResponseData;
class CommandResponseDataDefaultTypeInternal;
extern CommandResponseDataDefaultTypeInternal _CommandResponseData_default_instance_;
class FacilityLayerMessage;
class FacilityLayerMessageDefaultTypeInternal;
extern FacilityLayerMessageDefaultTypeInternal _FacilityLayerMessage_default_instance_;
class FacilityLayerReception;
class FacilityLayerReceptionDefaultTypeInternal;
extern FacilityLayerReceptionDefaultTypeInternal _FacilityLayerReception_default_instance_;
class FacilityLayerTransmission;
class FacilityLayerTransmissionDefaultTypeInternal;
extern FacilityLayerTransmissionDefaultTypeInternal _FacilityLayerTransmission_default_instance_;
class GossipMessage;
class GossipMessageDefaultTypeInternal;
extern GossipMessageDefaultTypeInternal _GossipMessage_default_instance_;
class LinkLayerReception;
class LinkLayerReceptionDefaultTypeInternal;
extern LinkLayerReceptionDefaultTypeInternal _LinkLayerReception_default_instance_;
class LinkLayerTransmission;
class LinkLayerTransmissionDefaultTypeInternal;
extern LinkLayerTransmissionDefaultTypeInternal _LinkLayerTransmission_default_instance_;
class RadioConfiguration;
class RadioConfigurationDefaultTypeInternal;
extern RadioConfigurationDefaultTypeInternal _RadioConfiguration_default_instance_;
namespace google {
namespace protobuf {
template<> ::ChannelBusyRatio* Arena::CreateMaybeMessage<::ChannelBusyRatio>(Arena*);
template<> ::CommandRequest* Arena::CreateMaybeMessage<::CommandRequest>(Arena*);
template<> ::CommandResponse* Arena::CreateMaybeMessage<::CommandResponse>(Arena*);
template<> ::CommandResponseData* Arena::CreateMaybeMessage<::CommandResponseData>(Arena*);
template<> ::FacilityLayerMessage* Arena::CreateMaybeMessage<::FacilityLayerMessage>(Arena*);
template<> ::FacilityLayerReception* Arena::CreateMaybeMessage<::FacilityLayerReception>(Arena*);
template<> ::FacilityLayerTransmission* Arena::CreateMaybeMessage<::FacilityLayerTransmission>(Arena*);
template<> ::GossipMessage* Arena::CreateMaybeMessage<::GossipMessage>(Arena*);
template<> ::LinkLayerReception* Arena::CreateMaybeMessage<::LinkLayerReception>(Arena*);
template<> ::LinkLayerTransmission* Arena::CreateMaybeMessage<::LinkLayerTransmission>(Arena*);
template<> ::RadioConfiguration* Arena::CreateMaybeMessage<::RadioConfiguration>(Arena*);
}  // namespace protobuf
}  // namespace google

enum CommandResponse_Status {
  CommandResponse_Status_SUCCESS = 0,
  CommandResponse_Status_FAILURE = 1,
  CommandResponse_Status_UNKNOWN = 2,
  CommandResponse_Status_NOT_IMPLEMENTED = 3
};
bool CommandResponse_Status_IsValid(int value);
const CommandResponse_Status CommandResponse_Status_Status_MIN = CommandResponse_Status_SUCCESS;
const CommandResponse_Status CommandResponse_Status_Status_MAX = CommandResponse_Status_NOT_IMPLEMENTED;
const int CommandResponse_Status_Status_ARRAYSIZE = CommandResponse_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommandResponse_Status_descriptor();
inline const ::std::string& CommandResponse_Status_Name(CommandResponse_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommandResponse_Status_descriptor(), value);
}
inline bool CommandResponse_Status_Parse(
    const ::std::string& name, CommandResponse_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommandResponse_Status>(
    CommandResponse_Status_descriptor(), name, value);
}
enum LifecycleAction {
  SOFT_RESET = 0,
  HARD_RESET = 1
};
bool LifecycleAction_IsValid(int value);
const LifecycleAction LifecycleAction_MIN = SOFT_RESET;
const LifecycleAction LifecycleAction_MAX = HARD_RESET;
const int LifecycleAction_ARRAYSIZE = LifecycleAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* LifecycleAction_descriptor();
inline const ::std::string& LifecycleAction_Name(LifecycleAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    LifecycleAction_descriptor(), value);
}
inline bool LifecycleAction_Parse(
    const ::std::string& name, LifecycleAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LifecycleAction>(
    LifecycleAction_descriptor(), name, value);
}
enum LinkLayerPriority {
  BACKGROUND = 0,
  BEST_EFFORT = 1,
  VIDEO = 2,
  VOICE = 3
};
bool LinkLayerPriority_IsValid(int value);
const LinkLayerPriority LinkLayerPriority_MIN = BACKGROUND;
const LinkLayerPriority LinkLayerPriority_MAX = VOICE;
const int LinkLayerPriority_ARRAYSIZE = LinkLayerPriority_MAX + 1;

const ::google::protobuf::EnumDescriptor* LinkLayerPriority_descriptor();
inline const ::std::string& LinkLayerPriority_Name(LinkLayerPriority value) {
  return ::google::protobuf::internal::NameOfEnum(
    LinkLayerPriority_descriptor(), value);
}
inline bool LinkLayerPriority_Parse(
    const ::std::string& name, LinkLayerPriority* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LinkLayerPriority>(
    LinkLayerPriority_descriptor(), name, value);
}
// ===================================================================

class CommandRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CommandRequest) */ {
 public:
  CommandRequest();
  virtual ~CommandRequest();

  CommandRequest(const CommandRequest& from);

  inline CommandRequest& operator=(const CommandRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommandRequest(CommandRequest&& from) noexcept
    : CommandRequest() {
    *this = ::std::move(from);
  }

  inline CommandRequest& operator=(CommandRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommandRequest& default_instance();

  enum KindCase {
    kLifecycle = 1,
    kLinklayerTx = 2,
    kRadioCfg = 3,
    kFacilitieslayerTx = 4,
    KIND_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommandRequest* internal_default_instance() {
    return reinterpret_cast<const CommandRequest*>(
               &_CommandRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CommandRequest* other);
  friend void swap(CommandRequest& a, CommandRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommandRequest* New() const final {
    return CreateMaybeMessage<CommandRequest>(NULL);
  }

  CommandRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CommandRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CommandRequest& from);
  void MergeFrom(const CommandRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommandRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .LifecycleAction lifecycle = 1;
  bool has_lifecycle() const;
  void clear_lifecycle();
  static const int kLifecycleFieldNumber = 1;
  ::LifecycleAction lifecycle() const;
  void set_lifecycle(::LifecycleAction value);

  // optional .LinkLayerTransmission linklayer_tx = 2;
  bool has_linklayer_tx() const;
  void clear_linklayer_tx();
  static const int kLinklayerTxFieldNumber = 2;
  private:
  const ::LinkLayerTransmission& _internal_linklayer_tx() const;
  public:
  const ::LinkLayerTransmission& linklayer_tx() const;
  ::LinkLayerTransmission* release_linklayer_tx();
  ::LinkLayerTransmission* mutable_linklayer_tx();
  void set_allocated_linklayer_tx(::LinkLayerTransmission* linklayer_tx);

  // optional .RadioConfiguration radio_cfg = 3;
  bool has_radio_cfg() const;
  void clear_radio_cfg();
  static const int kRadioCfgFieldNumber = 3;
  private:
  const ::RadioConfiguration& _internal_radio_cfg() const;
  public:
  const ::RadioConfiguration& radio_cfg() const;
  ::RadioConfiguration* release_radio_cfg();
  ::RadioConfiguration* mutable_radio_cfg();
  void set_allocated_radio_cfg(::RadioConfiguration* radio_cfg);

  // optional .FacilityLayerTransmission facilitieslayer_tx = 4;
  bool has_facilitieslayer_tx() const;
  void clear_facilitieslayer_tx();
  static const int kFacilitieslayerTxFieldNumber = 4;
  private:
  const ::FacilityLayerTransmission& _internal_facilitieslayer_tx() const;
  public:
  const ::FacilityLayerTransmission& facilitieslayer_tx() const;
  ::FacilityLayerTransmission* release_facilitieslayer_tx();
  ::FacilityLayerTransmission* mutable_facilitieslayer_tx();
  void set_allocated_facilitieslayer_tx(::FacilityLayerTransmission* facilitieslayer_tx);

  void clear_kind();
  KindCase kind_case() const;
  // @@protoc_insertion_point(class_scope:CommandRequest)
 private:
  void set_has_lifecycle();
  void set_has_linklayer_tx();
  void set_has_radio_cfg();
  void set_has_facilitieslayer_tx();

  inline bool has_kind() const;
  inline void clear_has_kind();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  union KindUnion {
    KindUnion() {}
    int lifecycle_;
    ::LinkLayerTransmission* linklayer_tx_;
    ::RadioConfiguration* radio_cfg_;
    ::FacilityLayerTransmission* facilitieslayer_tx_;
  } kind_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_etsi_5fmsg_5finterface_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommandResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CommandResponse) */ {
 public:
  CommandResponse();
  virtual ~CommandResponse();

  CommandResponse(const CommandResponse& from);

  inline CommandResponse& operator=(const CommandResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommandResponse(CommandResponse&& from) noexcept
    : CommandResponse() {
    *this = ::std::move(from);
  }

  inline CommandResponse& operator=(CommandResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommandResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommandResponse* internal_default_instance() {
    return reinterpret_cast<const CommandResponse*>(
               &_CommandResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CommandResponse* other);
  friend void swap(CommandResponse& a, CommandResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommandResponse* New() const final {
    return CreateMaybeMessage<CommandResponse>(NULL);
  }

  CommandResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CommandResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CommandResponse& from);
  void MergeFrom(const CommandResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommandResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CommandResponse_Status Status;
  static const Status SUCCESS =
    CommandResponse_Status_SUCCESS;
  static const Status FAILURE =
    CommandResponse_Status_FAILURE;
  static const Status UNKNOWN =
    CommandResponse_Status_UNKNOWN;
  static const Status NOT_IMPLEMENTED =
    CommandResponse_Status_NOT_IMPLEMENTED;
  static inline bool Status_IsValid(int value) {
    return CommandResponse_Status_IsValid(value);
  }
  static const Status Status_MIN =
    CommandResponse_Status_Status_MIN;
  static const Status Status_MAX =
    CommandResponse_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    CommandResponse_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return CommandResponse_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return CommandResponse_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return CommandResponse_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string message = 2;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional .CommandResponseData data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  private:
  const ::CommandResponseData& _internal_data() const;
  public:
  const ::CommandResponseData& data() const;
  ::CommandResponseData* release_data();
  ::CommandResponseData* mutable_data();
  void set_allocated_data(::CommandResponseData* data);

  // required .CommandResponse.Status status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::CommandResponse_Status status() const;
  void set_status(::CommandResponse_Status value);

  // @@protoc_insertion_point(class_scope:CommandResponse)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_message();
  void clear_has_message();
  void set_has_data();
  void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::CommandResponseData* data_;
  int status_;
  friend struct ::protobuf_etsi_5fmsg_5finterface_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommandResponseData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CommandResponseData) */ {
 public:
  CommandResponseData();
  virtual ~CommandResponseData();

  CommandResponseData(const CommandResponseData& from);

  inline CommandResponseData& operator=(const CommandResponseData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommandResponseData(CommandResponseData&& from) noexcept
    : CommandResponseData() {
    *this = ::std::move(from);
  }

  inline CommandResponseData& operator=(CommandResponseData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommandResponseData& default_instance();

  enum KindCase {
    kRadioCfg = 1,
    KIND_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommandResponseData* internal_default_instance() {
    return reinterpret_cast<const CommandResponseData*>(
               &_CommandResponseData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CommandResponseData* other);
  friend void swap(CommandResponseData& a, CommandResponseData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommandResponseData* New() const final {
    return CreateMaybeMessage<CommandResponseData>(NULL);
  }

  CommandResponseData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CommandResponseData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CommandResponseData& from);
  void MergeFrom(const CommandResponseData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommandResponseData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RadioConfiguration radio_cfg = 1;
  bool has_radio_cfg() const;
  void clear_radio_cfg();
  static const int kRadioCfgFieldNumber = 1;
  private:
  const ::RadioConfiguration& _internal_radio_cfg() const;
  public:
  const ::RadioConfiguration& radio_cfg() const;
  ::RadioConfiguration* release_radio_cfg();
  ::RadioConfiguration* mutable_radio_cfg();
  void set_allocated_radio_cfg(::RadioConfiguration* radio_cfg);

  void clear_kind();
  KindCase kind_case() const;
  // @@protoc_insertion_point(class_scope:CommandResponseData)
 private:
  void set_has_radio_cfg();

  inline bool has_kind() const;
  inline void clear_has_kind();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  union KindUnion {
    KindUnion() {}
    ::RadioConfiguration* radio_cfg_;
  } kind_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_etsi_5fmsg_5finterface_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RadioConfiguration : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RadioConfiguration) */ {
 public:
  RadioConfiguration();
  virtual ~RadioConfiguration();

  RadioConfiguration(const RadioConfiguration& from);

  inline RadioConfiguration& operator=(const RadioConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RadioConfiguration(RadioConfiguration&& from) noexcept
    : RadioConfiguration() {
    *this = ::std::move(from);
  }

  inline RadioConfiguration& operator=(RadioConfiguration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RadioConfiguration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RadioConfiguration* internal_default_instance() {
    return reinterpret_cast<const RadioConfiguration*>(
               &_RadioConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(RadioConfiguration* other);
  friend void swap(RadioConfiguration& a, RadioConfiguration& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RadioConfiguration* New() const final {
    return CreateMaybeMessage<RadioConfiguration>(NULL);
  }

  RadioConfiguration* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RadioConfiguration>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RadioConfiguration& from);
  void MergeFrom(const RadioConfiguration& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RadioConfiguration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes address = 1;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const void* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // optional uint32 channel_frequency_mhz = 2;
  bool has_channel_frequency_mhz() const;
  void clear_channel_frequency_mhz();
  static const int kChannelFrequencyMhzFieldNumber = 2;
  ::google::protobuf::uint32 channel_frequency_mhz() const;
  void set_channel_frequency_mhz(::google::protobuf::uint32 value);

  // optional bool filter_unicast_destination = 3;
  bool has_filter_unicast_destination() const;
  void clear_filter_unicast_destination();
  static const int kFilterUnicastDestinationFieldNumber = 3;
  bool filter_unicast_destination() const;
  void set_filter_unicast_destination(bool value);

  // optional sint32 default_tx_power_cbm = 4;
  bool has_default_tx_power_cbm() const;
  void clear_default_tx_power_cbm();
  static const int kDefaultTxPowerCbmFieldNumber = 4;
  ::google::protobuf::int32 default_tx_power_cbm() const;
  void set_default_tx_power_cbm(::google::protobuf::int32 value);

  // optional uint32 default_tx_datarate_500kbps = 5;
  bool has_default_tx_datarate_500kbps() const;
  void clear_default_tx_datarate_500kbps();
  static const int kDefaultTxDatarate500KbpsFieldNumber = 5;
  ::google::protobuf::uint32 default_tx_datarate_500kbps() const;
  void set_default_tx_datarate_500kbps(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RadioConfiguration)
 private:
  void set_has_address();
  void clear_has_address();
  void set_has_channel_frequency_mhz();
  void clear_has_channel_frequency_mhz();
  void set_has_filter_unicast_destination();
  void clear_has_filter_unicast_destination();
  void set_has_default_tx_power_cbm();
  void clear_has_default_tx_power_cbm();
  void set_has_default_tx_datarate_500kbps();
  void clear_has_default_tx_datarate_500kbps();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::uint32 channel_frequency_mhz_;
  bool filter_unicast_destination_;
  ::google::protobuf::int32 default_tx_power_cbm_;
  ::google::protobuf::uint32 default_tx_datarate_500kbps_;
  friend struct ::protobuf_etsi_5fmsg_5finterface_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LinkLayerTransmission : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LinkLayerTransmission) */ {
 public:
  LinkLayerTransmission();
  virtual ~LinkLayerTransmission();

  LinkLayerTransmission(const LinkLayerTransmission& from);

  inline LinkLayerTransmission& operator=(const LinkLayerTransmission& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LinkLayerTransmission(LinkLayerTransmission&& from) noexcept
    : LinkLayerTransmission() {
    *this = ::std::move(from);
  }

  inline LinkLayerTransmission& operator=(LinkLayerTransmission&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LinkLayerTransmission& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LinkLayerTransmission* internal_default_instance() {
    return reinterpret_cast<const LinkLayerTransmission*>(
               &_LinkLayerTransmission_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(LinkLayerTransmission* other);
  friend void swap(LinkLayerTransmission& a, LinkLayerTransmission& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LinkLayerTransmission* New() const final {
    return CreateMaybeMessage<LinkLayerTransmission>(NULL);
  }

  LinkLayerTransmission* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LinkLayerTransmission>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LinkLayerTransmission& from);
  void MergeFrom(const LinkLayerTransmission& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LinkLayerTransmission* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes source = 1;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  #if LANG_CXX11
  void set_source(::std::string&& value);
  #endif
  void set_source(const char* value);
  void set_source(const void* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // required bytes destination = 2;
  bool has_destination() const;
  void clear_destination();
  static const int kDestinationFieldNumber = 2;
  const ::std::string& destination() const;
  void set_destination(const ::std::string& value);
  #if LANG_CXX11
  void set_destination(::std::string&& value);
  #endif
  void set_destination(const char* value);
  void set_destination(const void* value, size_t size);
  ::std::string* mutable_destination();
  ::std::string* release_destination();
  void set_allocated_destination(::std::string* destination);

  // required bytes payload = 10;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 10;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // required .LinkLayerPriority priority = 3;
  bool has_priority() const;
  void clear_priority();
  static const int kPriorityFieldNumber = 3;
  ::LinkLayerPriority priority() const;
  void set_priority(::LinkLayerPriority value);

  // optional uint32 channel = 4;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 4;
  ::google::protobuf::uint32 channel() const;
  void set_channel(::google::protobuf::uint32 value);

  // optional uint32 datarate_500kbps = 5;
  bool has_datarate_500kbps() const;
  void clear_datarate_500kbps();
  static const int kDatarate500KbpsFieldNumber = 5;
  ::google::protobuf::uint32 datarate_500kbps() const;
  void set_datarate_500kbps(::google::protobuf::uint32 value);

  // optional sint32 power_cbm = 6;
  bool has_power_cbm() const;
  void clear_power_cbm();
  static const int kPowerCbmFieldNumber = 6;
  ::google::protobuf::int32 power_cbm() const;
  void set_power_cbm(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LinkLayerTransmission)
 private:
  void set_has_source();
  void clear_has_source();
  void set_has_destination();
  void clear_has_destination();
  void set_has_priority();
  void clear_has_priority();
  void set_has_channel();
  void clear_has_channel();
  void set_has_datarate_500kbps();
  void clear_has_datarate_500kbps();
  void set_has_power_cbm();
  void clear_has_power_cbm();
  void set_has_payload();
  void clear_has_payload();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::internal::ArenaStringPtr destination_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  int priority_;
  ::google::protobuf::uint32 channel_;
  ::google::protobuf::uint32 datarate_500kbps_;
  ::google::protobuf::int32 power_cbm_;
  friend struct ::protobuf_etsi_5fmsg_5finterface_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LinkLayerReception : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LinkLayerReception) */ {
 public:
  LinkLayerReception();
  virtual ~LinkLayerReception();

  LinkLayerReception(const LinkLayerReception& from);

  inline LinkLayerReception& operator=(const LinkLayerReception& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LinkLayerReception(LinkLayerReception&& from) noexcept
    : LinkLayerReception() {
    *this = ::std::move(from);
  }

  inline LinkLayerReception& operator=(LinkLayerReception&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LinkLayerReception& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LinkLayerReception* internal_default_instance() {
    return reinterpret_cast<const LinkLayerReception*>(
               &_LinkLayerReception_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(LinkLayerReception* other);
  friend void swap(LinkLayerReception& a, LinkLayerReception& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LinkLayerReception* New() const final {
    return CreateMaybeMessage<LinkLayerReception>(NULL);
  }

  LinkLayerReception* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LinkLayerReception>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LinkLayerReception& from);
  void MergeFrom(const LinkLayerReception& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LinkLayerReception* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes source = 1;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  #if LANG_CXX11
  void set_source(::std::string&& value);
  #endif
  void set_source(const char* value);
  void set_source(const void* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // required bytes destination = 2;
  bool has_destination() const;
  void clear_destination();
  static const int kDestinationFieldNumber = 2;
  const ::std::string& destination() const;
  void set_destination(const ::std::string& value);
  #if LANG_CXX11
  void set_destination(::std::string&& value);
  #endif
  void set_destination(const char* value);
  void set_destination(const void* value, size_t size);
  ::std::string* mutable_destination();
  ::std::string* release_destination();
  void set_allocated_destination(::std::string* destination);

  // required bytes payload = 10;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 10;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // optional uint32 channel = 4;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 4;
  ::google::protobuf::uint32 channel() const;
  void set_channel(::google::protobuf::uint32 value);

  // optional sint32 power_cbm = 6;
  bool has_power_cbm() const;
  void clear_power_cbm();
  static const int kPowerCbmFieldNumber = 6;
  ::google::protobuf::int32 power_cbm() const;
  void set_power_cbm(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LinkLayerReception)
 private:
  void set_has_source();
  void clear_has_source();
  void set_has_destination();
  void clear_has_destination();
  void set_has_channel();
  void clear_has_channel();
  void set_has_power_cbm();
  void clear_has_power_cbm();
  void set_has_payload();
  void clear_has_payload();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::internal::ArenaStringPtr destination_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  ::google::protobuf::uint32 channel_;
  ::google::protobuf::int32 power_cbm_;
  friend struct ::protobuf_etsi_5fmsg_5finterface_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FacilityLayerTransmission : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FacilityLayerTransmission) */ {
 public:
  FacilityLayerTransmission();
  virtual ~FacilityLayerTransmission();

  FacilityLayerTransmission(const FacilityLayerTransmission& from);

  inline FacilityLayerTransmission& operator=(const FacilityLayerTransmission& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FacilityLayerTransmission(FacilityLayerTransmission&& from) noexcept
    : FacilityLayerTransmission() {
    *this = ::std::move(from);
  }

  inline FacilityLayerTransmission& operator=(FacilityLayerTransmission&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacilityLayerTransmission& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FacilityLayerTransmission* internal_default_instance() {
    return reinterpret_cast<const FacilityLayerTransmission*>(
               &_FacilityLayerTransmission_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(FacilityLayerTransmission* other);
  friend void swap(FacilityLayerTransmission& a, FacilityLayerTransmission& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FacilityLayerTransmission* New() const final {
    return CreateMaybeMessage<FacilityLayerTransmission>(NULL);
  }

  FacilityLayerTransmission* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FacilityLayerTransmission>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FacilityLayerTransmission& from);
  void MergeFrom(const FacilityLayerTransmission& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FacilityLayerTransmission* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .FacilityLayerMessage msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  private:
  const ::FacilityLayerMessage& _internal_msg() const;
  public:
  const ::FacilityLayerMessage& msg() const;
  ::FacilityLayerMessage* release_msg();
  ::FacilityLayerMessage* mutable_msg();
  void set_allocated_msg(::FacilityLayerMessage* msg);

  // @@protoc_insertion_point(class_scope:FacilityLayerTransmission)
 private:
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::FacilityLayerMessage* msg_;
  friend struct ::protobuf_etsi_5fmsg_5finterface_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FacilityLayerReception : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FacilityLayerReception) */ {
 public:
  FacilityLayerReception();
  virtual ~FacilityLayerReception();

  FacilityLayerReception(const FacilityLayerReception& from);

  inline FacilityLayerReception& operator=(const FacilityLayerReception& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FacilityLayerReception(FacilityLayerReception&& from) noexcept
    : FacilityLayerReception() {
    *this = ::std::move(from);
  }

  inline FacilityLayerReception& operator=(FacilityLayerReception&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacilityLayerReception& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FacilityLayerReception* internal_default_instance() {
    return reinterpret_cast<const FacilityLayerReception*>(
               &_FacilityLayerReception_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(FacilityLayerReception* other);
  friend void swap(FacilityLayerReception& a, FacilityLayerReception& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FacilityLayerReception* New() const final {
    return CreateMaybeMessage<FacilityLayerReception>(NULL);
  }

  FacilityLayerReception* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FacilityLayerReception>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FacilityLayerReception& from);
  void MergeFrom(const FacilityLayerReception& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FacilityLayerReception* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .FacilityLayerMessage msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  private:
  const ::FacilityLayerMessage& _internal_msg() const;
  public:
  const ::FacilityLayerMessage& msg() const;
  ::FacilityLayerMessage* release_msg();
  ::FacilityLayerMessage* mutable_msg();
  void set_allocated_msg(::FacilityLayerMessage* msg);

  // @@protoc_insertion_point(class_scope:FacilityLayerReception)
 private:
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::FacilityLayerMessage* msg_;
  friend struct ::protobuf_etsi_5fmsg_5finterface_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FacilityLayerMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FacilityLayerMessage) */ {
 public:
  FacilityLayerMessage();
  virtual ~FacilityLayerMessage();

  FacilityLayerMessage(const FacilityLayerMessage& from);

  inline FacilityLayerMessage& operator=(const FacilityLayerMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FacilityLayerMessage(FacilityLayerMessage&& from) noexcept
    : FacilityLayerMessage() {
    *this = ::std::move(from);
  }

  inline FacilityLayerMessage& operator=(FacilityLayerMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacilityLayerMessage& default_instance();

  enum KindCase {
    kCamMsg = 1,
    kCpmMsg = 2,
    KIND_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FacilityLayerMessage* internal_default_instance() {
    return reinterpret_cast<const FacilityLayerMessage*>(
               &_FacilityLayerMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(FacilityLayerMessage* other);
  friend void swap(FacilityLayerMessage& a, FacilityLayerMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FacilityLayerMessage* New() const final {
    return CreateMaybeMessage<FacilityLayerMessage>(NULL);
  }

  FacilityLayerMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FacilityLayerMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FacilityLayerMessage& from);
  void MergeFrom(const FacilityLayerMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FacilityLayerMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CAMessage cam_msg = 1;
  bool has_cam_msg() const;
  void clear_cam_msg();
  static const int kCamMsgFieldNumber = 1;
  private:
  const ::CAMessage& _internal_cam_msg() const;
  public:
  const ::CAMessage& cam_msg() const;
  ::CAMessage* release_cam_msg();
  ::CAMessage* mutable_cam_msg();
  void set_allocated_cam_msg(::CAMessage* cam_msg);

  // optional .CPMessage cpm_msg = 2;
  bool has_cpm_msg() const;
  void clear_cpm_msg();
  static const int kCpmMsgFieldNumber = 2;
  private:
  const ::CPMessage& _internal_cpm_msg() const;
  public:
  const ::CPMessage& cpm_msg() const;
  ::CPMessage* release_cpm_msg();
  ::CPMessage* mutable_cpm_msg();
  void set_allocated_cpm_msg(::CPMessage* cpm_msg);

  void clear_kind();
  KindCase kind_case() const;
  // @@protoc_insertion_point(class_scope:FacilityLayerMessage)
 private:
  void set_has_cam_msg();
  void set_has_cpm_msg();

  inline bool has_kind() const;
  inline void clear_has_kind();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  union KindUnion {
    KindUnion() {}
    ::CAMessage* cam_msg_;
    ::CPMessage* cpm_msg_;
  } kind_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_etsi_5fmsg_5finterface_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChannelBusyRatio : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChannelBusyRatio) */ {
 public:
  ChannelBusyRatio();
  virtual ~ChannelBusyRatio();

  ChannelBusyRatio(const ChannelBusyRatio& from);

  inline ChannelBusyRatio& operator=(const ChannelBusyRatio& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChannelBusyRatio(ChannelBusyRatio&& from) noexcept
    : ChannelBusyRatio() {
    *this = ::std::move(from);
  }

  inline ChannelBusyRatio& operator=(ChannelBusyRatio&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChannelBusyRatio& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChannelBusyRatio* internal_default_instance() {
    return reinterpret_cast<const ChannelBusyRatio*>(
               &_ChannelBusyRatio_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(ChannelBusyRatio* other);
  friend void swap(ChannelBusyRatio& a, ChannelBusyRatio& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChannelBusyRatio* New() const final {
    return CreateMaybeMessage<ChannelBusyRatio>(NULL);
  }

  ChannelBusyRatio* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ChannelBusyRatio>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ChannelBusyRatio& from);
  void MergeFrom(const ChannelBusyRatio& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChannelBusyRatio* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 busy = 1;
  bool has_busy() const;
  void clear_busy();
  static const int kBusyFieldNumber = 1;
  ::google::protobuf::uint32 busy() const;
  void set_busy(::google::protobuf::uint32 value);

  // required uint32 total = 2;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 2;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ChannelBusyRatio)
 private:
  void set_has_busy();
  void clear_has_busy();
  void set_has_total();
  void clear_has_total();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 busy_;
  ::google::protobuf::uint32 total_;
  friend struct ::protobuf_etsi_5fmsg_5finterface_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GossipMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GossipMessage) */ {
 public:
  GossipMessage();
  virtual ~GossipMessage();

  GossipMessage(const GossipMessage& from);

  inline GossipMessage& operator=(const GossipMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GossipMessage(GossipMessage&& from) noexcept
    : GossipMessage() {
    *this = ::std::move(from);
  }

  inline GossipMessage& operator=(GossipMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GossipMessage& default_instance();

  enum KindCase {
    kCbr = 1,
    kLinklayerRx = 2,
    kFacilitylayerRx = 3,
    KIND_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GossipMessage* internal_default_instance() {
    return reinterpret_cast<const GossipMessage*>(
               &_GossipMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(GossipMessage* other);
  friend void swap(GossipMessage& a, GossipMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GossipMessage* New() const final {
    return CreateMaybeMessage<GossipMessage>(NULL);
  }

  GossipMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GossipMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GossipMessage& from);
  void MergeFrom(const GossipMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GossipMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ChannelBusyRatio cbr = 1;
  bool has_cbr() const;
  void clear_cbr();
  static const int kCbrFieldNumber = 1;
  private:
  const ::ChannelBusyRatio& _internal_cbr() const;
  public:
  const ::ChannelBusyRatio& cbr() const;
  ::ChannelBusyRatio* release_cbr();
  ::ChannelBusyRatio* mutable_cbr();
  void set_allocated_cbr(::ChannelBusyRatio* cbr);

  // optional .LinkLayerReception linklayer_rx = 2;
  bool has_linklayer_rx() const;
  void clear_linklayer_rx();
  static const int kLinklayerRxFieldNumber = 2;
  private:
  const ::LinkLayerReception& _internal_linklayer_rx() const;
  public:
  const ::LinkLayerReception& linklayer_rx() const;
  ::LinkLayerReception* release_linklayer_rx();
  ::LinkLayerReception* mutable_linklayer_rx();
  void set_allocated_linklayer_rx(::LinkLayerReception* linklayer_rx);

  // optional .FacilityLayerReception facilitylayer_rx = 3;
  bool has_facilitylayer_rx() const;
  void clear_facilitylayer_rx();
  static const int kFacilitylayerRxFieldNumber = 3;
  private:
  const ::FacilityLayerReception& _internal_facilitylayer_rx() const;
  public:
  const ::FacilityLayerReception& facilitylayer_rx() const;
  ::FacilityLayerReception* release_facilitylayer_rx();
  ::FacilityLayerReception* mutable_facilitylayer_rx();
  void set_allocated_facilitylayer_rx(::FacilityLayerReception* facilitylayer_rx);

  void clear_kind();
  KindCase kind_case() const;
  // @@protoc_insertion_point(class_scope:GossipMessage)
 private:
  void set_has_cbr();
  void set_has_linklayer_rx();
  void set_has_facilitylayer_rx();

  inline bool has_kind() const;
  inline void clear_has_kind();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  union KindUnion {
    KindUnion() {}
    ::ChannelBusyRatio* cbr_;
    ::LinkLayerReception* linklayer_rx_;
    ::FacilityLayerReception* facilitylayer_rx_;
  } kind_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_etsi_5fmsg_5finterface_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CommandRequest

// optional .LifecycleAction lifecycle = 1;
inline bool CommandRequest::has_lifecycle() const {
  return kind_case() == kLifecycle;
}
inline void CommandRequest::set_has_lifecycle() {
  _oneof_case_[0] = kLifecycle;
}
inline void CommandRequest::clear_lifecycle() {
  if (has_lifecycle()) {
    kind_.lifecycle_ = 0;
    clear_has_kind();
  }
}
inline ::LifecycleAction CommandRequest::lifecycle() const {
  // @@protoc_insertion_point(field_get:CommandRequest.lifecycle)
  if (has_lifecycle()) {
    return static_cast< ::LifecycleAction >(kind_.lifecycle_);
  }
  return static_cast< ::LifecycleAction >(0);
}
inline void CommandRequest::set_lifecycle(::LifecycleAction value) {
  assert(::LifecycleAction_IsValid(value));
  if (!has_lifecycle()) {
    clear_kind();
    set_has_lifecycle();
  }
  kind_.lifecycle_ = value;
  // @@protoc_insertion_point(field_set:CommandRequest.lifecycle)
}

// optional .LinkLayerTransmission linklayer_tx = 2;
inline bool CommandRequest::has_linklayer_tx() const {
  return kind_case() == kLinklayerTx;
}
inline void CommandRequest::set_has_linklayer_tx() {
  _oneof_case_[0] = kLinklayerTx;
}
inline void CommandRequest::clear_linklayer_tx() {
  if (has_linklayer_tx()) {
    delete kind_.linklayer_tx_;
    clear_has_kind();
  }
}
inline const ::LinkLayerTransmission& CommandRequest::_internal_linklayer_tx() const {
  return *kind_.linklayer_tx_;
}
inline ::LinkLayerTransmission* CommandRequest::release_linklayer_tx() {
  // @@protoc_insertion_point(field_release:CommandRequest.linklayer_tx)
  if (has_linklayer_tx()) {
    clear_has_kind();
      ::LinkLayerTransmission* temp = kind_.linklayer_tx_;
    kind_.linklayer_tx_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::LinkLayerTransmission& CommandRequest::linklayer_tx() const {
  // @@protoc_insertion_point(field_get:CommandRequest.linklayer_tx)
  return has_linklayer_tx()
      ? *kind_.linklayer_tx_
      : *reinterpret_cast< ::LinkLayerTransmission*>(&::_LinkLayerTransmission_default_instance_);
}
inline ::LinkLayerTransmission* CommandRequest::mutable_linklayer_tx() {
  if (!has_linklayer_tx()) {
    clear_kind();
    set_has_linklayer_tx();
    kind_.linklayer_tx_ = CreateMaybeMessage< ::LinkLayerTransmission >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:CommandRequest.linklayer_tx)
  return kind_.linklayer_tx_;
}

// optional .RadioConfiguration radio_cfg = 3;
inline bool CommandRequest::has_radio_cfg() const {
  return kind_case() == kRadioCfg;
}
inline void CommandRequest::set_has_radio_cfg() {
  _oneof_case_[0] = kRadioCfg;
}
inline void CommandRequest::clear_radio_cfg() {
  if (has_radio_cfg()) {
    delete kind_.radio_cfg_;
    clear_has_kind();
  }
}
inline const ::RadioConfiguration& CommandRequest::_internal_radio_cfg() const {
  return *kind_.radio_cfg_;
}
inline ::RadioConfiguration* CommandRequest::release_radio_cfg() {
  // @@protoc_insertion_point(field_release:CommandRequest.radio_cfg)
  if (has_radio_cfg()) {
    clear_has_kind();
      ::RadioConfiguration* temp = kind_.radio_cfg_;
    kind_.radio_cfg_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::RadioConfiguration& CommandRequest::radio_cfg() const {
  // @@protoc_insertion_point(field_get:CommandRequest.radio_cfg)
  return has_radio_cfg()
      ? *kind_.radio_cfg_
      : *reinterpret_cast< ::RadioConfiguration*>(&::_RadioConfiguration_default_instance_);
}
inline ::RadioConfiguration* CommandRequest::mutable_radio_cfg() {
  if (!has_radio_cfg()) {
    clear_kind();
    set_has_radio_cfg();
    kind_.radio_cfg_ = CreateMaybeMessage< ::RadioConfiguration >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:CommandRequest.radio_cfg)
  return kind_.radio_cfg_;
}

// optional .FacilityLayerTransmission facilitieslayer_tx = 4;
inline bool CommandRequest::has_facilitieslayer_tx() const {
  return kind_case() == kFacilitieslayerTx;
}
inline void CommandRequest::set_has_facilitieslayer_tx() {
  _oneof_case_[0] = kFacilitieslayerTx;
}
inline void CommandRequest::clear_facilitieslayer_tx() {
  if (has_facilitieslayer_tx()) {
    delete kind_.facilitieslayer_tx_;
    clear_has_kind();
  }
}
inline const ::FacilityLayerTransmission& CommandRequest::_internal_facilitieslayer_tx() const {
  return *kind_.facilitieslayer_tx_;
}
inline ::FacilityLayerTransmission* CommandRequest::release_facilitieslayer_tx() {
  // @@protoc_insertion_point(field_release:CommandRequest.facilitieslayer_tx)
  if (has_facilitieslayer_tx()) {
    clear_has_kind();
      ::FacilityLayerTransmission* temp = kind_.facilitieslayer_tx_;
    kind_.facilitieslayer_tx_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::FacilityLayerTransmission& CommandRequest::facilitieslayer_tx() const {
  // @@protoc_insertion_point(field_get:CommandRequest.facilitieslayer_tx)
  return has_facilitieslayer_tx()
      ? *kind_.facilitieslayer_tx_
      : *reinterpret_cast< ::FacilityLayerTransmission*>(&::_FacilityLayerTransmission_default_instance_);
}
inline ::FacilityLayerTransmission* CommandRequest::mutable_facilitieslayer_tx() {
  if (!has_facilitieslayer_tx()) {
    clear_kind();
    set_has_facilitieslayer_tx();
    kind_.facilitieslayer_tx_ = CreateMaybeMessage< ::FacilityLayerTransmission >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:CommandRequest.facilitieslayer_tx)
  return kind_.facilitieslayer_tx_;
}

inline bool CommandRequest::has_kind() const {
  return kind_case() != KIND_NOT_SET;
}
inline void CommandRequest::clear_has_kind() {
  _oneof_case_[0] = KIND_NOT_SET;
}
inline CommandRequest::KindCase CommandRequest::kind_case() const {
  return CommandRequest::KindCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// CommandResponse

// required .CommandResponse.Status status = 1;
inline bool CommandResponse::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CommandResponse::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CommandResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CommandResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::CommandResponse_Status CommandResponse::status() const {
  // @@protoc_insertion_point(field_get:CommandResponse.status)
  return static_cast< ::CommandResponse_Status >(status_);
}
inline void CommandResponse::set_status(::CommandResponse_Status value) {
  assert(::CommandResponse_Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CommandResponse.status)
}

// optional string message = 2;
inline bool CommandResponse::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommandResponse::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommandResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommandResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& CommandResponse::message() const {
  // @@protoc_insertion_point(field_get:CommandResponse.message)
  return message_.GetNoArena();
}
inline void CommandResponse::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CommandResponse.message)
}
#if LANG_CXX11
inline void CommandResponse::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CommandResponse.message)
}
#endif
inline void CommandResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CommandResponse.message)
}
inline void CommandResponse::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CommandResponse.message)
}
inline ::std::string* CommandResponse::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:CommandResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommandResponse::release_message() {
  // @@protoc_insertion_point(field_release:CommandResponse.message)
  if (!has_message()) {
    return NULL;
  }
  clear_has_message();
  return message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommandResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CommandResponse.message)
}

// optional .CommandResponseData data = 3;
inline bool CommandResponse::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CommandResponse::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CommandResponse::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CommandResponse::clear_data() {
  if (data_ != NULL) data_->Clear();
  clear_has_data();
}
inline const ::CommandResponseData& CommandResponse::_internal_data() const {
  return *data_;
}
inline const ::CommandResponseData& CommandResponse::data() const {
  const ::CommandResponseData* p = data_;
  // @@protoc_insertion_point(field_get:CommandResponse.data)
  return p != NULL ? *p : *reinterpret_cast<const ::CommandResponseData*>(
      &::_CommandResponseData_default_instance_);
}
inline ::CommandResponseData* CommandResponse::release_data() {
  // @@protoc_insertion_point(field_release:CommandResponse.data)
  clear_has_data();
  ::CommandResponseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::CommandResponseData* CommandResponse::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    auto* p = CreateMaybeMessage<::CommandResponseData>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CommandResponse.data)
  return data_;
}
inline void CommandResponse::set_allocated_data(::CommandResponseData* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete data_;
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    set_has_data();
  } else {
    clear_has_data();
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:CommandResponse.data)
}

// -------------------------------------------------------------------

// CommandResponseData

// optional .RadioConfiguration radio_cfg = 1;
inline bool CommandResponseData::has_radio_cfg() const {
  return kind_case() == kRadioCfg;
}
inline void CommandResponseData::set_has_radio_cfg() {
  _oneof_case_[0] = kRadioCfg;
}
inline void CommandResponseData::clear_radio_cfg() {
  if (has_radio_cfg()) {
    delete kind_.radio_cfg_;
    clear_has_kind();
  }
}
inline const ::RadioConfiguration& CommandResponseData::_internal_radio_cfg() const {
  return *kind_.radio_cfg_;
}
inline ::RadioConfiguration* CommandResponseData::release_radio_cfg() {
  // @@protoc_insertion_point(field_release:CommandResponseData.radio_cfg)
  if (has_radio_cfg()) {
    clear_has_kind();
      ::RadioConfiguration* temp = kind_.radio_cfg_;
    kind_.radio_cfg_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::RadioConfiguration& CommandResponseData::radio_cfg() const {
  // @@protoc_insertion_point(field_get:CommandResponseData.radio_cfg)
  return has_radio_cfg()
      ? *kind_.radio_cfg_
      : *reinterpret_cast< ::RadioConfiguration*>(&::_RadioConfiguration_default_instance_);
}
inline ::RadioConfiguration* CommandResponseData::mutable_radio_cfg() {
  if (!has_radio_cfg()) {
    clear_kind();
    set_has_radio_cfg();
    kind_.radio_cfg_ = CreateMaybeMessage< ::RadioConfiguration >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:CommandResponseData.radio_cfg)
  return kind_.radio_cfg_;
}

inline bool CommandResponseData::has_kind() const {
  return kind_case() != KIND_NOT_SET;
}
inline void CommandResponseData::clear_has_kind() {
  _oneof_case_[0] = KIND_NOT_SET;
}
inline CommandResponseData::KindCase CommandResponseData::kind_case() const {
  return CommandResponseData::KindCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// RadioConfiguration

// optional bytes address = 1;
inline bool RadioConfiguration::has_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RadioConfiguration::set_has_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RadioConfiguration::clear_has_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RadioConfiguration::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address();
}
inline const ::std::string& RadioConfiguration::address() const {
  // @@protoc_insertion_point(field_get:RadioConfiguration.address)
  return address_.GetNoArena();
}
inline void RadioConfiguration::set_address(const ::std::string& value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RadioConfiguration.address)
}
#if LANG_CXX11
inline void RadioConfiguration::set_address(::std::string&& value) {
  set_has_address();
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RadioConfiguration.address)
}
#endif
inline void RadioConfiguration::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RadioConfiguration.address)
}
inline void RadioConfiguration::set_address(const void* value, size_t size) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RadioConfiguration.address)
}
inline ::std::string* RadioConfiguration::mutable_address() {
  set_has_address();
  // @@protoc_insertion_point(field_mutable:RadioConfiguration.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RadioConfiguration::release_address() {
  // @@protoc_insertion_point(field_release:RadioConfiguration.address)
  if (!has_address()) {
    return NULL;
  }
  clear_has_address();
  return address_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RadioConfiguration::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    set_has_address();
  } else {
    clear_has_address();
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:RadioConfiguration.address)
}

// optional uint32 channel_frequency_mhz = 2;
inline bool RadioConfiguration::has_channel_frequency_mhz() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RadioConfiguration::set_has_channel_frequency_mhz() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RadioConfiguration::clear_has_channel_frequency_mhz() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RadioConfiguration::clear_channel_frequency_mhz() {
  channel_frequency_mhz_ = 0u;
  clear_has_channel_frequency_mhz();
}
inline ::google::protobuf::uint32 RadioConfiguration::channel_frequency_mhz() const {
  // @@protoc_insertion_point(field_get:RadioConfiguration.channel_frequency_mhz)
  return channel_frequency_mhz_;
}
inline void RadioConfiguration::set_channel_frequency_mhz(::google::protobuf::uint32 value) {
  set_has_channel_frequency_mhz();
  channel_frequency_mhz_ = value;
  // @@protoc_insertion_point(field_set:RadioConfiguration.channel_frequency_mhz)
}

// optional bool filter_unicast_destination = 3;
inline bool RadioConfiguration::has_filter_unicast_destination() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RadioConfiguration::set_has_filter_unicast_destination() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RadioConfiguration::clear_has_filter_unicast_destination() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RadioConfiguration::clear_filter_unicast_destination() {
  filter_unicast_destination_ = false;
  clear_has_filter_unicast_destination();
}
inline bool RadioConfiguration::filter_unicast_destination() const {
  // @@protoc_insertion_point(field_get:RadioConfiguration.filter_unicast_destination)
  return filter_unicast_destination_;
}
inline void RadioConfiguration::set_filter_unicast_destination(bool value) {
  set_has_filter_unicast_destination();
  filter_unicast_destination_ = value;
  // @@protoc_insertion_point(field_set:RadioConfiguration.filter_unicast_destination)
}

// optional sint32 default_tx_power_cbm = 4;
inline bool RadioConfiguration::has_default_tx_power_cbm() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RadioConfiguration::set_has_default_tx_power_cbm() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RadioConfiguration::clear_has_default_tx_power_cbm() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RadioConfiguration::clear_default_tx_power_cbm() {
  default_tx_power_cbm_ = 0;
  clear_has_default_tx_power_cbm();
}
inline ::google::protobuf::int32 RadioConfiguration::default_tx_power_cbm() const {
  // @@protoc_insertion_point(field_get:RadioConfiguration.default_tx_power_cbm)
  return default_tx_power_cbm_;
}
inline void RadioConfiguration::set_default_tx_power_cbm(::google::protobuf::int32 value) {
  set_has_default_tx_power_cbm();
  default_tx_power_cbm_ = value;
  // @@protoc_insertion_point(field_set:RadioConfiguration.default_tx_power_cbm)
}

// optional uint32 default_tx_datarate_500kbps = 5;
inline bool RadioConfiguration::has_default_tx_datarate_500kbps() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RadioConfiguration::set_has_default_tx_datarate_500kbps() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RadioConfiguration::clear_has_default_tx_datarate_500kbps() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RadioConfiguration::clear_default_tx_datarate_500kbps() {
  default_tx_datarate_500kbps_ = 0u;
  clear_has_default_tx_datarate_500kbps();
}
inline ::google::protobuf::uint32 RadioConfiguration::default_tx_datarate_500kbps() const {
  // @@protoc_insertion_point(field_get:RadioConfiguration.default_tx_datarate_500kbps)
  return default_tx_datarate_500kbps_;
}
inline void RadioConfiguration::set_default_tx_datarate_500kbps(::google::protobuf::uint32 value) {
  set_has_default_tx_datarate_500kbps();
  default_tx_datarate_500kbps_ = value;
  // @@protoc_insertion_point(field_set:RadioConfiguration.default_tx_datarate_500kbps)
}

// -------------------------------------------------------------------

// LinkLayerTransmission

// optional bytes source = 1;
inline bool LinkLayerTransmission::has_source() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LinkLayerTransmission::set_has_source() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LinkLayerTransmission::clear_has_source() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LinkLayerTransmission::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source();
}
inline const ::std::string& LinkLayerTransmission::source() const {
  // @@protoc_insertion_point(field_get:LinkLayerTransmission.source)
  return source_.GetNoArena();
}
inline void LinkLayerTransmission::set_source(const ::std::string& value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LinkLayerTransmission.source)
}
#if LANG_CXX11
inline void LinkLayerTransmission::set_source(::std::string&& value) {
  set_has_source();
  source_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LinkLayerTransmission.source)
}
#endif
inline void LinkLayerTransmission::set_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LinkLayerTransmission.source)
}
inline void LinkLayerTransmission::set_source(const void* value, size_t size) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LinkLayerTransmission.source)
}
inline ::std::string* LinkLayerTransmission::mutable_source() {
  set_has_source();
  // @@protoc_insertion_point(field_mutable:LinkLayerTransmission.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LinkLayerTransmission::release_source() {
  // @@protoc_insertion_point(field_release:LinkLayerTransmission.source)
  if (!has_source()) {
    return NULL;
  }
  clear_has_source();
  return source_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LinkLayerTransmission::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:LinkLayerTransmission.source)
}

// required bytes destination = 2;
inline bool LinkLayerTransmission::has_destination() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LinkLayerTransmission::set_has_destination() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LinkLayerTransmission::clear_has_destination() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LinkLayerTransmission::clear_destination() {
  destination_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_destination();
}
inline const ::std::string& LinkLayerTransmission::destination() const {
  // @@protoc_insertion_point(field_get:LinkLayerTransmission.destination)
  return destination_.GetNoArena();
}
inline void LinkLayerTransmission::set_destination(const ::std::string& value) {
  set_has_destination();
  destination_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LinkLayerTransmission.destination)
}
#if LANG_CXX11
inline void LinkLayerTransmission::set_destination(::std::string&& value) {
  set_has_destination();
  destination_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LinkLayerTransmission.destination)
}
#endif
inline void LinkLayerTransmission::set_destination(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_destination();
  destination_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LinkLayerTransmission.destination)
}
inline void LinkLayerTransmission::set_destination(const void* value, size_t size) {
  set_has_destination();
  destination_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LinkLayerTransmission.destination)
}
inline ::std::string* LinkLayerTransmission::mutable_destination() {
  set_has_destination();
  // @@protoc_insertion_point(field_mutable:LinkLayerTransmission.destination)
  return destination_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LinkLayerTransmission::release_destination() {
  // @@protoc_insertion_point(field_release:LinkLayerTransmission.destination)
  if (!has_destination()) {
    return NULL;
  }
  clear_has_destination();
  return destination_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LinkLayerTransmission::set_allocated_destination(::std::string* destination) {
  if (destination != NULL) {
    set_has_destination();
  } else {
    clear_has_destination();
  }
  destination_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destination);
  // @@protoc_insertion_point(field_set_allocated:LinkLayerTransmission.destination)
}

// required .LinkLayerPriority priority = 3;
inline bool LinkLayerTransmission::has_priority() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LinkLayerTransmission::set_has_priority() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LinkLayerTransmission::clear_has_priority() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LinkLayerTransmission::clear_priority() {
  priority_ = 0;
  clear_has_priority();
}
inline ::LinkLayerPriority LinkLayerTransmission::priority() const {
  // @@protoc_insertion_point(field_get:LinkLayerTransmission.priority)
  return static_cast< ::LinkLayerPriority >(priority_);
}
inline void LinkLayerTransmission::set_priority(::LinkLayerPriority value) {
  assert(::LinkLayerPriority_IsValid(value));
  set_has_priority();
  priority_ = value;
  // @@protoc_insertion_point(field_set:LinkLayerTransmission.priority)
}

// optional uint32 channel = 4;
inline bool LinkLayerTransmission::has_channel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LinkLayerTransmission::set_has_channel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LinkLayerTransmission::clear_has_channel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LinkLayerTransmission::clear_channel() {
  channel_ = 0u;
  clear_has_channel();
}
inline ::google::protobuf::uint32 LinkLayerTransmission::channel() const {
  // @@protoc_insertion_point(field_get:LinkLayerTransmission.channel)
  return channel_;
}
inline void LinkLayerTransmission::set_channel(::google::protobuf::uint32 value) {
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:LinkLayerTransmission.channel)
}

// optional uint32 datarate_500kbps = 5;
inline bool LinkLayerTransmission::has_datarate_500kbps() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LinkLayerTransmission::set_has_datarate_500kbps() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LinkLayerTransmission::clear_has_datarate_500kbps() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LinkLayerTransmission::clear_datarate_500kbps() {
  datarate_500kbps_ = 0u;
  clear_has_datarate_500kbps();
}
inline ::google::protobuf::uint32 LinkLayerTransmission::datarate_500kbps() const {
  // @@protoc_insertion_point(field_get:LinkLayerTransmission.datarate_500kbps)
  return datarate_500kbps_;
}
inline void LinkLayerTransmission::set_datarate_500kbps(::google::protobuf::uint32 value) {
  set_has_datarate_500kbps();
  datarate_500kbps_ = value;
  // @@protoc_insertion_point(field_set:LinkLayerTransmission.datarate_500kbps)
}

// optional sint32 power_cbm = 6;
inline bool LinkLayerTransmission::has_power_cbm() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LinkLayerTransmission::set_has_power_cbm() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LinkLayerTransmission::clear_has_power_cbm() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LinkLayerTransmission::clear_power_cbm() {
  power_cbm_ = 0;
  clear_has_power_cbm();
}
inline ::google::protobuf::int32 LinkLayerTransmission::power_cbm() const {
  // @@protoc_insertion_point(field_get:LinkLayerTransmission.power_cbm)
  return power_cbm_;
}
inline void LinkLayerTransmission::set_power_cbm(::google::protobuf::int32 value) {
  set_has_power_cbm();
  power_cbm_ = value;
  // @@protoc_insertion_point(field_set:LinkLayerTransmission.power_cbm)
}

// required bytes payload = 10;
inline bool LinkLayerTransmission::has_payload() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LinkLayerTransmission::set_has_payload() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LinkLayerTransmission::clear_has_payload() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LinkLayerTransmission::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_payload();
}
inline const ::std::string& LinkLayerTransmission::payload() const {
  // @@protoc_insertion_point(field_get:LinkLayerTransmission.payload)
  return payload_.GetNoArena();
}
inline void LinkLayerTransmission::set_payload(const ::std::string& value) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LinkLayerTransmission.payload)
}
#if LANG_CXX11
inline void LinkLayerTransmission::set_payload(::std::string&& value) {
  set_has_payload();
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LinkLayerTransmission.payload)
}
#endif
inline void LinkLayerTransmission::set_payload(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LinkLayerTransmission.payload)
}
inline void LinkLayerTransmission::set_payload(const void* value, size_t size) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LinkLayerTransmission.payload)
}
inline ::std::string* LinkLayerTransmission::mutable_payload() {
  set_has_payload();
  // @@protoc_insertion_point(field_mutable:LinkLayerTransmission.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LinkLayerTransmission::release_payload() {
  // @@protoc_insertion_point(field_release:LinkLayerTransmission.payload)
  if (!has_payload()) {
    return NULL;
  }
  clear_has_payload();
  return payload_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LinkLayerTransmission::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    set_has_payload();
  } else {
    clear_has_payload();
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:LinkLayerTransmission.payload)
}

// -------------------------------------------------------------------

// LinkLayerReception

// required bytes source = 1;
inline bool LinkLayerReception::has_source() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LinkLayerReception::set_has_source() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LinkLayerReception::clear_has_source() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LinkLayerReception::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source();
}
inline const ::std::string& LinkLayerReception::source() const {
  // @@protoc_insertion_point(field_get:LinkLayerReception.source)
  return source_.GetNoArena();
}
inline void LinkLayerReception::set_source(const ::std::string& value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LinkLayerReception.source)
}
#if LANG_CXX11
inline void LinkLayerReception::set_source(::std::string&& value) {
  set_has_source();
  source_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LinkLayerReception.source)
}
#endif
inline void LinkLayerReception::set_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LinkLayerReception.source)
}
inline void LinkLayerReception::set_source(const void* value, size_t size) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LinkLayerReception.source)
}
inline ::std::string* LinkLayerReception::mutable_source() {
  set_has_source();
  // @@protoc_insertion_point(field_mutable:LinkLayerReception.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LinkLayerReception::release_source() {
  // @@protoc_insertion_point(field_release:LinkLayerReception.source)
  if (!has_source()) {
    return NULL;
  }
  clear_has_source();
  return source_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LinkLayerReception::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:LinkLayerReception.source)
}

// required bytes destination = 2;
inline bool LinkLayerReception::has_destination() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LinkLayerReception::set_has_destination() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LinkLayerReception::clear_has_destination() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LinkLayerReception::clear_destination() {
  destination_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_destination();
}
inline const ::std::string& LinkLayerReception::destination() const {
  // @@protoc_insertion_point(field_get:LinkLayerReception.destination)
  return destination_.GetNoArena();
}
inline void LinkLayerReception::set_destination(const ::std::string& value) {
  set_has_destination();
  destination_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LinkLayerReception.destination)
}
#if LANG_CXX11
inline void LinkLayerReception::set_destination(::std::string&& value) {
  set_has_destination();
  destination_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LinkLayerReception.destination)
}
#endif
inline void LinkLayerReception::set_destination(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_destination();
  destination_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LinkLayerReception.destination)
}
inline void LinkLayerReception::set_destination(const void* value, size_t size) {
  set_has_destination();
  destination_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LinkLayerReception.destination)
}
inline ::std::string* LinkLayerReception::mutable_destination() {
  set_has_destination();
  // @@protoc_insertion_point(field_mutable:LinkLayerReception.destination)
  return destination_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LinkLayerReception::release_destination() {
  // @@protoc_insertion_point(field_release:LinkLayerReception.destination)
  if (!has_destination()) {
    return NULL;
  }
  clear_has_destination();
  return destination_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LinkLayerReception::set_allocated_destination(::std::string* destination) {
  if (destination != NULL) {
    set_has_destination();
  } else {
    clear_has_destination();
  }
  destination_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destination);
  // @@protoc_insertion_point(field_set_allocated:LinkLayerReception.destination)
}

// optional uint32 channel = 4;
inline bool LinkLayerReception::has_channel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LinkLayerReception::set_has_channel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LinkLayerReception::clear_has_channel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LinkLayerReception::clear_channel() {
  channel_ = 0u;
  clear_has_channel();
}
inline ::google::protobuf::uint32 LinkLayerReception::channel() const {
  // @@protoc_insertion_point(field_get:LinkLayerReception.channel)
  return channel_;
}
inline void LinkLayerReception::set_channel(::google::protobuf::uint32 value) {
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:LinkLayerReception.channel)
}

// optional sint32 power_cbm = 6;
inline bool LinkLayerReception::has_power_cbm() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LinkLayerReception::set_has_power_cbm() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LinkLayerReception::clear_has_power_cbm() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LinkLayerReception::clear_power_cbm() {
  power_cbm_ = 0;
  clear_has_power_cbm();
}
inline ::google::protobuf::int32 LinkLayerReception::power_cbm() const {
  // @@protoc_insertion_point(field_get:LinkLayerReception.power_cbm)
  return power_cbm_;
}
inline void LinkLayerReception::set_power_cbm(::google::protobuf::int32 value) {
  set_has_power_cbm();
  power_cbm_ = value;
  // @@protoc_insertion_point(field_set:LinkLayerReception.power_cbm)
}

// required bytes payload = 10;
inline bool LinkLayerReception::has_payload() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LinkLayerReception::set_has_payload() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LinkLayerReception::clear_has_payload() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LinkLayerReception::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_payload();
}
inline const ::std::string& LinkLayerReception::payload() const {
  // @@protoc_insertion_point(field_get:LinkLayerReception.payload)
  return payload_.GetNoArena();
}
inline void LinkLayerReception::set_payload(const ::std::string& value) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LinkLayerReception.payload)
}
#if LANG_CXX11
inline void LinkLayerReception::set_payload(::std::string&& value) {
  set_has_payload();
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LinkLayerReception.payload)
}
#endif
inline void LinkLayerReception::set_payload(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LinkLayerReception.payload)
}
inline void LinkLayerReception::set_payload(const void* value, size_t size) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LinkLayerReception.payload)
}
inline ::std::string* LinkLayerReception::mutable_payload() {
  set_has_payload();
  // @@protoc_insertion_point(field_mutable:LinkLayerReception.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LinkLayerReception::release_payload() {
  // @@protoc_insertion_point(field_release:LinkLayerReception.payload)
  if (!has_payload()) {
    return NULL;
  }
  clear_has_payload();
  return payload_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LinkLayerReception::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    set_has_payload();
  } else {
    clear_has_payload();
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:LinkLayerReception.payload)
}

// -------------------------------------------------------------------

// FacilityLayerTransmission

// required .FacilityLayerMessage msg = 1;
inline bool FacilityLayerTransmission::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacilityLayerTransmission::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacilityLayerTransmission::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacilityLayerTransmission::clear_msg() {
  if (msg_ != NULL) msg_->Clear();
  clear_has_msg();
}
inline const ::FacilityLayerMessage& FacilityLayerTransmission::_internal_msg() const {
  return *msg_;
}
inline const ::FacilityLayerMessage& FacilityLayerTransmission::msg() const {
  const ::FacilityLayerMessage* p = msg_;
  // @@protoc_insertion_point(field_get:FacilityLayerTransmission.msg)
  return p != NULL ? *p : *reinterpret_cast<const ::FacilityLayerMessage*>(
      &::_FacilityLayerMessage_default_instance_);
}
inline ::FacilityLayerMessage* FacilityLayerTransmission::release_msg() {
  // @@protoc_insertion_point(field_release:FacilityLayerTransmission.msg)
  clear_has_msg();
  ::FacilityLayerMessage* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline ::FacilityLayerMessage* FacilityLayerTransmission::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) {
    auto* p = CreateMaybeMessage<::FacilityLayerMessage>(GetArenaNoVirtual());
    msg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:FacilityLayerTransmission.msg)
  return msg_;
}
inline void FacilityLayerTransmission::set_allocated_msg(::FacilityLayerMessage* msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete msg_;
  }
  if (msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, msg, submessage_arena);
    }
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_ = msg;
  // @@protoc_insertion_point(field_set_allocated:FacilityLayerTransmission.msg)
}

// -------------------------------------------------------------------

// FacilityLayerReception

// required .FacilityLayerMessage msg = 1;
inline bool FacilityLayerReception::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacilityLayerReception::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacilityLayerReception::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacilityLayerReception::clear_msg() {
  if (msg_ != NULL) msg_->Clear();
  clear_has_msg();
}
inline const ::FacilityLayerMessage& FacilityLayerReception::_internal_msg() const {
  return *msg_;
}
inline const ::FacilityLayerMessage& FacilityLayerReception::msg() const {
  const ::FacilityLayerMessage* p = msg_;
  // @@protoc_insertion_point(field_get:FacilityLayerReception.msg)
  return p != NULL ? *p : *reinterpret_cast<const ::FacilityLayerMessage*>(
      &::_FacilityLayerMessage_default_instance_);
}
inline ::FacilityLayerMessage* FacilityLayerReception::release_msg() {
  // @@protoc_insertion_point(field_release:FacilityLayerReception.msg)
  clear_has_msg();
  ::FacilityLayerMessage* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline ::FacilityLayerMessage* FacilityLayerReception::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) {
    auto* p = CreateMaybeMessage<::FacilityLayerMessage>(GetArenaNoVirtual());
    msg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:FacilityLayerReception.msg)
  return msg_;
}
inline void FacilityLayerReception::set_allocated_msg(::FacilityLayerMessage* msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete msg_;
  }
  if (msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, msg, submessage_arena);
    }
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_ = msg;
  // @@protoc_insertion_point(field_set_allocated:FacilityLayerReception.msg)
}

// -------------------------------------------------------------------

// FacilityLayerMessage

// optional .CAMessage cam_msg = 1;
inline bool FacilityLayerMessage::has_cam_msg() const {
  return kind_case() == kCamMsg;
}
inline void FacilityLayerMessage::set_has_cam_msg() {
  _oneof_case_[0] = kCamMsg;
}
inline const ::CAMessage& FacilityLayerMessage::_internal_cam_msg() const {
  return *kind_.cam_msg_;
}
inline ::CAMessage* FacilityLayerMessage::release_cam_msg() {
  // @@protoc_insertion_point(field_release:FacilityLayerMessage.cam_msg)
  if (has_cam_msg()) {
    clear_has_kind();
      ::CAMessage* temp = kind_.cam_msg_;
    kind_.cam_msg_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::CAMessage& FacilityLayerMessage::cam_msg() const {
  // @@protoc_insertion_point(field_get:FacilityLayerMessage.cam_msg)
  return has_cam_msg()
      ? *kind_.cam_msg_
      : *reinterpret_cast< ::CAMessage*>(&::_CAMessage_default_instance_);
}
inline ::CAMessage* FacilityLayerMessage::mutable_cam_msg() {
  if (!has_cam_msg()) {
    clear_kind();
    set_has_cam_msg();
    kind_.cam_msg_ = CreateMaybeMessage< ::CAMessage >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:FacilityLayerMessage.cam_msg)
  return kind_.cam_msg_;
}

// optional .CPMessage cpm_msg = 2;
inline bool FacilityLayerMessage::has_cpm_msg() const {
  return kind_case() == kCpmMsg;
}
inline void FacilityLayerMessage::set_has_cpm_msg() {
  _oneof_case_[0] = kCpmMsg;
}
inline const ::CPMessage& FacilityLayerMessage::_internal_cpm_msg() const {
  return *kind_.cpm_msg_;
}
inline ::CPMessage* FacilityLayerMessage::release_cpm_msg() {
  // @@protoc_insertion_point(field_release:FacilityLayerMessage.cpm_msg)
  if (has_cpm_msg()) {
    clear_has_kind();
      ::CPMessage* temp = kind_.cpm_msg_;
    kind_.cpm_msg_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::CPMessage& FacilityLayerMessage::cpm_msg() const {
  // @@protoc_insertion_point(field_get:FacilityLayerMessage.cpm_msg)
  return has_cpm_msg()
      ? *kind_.cpm_msg_
      : *reinterpret_cast< ::CPMessage*>(&::_CPMessage_default_instance_);
}
inline ::CPMessage* FacilityLayerMessage::mutable_cpm_msg() {
  if (!has_cpm_msg()) {
    clear_kind();
    set_has_cpm_msg();
    kind_.cpm_msg_ = CreateMaybeMessage< ::CPMessage >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:FacilityLayerMessage.cpm_msg)
  return kind_.cpm_msg_;
}

inline bool FacilityLayerMessage::has_kind() const {
  return kind_case() != KIND_NOT_SET;
}
inline void FacilityLayerMessage::clear_has_kind() {
  _oneof_case_[0] = KIND_NOT_SET;
}
inline FacilityLayerMessage::KindCase FacilityLayerMessage::kind_case() const {
  return FacilityLayerMessage::KindCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ChannelBusyRatio

// required uint32 busy = 1;
inline bool ChannelBusyRatio::has_busy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChannelBusyRatio::set_has_busy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChannelBusyRatio::clear_has_busy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChannelBusyRatio::clear_busy() {
  busy_ = 0u;
  clear_has_busy();
}
inline ::google::protobuf::uint32 ChannelBusyRatio::busy() const {
  // @@protoc_insertion_point(field_get:ChannelBusyRatio.busy)
  return busy_;
}
inline void ChannelBusyRatio::set_busy(::google::protobuf::uint32 value) {
  set_has_busy();
  busy_ = value;
  // @@protoc_insertion_point(field_set:ChannelBusyRatio.busy)
}

// required uint32 total = 2;
inline bool ChannelBusyRatio::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChannelBusyRatio::set_has_total() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChannelBusyRatio::clear_has_total() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChannelBusyRatio::clear_total() {
  total_ = 0u;
  clear_has_total();
}
inline ::google::protobuf::uint32 ChannelBusyRatio::total() const {
  // @@protoc_insertion_point(field_get:ChannelBusyRatio.total)
  return total_;
}
inline void ChannelBusyRatio::set_total(::google::protobuf::uint32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:ChannelBusyRatio.total)
}

// -------------------------------------------------------------------

// GossipMessage

// optional .ChannelBusyRatio cbr = 1;
inline bool GossipMessage::has_cbr() const {
  return kind_case() == kCbr;
}
inline void GossipMessage::set_has_cbr() {
  _oneof_case_[0] = kCbr;
}
inline void GossipMessage::clear_cbr() {
  if (has_cbr()) {
    delete kind_.cbr_;
    clear_has_kind();
  }
}
inline const ::ChannelBusyRatio& GossipMessage::_internal_cbr() const {
  return *kind_.cbr_;
}
inline ::ChannelBusyRatio* GossipMessage::release_cbr() {
  // @@protoc_insertion_point(field_release:GossipMessage.cbr)
  if (has_cbr()) {
    clear_has_kind();
      ::ChannelBusyRatio* temp = kind_.cbr_;
    kind_.cbr_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::ChannelBusyRatio& GossipMessage::cbr() const {
  // @@protoc_insertion_point(field_get:GossipMessage.cbr)
  return has_cbr()
      ? *kind_.cbr_
      : *reinterpret_cast< ::ChannelBusyRatio*>(&::_ChannelBusyRatio_default_instance_);
}
inline ::ChannelBusyRatio* GossipMessage::mutable_cbr() {
  if (!has_cbr()) {
    clear_kind();
    set_has_cbr();
    kind_.cbr_ = CreateMaybeMessage< ::ChannelBusyRatio >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:GossipMessage.cbr)
  return kind_.cbr_;
}

// optional .LinkLayerReception linklayer_rx = 2;
inline bool GossipMessage::has_linklayer_rx() const {
  return kind_case() == kLinklayerRx;
}
inline void GossipMessage::set_has_linklayer_rx() {
  _oneof_case_[0] = kLinklayerRx;
}
inline void GossipMessage::clear_linklayer_rx() {
  if (has_linklayer_rx()) {
    delete kind_.linklayer_rx_;
    clear_has_kind();
  }
}
inline const ::LinkLayerReception& GossipMessage::_internal_linklayer_rx() const {
  return *kind_.linklayer_rx_;
}
inline ::LinkLayerReception* GossipMessage::release_linklayer_rx() {
  // @@protoc_insertion_point(field_release:GossipMessage.linklayer_rx)
  if (has_linklayer_rx()) {
    clear_has_kind();
      ::LinkLayerReception* temp = kind_.linklayer_rx_;
    kind_.linklayer_rx_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::LinkLayerReception& GossipMessage::linklayer_rx() const {
  // @@protoc_insertion_point(field_get:GossipMessage.linklayer_rx)
  return has_linklayer_rx()
      ? *kind_.linklayer_rx_
      : *reinterpret_cast< ::LinkLayerReception*>(&::_LinkLayerReception_default_instance_);
}
inline ::LinkLayerReception* GossipMessage::mutable_linklayer_rx() {
  if (!has_linklayer_rx()) {
    clear_kind();
    set_has_linklayer_rx();
    kind_.linklayer_rx_ = CreateMaybeMessage< ::LinkLayerReception >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:GossipMessage.linklayer_rx)
  return kind_.linklayer_rx_;
}

// optional .FacilityLayerReception facilitylayer_rx = 3;
inline bool GossipMessage::has_facilitylayer_rx() const {
  return kind_case() == kFacilitylayerRx;
}
inline void GossipMessage::set_has_facilitylayer_rx() {
  _oneof_case_[0] = kFacilitylayerRx;
}
inline void GossipMessage::clear_facilitylayer_rx() {
  if (has_facilitylayer_rx()) {
    delete kind_.facilitylayer_rx_;
    clear_has_kind();
  }
}
inline const ::FacilityLayerReception& GossipMessage::_internal_facilitylayer_rx() const {
  return *kind_.facilitylayer_rx_;
}
inline ::FacilityLayerReception* GossipMessage::release_facilitylayer_rx() {
  // @@protoc_insertion_point(field_release:GossipMessage.facilitylayer_rx)
  if (has_facilitylayer_rx()) {
    clear_has_kind();
      ::FacilityLayerReception* temp = kind_.facilitylayer_rx_;
    kind_.facilitylayer_rx_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::FacilityLayerReception& GossipMessage::facilitylayer_rx() const {
  // @@protoc_insertion_point(field_get:GossipMessage.facilitylayer_rx)
  return has_facilitylayer_rx()
      ? *kind_.facilitylayer_rx_
      : *reinterpret_cast< ::FacilityLayerReception*>(&::_FacilityLayerReception_default_instance_);
}
inline ::FacilityLayerReception* GossipMessage::mutable_facilitylayer_rx() {
  if (!has_facilitylayer_rx()) {
    clear_kind();
    set_has_facilitylayer_rx();
    kind_.facilitylayer_rx_ = CreateMaybeMessage< ::FacilityLayerReception >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:GossipMessage.facilitylayer_rx)
  return kind_.facilitylayer_rx_;
}

inline bool GossipMessage::has_kind() const {
  return kind_case() != KIND_NOT_SET;
}
inline void GossipMessage::clear_has_kind() {
  _oneof_case_[0] = KIND_NOT_SET;
}
inline GossipMessage::KindCase GossipMessage::kind_case() const {
  return GossipMessage::KindCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::CommandResponse_Status> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CommandResponse_Status>() {
  return ::CommandResponse_Status_descriptor();
}
template <> struct is_proto_enum< ::LifecycleAction> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LifecycleAction>() {
  return ::LifecycleAction_descriptor();
}
template <> struct is_proto_enum< ::LinkLayerPriority> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LinkLayerPriority>() {
  return ::LinkLayerPriority_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_etsi_5fmsg_5finterface_2eproto
